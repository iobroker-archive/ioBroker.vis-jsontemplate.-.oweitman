{"version":3,"file":"static/js/vendors-node_modules_react-ace_lib_index_js.777e9751.chunk.js","mappings":"iMAAAA,IAAIC,OAAO,YAAY,CAAC,UAAU,UAAU,SAAS,cAAc,eAAe,wBAAwB,aAAa,uBAAuB,qBAAqB,SAASC,EAASC,EAASC,GAAQ,aACtM,IAMIC,EANAC,EAAMJ,EAAQ,aAEdK,GADOL,EAAQ,cACAA,EAAQ,uBAAuBK,cAC9CC,EAASN,EAAQ,YAAYM,OAC7BC,EAAWP,EAAQ,sBAAsBQ,gBACzCC,EAAcT,EAAQ,kBAAkBS,aAiB5C,WACIL,EAAIM,UAAUC,KAAMN,GACpBM,KAAKC,cAAgB,WACjB,IAAIC,EAAKC,SAASC,cAAc,OAChCF,EAAGG,UAAYL,KAAKM,WACpBJ,EAAGK,MAAMC,QAAU,0CACnBR,KAAKS,WAAWC,YAAYR,GAC5B,IAAIS,EAAS,IAAIhB,EAAO,IAAIC,EAASM,EAAIF,KAAKY,SAM9C,OALAD,EAAOE,GAAG,QAAS,WACfb,KAAKc,MAAM,QAASH,EACxB,EAAEI,KAAKf,OACPA,KAAKgB,SAASC,KAAKN,GACnBA,EAAOO,YAAYlB,KAAKmB,WACjBR,CACX,EACAX,KAAKoB,UAAY,SAAUC,GACvB,IAAIV,EACJ,GAAIU,EAAS,EACT,KAAM,uCAEV,GAAIA,GAAUrB,KAAKsB,QAAnB,CAGK,GAAID,EAASrB,KAAKsB,QAAS,CAC5B,KAAOtB,KAAKsB,QAAUtB,KAAKgB,SAASO,QAAUvB,KAAKsB,QAAUD,GACzDV,EAASX,KAAKgB,SAAShB,KAAKsB,SAC5BtB,KAAKS,WAAWC,YAAYC,EAAOa,WACnCb,EAAOO,YAAYlB,KAAKmB,WACxBnB,KAAKsB,UAET,KAAOtB,KAAKsB,QAAUD,GAClBrB,KAAKC,gBACLD,KAAKsB,SAEb,MAEI,KAAOtB,KAAKsB,QAAUD,GAClBV,EAASX,KAAKgB,SAAShB,KAAKsB,QAAU,GACtCtB,KAAKS,WAAWgB,YAAYd,EAAOa,WACnCxB,KAAKsB,UAGbtB,KAAK0B,QADL,CAEJ,EACA1B,KAAK2B,UAAY,WACb,OAAO3B,KAAKsB,OAChB,EACAtB,KAAK4B,UAAY,SAAUC,GACvB,OAAO7B,KAAKgB,SAASa,EACzB,EACA7B,KAAK8B,iBAAmB,WACpB,OAAO9B,KAAK+B,QAChB,EACA/B,KAAKgC,MAAQ,WACThC,KAAK+B,SAASC,OAClB,EACAhC,KAAKiC,KAAO,WACRjC,KAAK+B,SAASE,MAClB,EACAjC,KAAKkC,SAAW,SAAUC,GACtBnC,KAAKgB,SAASoB,SAAQ,SAAUzB,GAC5BA,EAAOuB,SAASC,EACpB,GACJ,EACAnC,KAAKqC,mBAAqB,SAAUC,GAChCtC,KAAKgB,SAASoB,SAAQ,SAAUzB,GAC5BA,EAAO0B,mBAAmBC,EAC9B,GACJ,EACAtC,KAAKoC,QAAU,SAAUG,EAAUC,GAC/BxC,KAAKgB,SAASoB,QAAQG,EAAUC,EACpC,EACAxC,KAAKmB,UAAY,GACjBnB,KAAKkB,YAAc,SAAUuB,GACzBzC,KAAKmB,UAAYsB,EACjBzC,KAAKoC,SAAQ,SAAUzB,GACnBA,EAAOO,YAAYuB,EACvB,GACJ,EACAzC,KAAK0C,cAAgB,SAAUC,GAC3B,IAAIC,EAAI,IAAI9C,EAAY6C,EAAQE,cAAeF,EAAQG,WACnDC,EAAcJ,EAAQK,iBAU1B,OATAJ,EAAEK,eAAeF,GACjBH,EAAEM,WAAWP,EAAQQ,cACrBP,EAAEQ,eAAeT,EAAQU,kBACzBT,EAAEU,aAAaX,EAAQY,gBACvBX,EAAEY,eAAeb,EAAQc,kBACzBb,EAAEc,eAAef,EAAQgB,kBACzBf,EAAEgB,aAAajB,EAAQkB,gBACvBjB,EAAEkB,kBAAkBnB,EAAQoB,gBAAgBC,IAAKrB,EAAQoB,gBAAgBE,KACzErB,EAAEsB,UAAYvB,EAAQwB,iBACfvB,CACX,EACA5C,KAAKoE,WAAa,SAAUzB,EAASd,GACjC,IAAIlB,EAEAA,EADO,MAAPkB,EACS7B,KAAK+B,SAGL/B,KAAKgB,SAASa,GAE3B,IAAIwC,EAASrE,KAAKgB,SAASsD,MAAK,SAAU3D,GACtC,OAAOA,EAAOgC,UAAYA,CAC9B,IAKA,OAJI0B,IACA1B,EAAU3C,KAAK0C,cAAcC,IAEjChC,EAAOyD,WAAWzB,GACXA,CACX,EACA3C,KAAKuE,eAAiB,WAClB,OAAOvE,KAAKwE,YAChB,EACAxE,KAAKyE,eAAiB,SAAUC,GACxB1E,KAAKwE,cAAgBE,IAGzB1E,KAAKwE,aAAeE,EACpB1E,KAAK0B,SACT,EACA1B,KAAK0B,OAAS,WACV,IAEIf,EAFAgE,EAAQ3E,KAAKS,WAAWmE,YACxBC,EAAS7E,KAAKS,WAAWqE,aAE7B,GAAI9E,KAAKwE,cAAgBxE,KAAK+E,OAE1B,IADA,IAAIC,EAAcL,EAAQ3E,KAAKsB,QACtB2D,EAAI,EAAGA,EAAIjF,KAAKsB,QAAS2D,KAC9BtE,EAASX,KAAKgB,SAASiE,IAChBzD,UAAUjB,MAAMoE,MAAQK,EAAc,KAC7CrE,EAAOa,UAAUjB,MAAM2E,IAAM,MAC7BvE,EAAOa,UAAUjB,MAAM4E,KAAOF,EAAID,EAAc,KAChDrE,EAAOa,UAAUjB,MAAMsE,OAASA,EAAS,KACzClE,EAAOe,aAIX,KAAI0D,EAAeP,EAAS7E,KAAKsB,QACjC,IAAS2D,EAAI,EAAGA,EAAIjF,KAAKsB,QAAS2D,KAC9BtE,EAASX,KAAKgB,SAASiE,IAChBzD,UAAUjB,MAAMoE,MAAQA,EAAQ,KACvChE,EAAOa,UAAUjB,MAAM2E,IAAMD,EAAIG,EAAe,KAChDzE,EAAOa,UAAUjB,MAAM4E,KAAO,MAC9BxE,EAAOa,UAAUjB,MAAMsE,OAASO,EAAe,KAC/CzE,EAAOe,QAP6B,CAUhD,CACH,GAAE2D,MAlKH7F,EAAQ,SAAUgC,EAAWW,EAAOd,GAChCrB,KAAKsF,MAAQ,EACbtF,KAAK+E,OAAS,EACd/E,KAAKS,WAAae,EAClBxB,KAAKY,OAASuB,EACdnC,KAAKsB,QAAU,EACftB,KAAKM,WAAa,GAClBN,KAAKgB,SAAW,GAChBhB,KAAKwE,aAAexE,KAAK+E,OACzB/E,KAAKoB,UAAUC,GAAU,GACzBrB,KAAK+B,SAAW/B,KAAKgB,SAAS,GAC9BhB,KAAKa,GAAG,QAAS,SAAUF,GACvBX,KAAK+B,SAAWpB,CACpB,EAAEI,KAAKf,MACX,GAoJcuF,WACdjG,EAAQE,MAAQA,CAEhB,IAEAL,IAAIC,OAAO,gBAAgB,CAAC,UAAU,UAAU,SAAS,cAAc,SAASC,EAASC,EAASC,GAAQ,aAC1GA,EAAOD,QAAUD,EAAQ,WAEzB,IACoBF,IAAIE,QAAQ,CAAC,kBAAkB,SAASmG,GAC2BjG,IAC3DA,EAAOD,QAAUkG,EAEzB,G,YC3JpB,IAAIC,EAAmB,WAMrBzF,KAAK0F,aAAe,EAEpB1F,KAAK2F,cAAgB,EAErB3F,KAAK4F,gBAAkB,GAIvB5F,KAAK6F,eAAiB,IAKtB7F,KAAK8F,sBAAwB,GAE7B9F,KAAK+F,aAAe,EAGpB/F,KAAKgG,cAAgB,EACvB,EAWIC,GAAe,EAanBR,EAAiBS,KAAO,SAASC,EAAIC,GACnC,MAAO,CAACD,EAAIC,EACd,EAeAX,EAAiBF,UAAUc,UAAY,SAASC,EAAOC,EAAOC,EAC1DC,GAEyB,oBAAhBA,IAEPA,EADEzG,KAAK0F,cAAgB,EACRgB,OAAOC,WAEN,IAAIC,MAAMC,UAAgC,IAApB7G,KAAK0F,cAG/C,IAAIoB,EAAWL,EAGf,GAAa,MAATH,GAA0B,MAATC,EACnB,MAAM,IAAIQ,MAAM,2BAIlB,GAAIT,GAASC,EACX,OAAID,EACK,CAAC,IAAIb,EAAiBS,KAhDlB,EAgDmCI,IAEzC,GAGoB,oBAAlBE,IACTA,GAAiB,GAEnB,IAAIQ,EAAaR,EAGbS,EAAejH,KAAKkH,kBAAkBZ,EAAOC,GAC7CY,EAAeb,EAAMc,UAAU,EAAGH,GACtCX,EAAQA,EAAMc,UAAUH,GACxBV,EAAQA,EAAMa,UAAUH,GAGxBA,EAAejH,KAAKqH,kBAAkBf,EAAOC,GAC7C,IAAIe,EAAehB,EAAMc,UAAUd,EAAM/E,OAAS0F,GAClDX,EAAQA,EAAMc,UAAU,EAAGd,EAAM/E,OAAS0F,GAC1CV,EAAQA,EAAMa,UAAU,EAAGb,EAAMhF,OAAS0F,GAG1C,IAAIM,EAAQvH,KAAKwH,cAAclB,EAAOC,EAAOS,EAAYF,GAUzD,OAPIK,GACFI,EAAME,QAAQ,IAAIhC,EAAiBS,KA3EtB,EA2EuCiB,IAElDG,GACFC,EAAMtG,KAAK,IAAIwE,EAAiBS,KA9EnB,EA8EoCoB,IAEnDtH,KAAK0H,kBAAkBH,GAChBA,CACT,EAeA9B,EAAiBF,UAAUiC,cAAgB,SAASlB,EAAOC,EAAOS,EAC9DF,GACF,IAAIS,EAEJ,IAAKjB,EAEH,MAAO,CAAC,IAAIb,EAAiBS,KAxGf,EAwGiCK,IAGjD,IAAKA,EAEH,MAAO,CAAC,IAAId,EAAiBS,KAAKD,EAAaK,IAGjD,IAAIqB,EAAWrB,EAAM/E,OAASgF,EAAMhF,OAAS+E,EAAQC,EACjDqB,EAAYtB,EAAM/E,OAASgF,EAAMhF,OAASgF,EAAQD,EAClDrB,EAAI0C,EAASE,QAAQD,GACzB,IAAU,GAAN3C,EAUF,OARAsC,EAAQ,CAAC,IAAI9B,EAAiBS,KArHhB,EAqHkCyB,EAASP,UAAU,EAAGnC,IAC7D,IAAIQ,EAAiBS,KArHjB,EAqHkC0B,GACtC,IAAInC,EAAiBS,KAvHhB,EAwHDyB,EAASP,UAAUnC,EAAI2C,EAAUrG,UAE1C+E,EAAM/E,OAASgF,EAAMhF,SACvBgG,EAAM,GAAG,GAAKA,EAAM,GAAG,GAAKtB,GAEvBsB,EAGT,GAAwB,GAApBK,EAAUrG,OAGZ,MAAO,CAAC,IAAIkE,EAAiBS,KAAKD,EAAaK,GACvC,IAAIb,EAAiBS,KApIf,EAoIiCK,IAIjD,IAAIuB,EAAK9H,KAAK+H,gBAAgBzB,EAAOC,GACrC,GAAIuB,EAAI,CAEN,IAAIE,EAAUF,EAAG,GACbG,EAAUH,EAAG,GACbI,EAAUJ,EAAG,GACbK,EAAUL,EAAG,GACbM,EAAaN,EAAG,GAEhBO,EAAUrI,KAAKqG,UAAU2B,EAASE,EAASlB,EAAYF,GACvDwB,EAAUtI,KAAKqG,UAAU4B,EAASE,EAASnB,EAAYF,GAE3D,OAAOuB,EAAQE,OAAO,CAAC,IAAI9C,EAAiBS,KAnJ/B,EAmJgDkC,IACvCE,EACxB,CAEA,OAAItB,GAAcV,EAAM/E,OAAS,KAAOgF,EAAMhF,OAAS,IAC9CvB,KAAKwI,eAAelC,EAAOC,EAAOO,GAGpC9G,KAAKyI,aAAanC,EAAOC,EAAOO,EACzC,EAaArB,EAAiBF,UAAUiD,eAAiB,SAASlC,EAAOC,EAAOO,GAEjE,IAAI4B,EAAI1I,KAAK2I,mBAAmBrC,EAAOC,GACvCD,EAAQoC,EAAEE,OACVrC,EAAQmC,EAAEG,OACV,IAAIC,EAAYJ,EAAEK,UAEdxB,EAAQvH,KAAKqG,UAAUC,EAAOC,GAAO,EAAOO,GAGhD9G,KAAKgJ,mBAAmBzB,EAAOuB,GAE/B9I,KAAKiJ,qBAAqB1B,GAI1BA,EAAMtG,KAAK,IAAIwE,EAAiBS,KAzLjB,EAyLkC,KAMjD,IALA,IAAIgD,EAAU,EACVC,EAAe,EACfC,EAAe,EACfC,EAAc,GACdC,EAAc,GACXJ,EAAU3B,EAAMhG,QAAQ,CAC7B,OAAQgG,EAAM2B,GAAS,IACrB,KAlMY,EAmMVE,IACAE,GAAe/B,EAAM2B,GAAS,GAC9B,MACF,KAAKjD,EACHkD,IACAE,GAAe9B,EAAM2B,GAAS,GAC9B,MACF,KAzMW,EA2MT,GAAIC,GAAgB,GAAKC,GAAgB,EAAG,CAE1C7B,EAAMgC,OAAOL,EAAUC,EAAeC,EACzBD,EAAeC,GAC5BF,EAAUA,EAAUC,EAAeC,EAGnC,IAFA,IAAII,EACAxJ,KAAKqG,UAAUgD,EAAaC,GAAa,EAAOxC,GAC3C2C,EAAID,EAAQjI,OAAS,EAAGkI,GAAK,EAAGA,IACvClC,EAAMgC,OAAOL,EAAS,EAAGM,EAAQC,IAEnCP,GAAoBM,EAAQjI,MAC9B,CACA6H,EAAe,EACfD,EAAe,EACfE,EAAc,GACdC,EAAc,GAGlBJ,GACF,CAGA,OAFA3B,EAAMmC,MAECnC,CACT,EAaA9B,EAAiBF,UAAUkD,aAAe,SAASnC,EAAOC,EAAOO,GAW/D,IATA,IAAI6C,EAAerD,EAAM/E,OACrBqI,EAAerD,EAAMhF,OACrBsI,EAAQC,KAAKC,MAAMJ,EAAeC,GAAgB,GAClDI,EAAWH,EACXI,EAAW,EAAIJ,EACfK,EAAK,IAAIC,MAAMF,GACfG,EAAK,IAAID,MAAMF,GAGVI,EAAI,EAAGA,EAAIJ,EAAUI,IAC5BH,EAAGG,IAAM,EACTD,EAAGC,IAAM,EAEXH,EAAGF,EAAW,GAAK,EACnBI,EAAGJ,EAAW,GAAK,EAWnB,IAVA,IAAIM,EAAQX,EAAeC,EAGvBW,EAASD,EAAQ,GAAK,EAGtBE,EAAU,EACVC,EAAQ,EACRC,EAAU,EACVC,EAAQ,EACHC,EAAI,EAAGA,EAAIf,MAEb,IAAIjD,MAAQC,UAAYC,GAFJ8D,IAAK,CAO9B,IAAK,IAAIC,GAAMD,EAAIJ,EAASK,GAAMD,EAAIH,EAAOI,GAAM,EAAG,CASpD,IARA,IAAIC,EAAYd,EAAWa,EAOvBE,GAJFC,EADEH,IAAOD,GAAMC,GAAMD,GAAKV,EAAGY,EAAY,GAAKZ,EAAGY,EAAY,GACxDZ,EAAGY,EAAY,GAEfZ,EAAGY,EAAY,GAAK,GAEbD,EACPG,EAAKrB,GAAgBoB,EAAKnB,GAC1BtD,EAAM2E,OAAOD,IAAOzE,EAAM0E,OAAOF,IACtCC,IACAD,IAGF,GADAb,EAAGY,GAAaE,EACZA,EAAKrB,EAEPc,GAAS,OACJ,GAAIM,EAAKnB,EAEdY,GAAW,OACN,GAAID,EAAO,CAEhB,IADIW,EAAYlB,EAAWM,EAAQO,IAClB,GAAKK,EAAYjB,IAA8B,GAAlBG,EAAGc,GAG/C,GAAIF,IADAG,EAAKxB,EAAeS,EAAGc,IAGzB,OAAOlL,KAAKoL,kBAAkB9E,EAAOC,EAAOyE,EAAID,EAAIjE,EAG1D,CACF,CAGA,IAAK,IAAIuE,GAAMT,EAAIF,EAASW,GAAMT,EAAID,EAAOU,GAAM,EAAG,CASpD,IARA,IACIF,EADAD,EAAYlB,EAAWqB,EAOvBC,GAJFH,EADEE,IAAOT,GAAMS,GAAMT,GAAKR,EAAGc,EAAY,GAAKd,EAAGc,EAAY,GACxDd,EAAGc,EAAY,GAEfd,EAAGc,EAAY,GAAK,GAEbG,EACPF,EAAKxB,GAAgB2B,EAAK1B,GAC1BtD,EAAM2E,OAAOtB,EAAewB,EAAK,IACjC5E,EAAM0E,OAAOrB,EAAe0B,EAAK,IACtCH,IACAG,IAGF,GADAlB,EAAGc,GAAaC,EACZA,EAAKxB,EAEPgB,GAAS,OACJ,GAAIW,EAAK1B,EAEdc,GAAW,OACN,IAAKH,EAAO,CAEjB,IADIO,EAAYd,EAAWM,EAAQe,IAClB,GAAKP,EAAYb,IAA8B,GAAlBC,EAAGY,GAAkB,CACjE,IAAIE,EACAD,EAAKf,GADLgB,EAAKd,EAAGY,IACaA,EAGzB,GAAIE,IADJG,EAAKxB,EAAewB,GAGlB,OAAOnL,KAAKoL,kBAAkB9E,EAAOC,EAAOyE,EAAID,EAAIjE,EAExD,CACF,CACF,CACF,CAGA,MAAO,CAAC,IAAIrB,EAAiBS,KAAKD,EAAaK,GACvC,IAAIb,EAAiBS,KA7Vb,EA6V+BK,GACjD,EAcAd,EAAiBF,UAAU6F,kBAAoB,SAAS9E,EAAOC,EAAO8D,EAAGkB,EACrEzE,GACF,IAAI0E,EAASlF,EAAMc,UAAU,EAAGiD,GAC5BoB,EAASlF,EAAMa,UAAU,EAAGmE,GAC5BG,EAASpF,EAAMc,UAAUiD,GACzBsB,EAASpF,EAAMa,UAAUmE,GAGzBhE,EAAQvH,KAAKqG,UAAUmF,EAAQC,GAAQ,EAAO3E,GAC9C8E,EAAS5L,KAAKqG,UAAUqF,EAAQC,GAAQ,EAAO7E,GAEnD,OAAOS,EAAMgB,OAAOqD,EACtB,EAcAnG,EAAiBF,UAAUoD,mBAAqB,SAASrC,EAAOC,GAC9D,IAAIwC,EAAY,GACZ8C,EAAW,CAAC,EAchB,SAASC,EAAwB1F,GAS/B,IARA,IAAI2F,EAAQ,GAIRC,EAAY,EACZC,GAAW,EAEXC,EAAkBnD,EAAUxH,OACzB0K,EAAU7F,EAAK7E,OAAS,GAAG,EAEhB,IADhB0K,EAAU7F,EAAKyB,QAAQ,KAAMmE,MAE3BC,EAAU7F,EAAK7E,OAAS,GAE1B,IAAI4K,EAAO/F,EAAKgB,UAAU4E,EAAWC,EAAU,IAE3CJ,EAASO,eAAiBP,EAASO,eAAeD,QAC9BE,IAAnBR,EAASM,IACZJ,GAASO,OAAOC,aAAaV,EAASM,KAElCD,GAAmBM,IAGrBL,EAAO/F,EAAKgB,UAAU4E,GACtBC,EAAU7F,EAAK7E,QAEjBwK,GAASO,OAAOC,aAAaL,GAC7BL,EAASM,GAAQD,EACjBnD,EAAUmD,KAAqBC,GAEjCH,EAAYC,EAAU,CACxB,CACA,OAAOF,CACT,CA3CAhD,EAAU,GAAK,GA6Cf,IAAIyD,EAAW,IACX5D,EAASkD,EAAwBxF,GAGrC,OAFAkG,EAAW,MAEJ,CAAC5D,OAAQA,EAAQC,OADXiD,EAAwBvF,GACGwC,UAAWA,EACrD,EAUAtD,EAAiBF,UAAUyD,mBAAqB,SAASzB,EAAOwB,GAC9D,IAAK,IAAI9D,EAAI,EAAGA,EAAIsC,EAAMhG,OAAQ0D,IAAK,CAGrC,IAFA,IAAI8G,EAAQxE,EAAMtC,GAAG,GACjBmB,EAAO,GACFqD,EAAI,EAAGA,EAAIsC,EAAMxK,OAAQkI,IAChCrD,EAAKqD,GAAKV,EAAUgD,EAAMU,WAAWhD,IAEvClC,EAAMtC,GAAG,GAAKmB,EAAKsG,KAAK,GAC1B,CACF,EAUAjH,EAAiBF,UAAU2B,kBAAoB,SAASZ,EAAOC,GAE7D,IAAKD,IAAUC,GAASD,EAAM2E,OAAO,IAAM1E,EAAM0E,OAAO,GACtD,OAAO,EAQT,IAJA,IAAI0B,EAAa,EACbC,EAAa9C,KAAK9F,IAAIsC,EAAM/E,OAAQgF,EAAMhF,QAC1CsL,EAAaD,EACbE,EAAe,EACZH,EAAaE,GACdvG,EAAMc,UAAU0F,EAAcD,IAC9BtG,EAAMa,UAAU0F,EAAcD,GAEhCC,EADAH,EAAaE,EAGbD,EAAaC,EAEfA,EAAa/C,KAAKiD,OAAOH,EAAaD,GAAc,EAAIA,GAE1D,OAAOE,CACT,EASApH,EAAiBF,UAAU8B,kBAAoB,SAASf,EAAOC,GAE7D,IAAKD,IAAUC,GACXD,EAAM2E,OAAO3E,EAAM/E,OAAS,IAAMgF,EAAM0E,OAAO1E,EAAMhF,OAAS,GAChE,OAAO,EAQT,IAJA,IAAIoL,EAAa,EACbC,EAAa9C,KAAK9F,IAAIsC,EAAM/E,OAAQgF,EAAMhF,QAC1CsL,EAAaD,EACbI,EAAa,EACVL,EAAaE,GACdvG,EAAMc,UAAUd,EAAM/E,OAASsL,EAAYvG,EAAM/E,OAASyL,IAC1DzG,EAAMa,UAAUb,EAAMhF,OAASsL,EAAYtG,EAAMhF,OAASyL,GAE5DA,EADAL,EAAaE,EAGbD,EAAaC,EAEfA,EAAa/C,KAAKiD,OAAOH,EAAaD,GAAc,EAAIA,GAE1D,OAAOE,CACT,EAWApH,EAAiBF,UAAU0H,oBAAsB,SAAS3G,EAAOC,GAE/D,IAAIoD,EAAerD,EAAM/E,OACrBqI,EAAerD,EAAMhF,OAEzB,GAAoB,GAAhBoI,GAAqC,GAAhBC,EACvB,OAAO,EAGLD,EAAeC,EACjBtD,EAAQA,EAAMc,UAAUuC,EAAeC,GAC9BD,EAAeC,IACxBrD,EAAQA,EAAMa,UAAU,EAAGuC,IAE7B,IAAIuD,EAAcpD,KAAK9F,IAAI2F,EAAcC,GAEzC,GAAItD,GAASC,EACX,OAAO2G,EAQT,IAFA,IAAIC,EAAO,EACP5L,EAAS,IACA,CACX,IAAI6L,EAAU9G,EAAMc,UAAU8F,EAAc3L,GACxC8L,EAAQ9G,EAAMsB,QAAQuF,GAC1B,IAAc,GAAVC,EACF,OAAOF,EAET5L,GAAU8L,EACG,GAATA,GAAc/G,EAAMc,UAAU8F,EAAc3L,IAC5CgF,EAAMa,UAAU,EAAG7F,KACrB4L,EAAO5L,EACPA,IAEJ,CACF,EAcAkE,EAAiBF,UAAUwC,gBAAkB,SAASzB,EAAOC,GAC3D,GAAIvG,KAAK0F,cAAgB,EAEvB,OAAO,KAET,IAAIiC,EAAWrB,EAAM/E,OAASgF,EAAMhF,OAAS+E,EAAQC,EACjDqB,EAAYtB,EAAM/E,OAASgF,EAAMhF,OAASgF,EAAQD,EACtD,GAAIqB,EAASpG,OAAS,GAAwB,EAAnBqG,EAAUrG,OAAaoG,EAASpG,OACzD,OAAO,KAET,IAAI+L,EAAMtN,KAcV,SAASuN,EAAiB5F,EAAUC,EAAW3C,GAM7C,IAJA,IAGIuI,EAAiBC,EAAiBC,EAAkBC,EAHpDC,EAAOjG,EAASP,UAAUnC,EAAGA,EAAI6E,KAAKiD,MAAMpF,EAASpG,OAAS,IAC9DkI,GAAK,EACLoE,EAAc,IAE8B,IAAxCpE,EAAI7B,EAAUC,QAAQ+F,EAAMnE,EAAI,KAAW,CACjD,IAAIqE,EAAeR,EAAIpG,kBAAkBS,EAASP,UAAUnC,GACnB2C,EAAUR,UAAUqC,IACzDsE,EAAeT,EAAIjG,kBAAkBM,EAASP,UAAU,EAAGnC,GACtB2C,EAAUR,UAAU,EAAGqC,IAC5DoE,EAAYtM,OAASwM,EAAeD,IACtCD,EAAcjG,EAAUR,UAAUqC,EAAIsE,EAActE,GAChD7B,EAAUR,UAAUqC,EAAGA,EAAIqE,GAC/BN,EAAkB7F,EAASP,UAAU,EAAGnC,EAAI8I,GAC5CN,EAAkB9F,EAASP,UAAUnC,EAAI6I,GACzCJ,EAAmB9F,EAAUR,UAAU,EAAGqC,EAAIsE,GAC9CJ,EAAmB/F,EAAUR,UAAUqC,EAAIqE,GAE/C,CACA,OAAyB,EAArBD,EAAYtM,QAAcoG,EAASpG,OAC9B,CAACiM,EAAiBC,EACjBC,EAAkBC,EAAkBE,GAErC,IAEX,CAGA,IAKI/F,EAaAE,EAASC,EAASC,EAASC,EAlB3B6F,EAAMT,EAAiB5F,EAAUC,EACVkC,KAAKC,KAAKpC,EAASpG,OAAS,IAEnD0M,EAAMV,EAAiB5F,EAAUC,EACVkC,KAAKC,KAAKpC,EAASpG,OAAS,IAEvD,OAAKyM,GAAQC,GAQXnG,EANUmG,EAEAD,GAILA,EAAI,GAAGzM,OAAS0M,EAAI,GAAG1M,OAASyM,EAHhCC,EAFAD,EAUH1H,EAAM/E,OAASgF,EAAMhF,QACvByG,EAAUF,EAAG,GACbG,EAAUH,EAAG,GACbI,EAAUJ,EAAG,GACbK,EAAUL,EAAG,KAEbI,EAAUJ,EAAG,GACbK,EAAUL,EAAG,GACbE,EAAUF,EAAG,GACbG,EAAUH,EAAG,IAGR,CAACE,EAASC,EAASC,EAASC,EADlBL,EAAG,KAvBX,IAyBX,EAOArC,EAAiBF,UAAU0D,qBAAuB,SAAS1B,GAczD,IAbA,IAAI2G,GAAU,EACVC,EAAa,GACbC,EAAmB,EAEnBC,EAAe,KAEfnF,EAAU,EAEVoF,EAAqB,EACrBC,EAAoB,EAEpBC,EAAqB,EACrBC,EAAoB,EACjBvF,EAAU3B,EAAMhG,QAzrBR,GA0rBTgG,EAAM2B,GAAS,IACjBiF,EAAWC,KAAsBlF,EACjCoF,EAAqBE,EACrBD,EAAoBE,EACpBD,EAAqB,EACrBC,EAAoB,EACpBJ,EAAe9G,EAAM2B,GAAS,KAjsBlB,GAmsBR3B,EAAM2B,GAAS,GACjBsF,GAAsBjH,EAAM2B,GAAS,GAAG3H,OAExCkN,GAAqBlH,EAAM2B,GAAS,GAAG3H,OAIrC8M,GAAiBA,EAAa9M,QAC9BuI,KAAK7F,IAAIqK,EAAoBC,IAC5BF,EAAa9M,QAAUuI,KAAK7F,IAAIuK,EACAC,KAEnClH,EAAMgC,OAAO4E,EAAWC,EAAmB,GAAI,EAClC,IAAI3I,EAAiBS,KAAKD,EAAaoI,IAEpD9G,EAAM4G,EAAWC,EAAmB,GAAK,GAAG,GAltBlC,EAotBVA,IAGAlF,IADAkF,EAC6B,EAAID,EAAWC,EAAmB,IAAM,EACrEE,EAAqB,EACrBC,EAAoB,EACpBC,EAAqB,EACrBC,EAAoB,EACpBJ,EAAe,KACfH,GAAU,IAGdhF,IAgBF,IAZIgF,GACFlO,KAAK0H,kBAAkBH,GAEzBvH,KAAK0O,6BAA6BnH,GAQlC2B,EAAU,EACHA,EAAU3B,EAAMhG,QAAQ,CAC7B,GAAIgG,EAAM2B,EAAU,GAAG,IAAMjD,GAjvBf,GAkvBVsB,EAAM2B,GAAS,GAAmB,CACpC,IAAIyF,EAAWpH,EAAM2B,EAAU,GAAG,GAC9B0F,EAAYrH,EAAM2B,GAAS,GAC3B2F,EAAkB7O,KAAKiN,oBAAoB0B,EAAUC,GACrDE,EAAkB9O,KAAKiN,oBAAoB2B,EAAWD,GACtDE,GAAmBC,GACjBD,GAAmBF,EAASpN,OAAS,GACrCsN,GAAmBD,EAAUrN,OAAS,KAExCgG,EAAMgC,OAAOL,EAAS,EAAG,IAAIzD,EAAiBS,KA1vBvC,EA2vBH0I,EAAUxH,UAAU,EAAGyH,KAC3BtH,EAAM2B,EAAU,GAAG,GACfyF,EAASvH,UAAU,EAAGuH,EAASpN,OAASsN,GAC5CtH,EAAM2B,EAAU,GAAG,GAAK0F,EAAUxH,UAAUyH,GAC5C3F,MAGE4F,GAAmBH,EAASpN,OAAS,GACrCuN,GAAmBF,EAAUrN,OAAS,KAGxCgG,EAAMgC,OAAOL,EAAS,EAAG,IAAIzD,EAAiBS,KAtwBvC,EAuwBHyI,EAASvH,UAAU,EAAG0H,KAC1BvH,EAAM2B,EAAU,GAAG,GAzwBX,EA0wBR3B,EAAM2B,EAAU,GAAG,GACf0F,EAAUxH,UAAU,EAAGwH,EAAUrN,OAASuN,GAC9CvH,EAAM2B,EAAU,GAAG,GAAKjD,EACxBsB,EAAM2B,EAAU,GAAG,GACfyF,EAASvH,UAAU0H,GACvB5F,KAGJA,GACF,CACAA,GACF,CACF,EASAzD,EAAiBF,UAAUmJ,6BAA+B,SAASnH,GAWjE,SAASwH,EAA2BC,EAAKC,GACvC,IAAKD,IAAQC,EAEX,OAAO,EAQT,IAAIC,EAAQF,EAAI/D,OAAO+D,EAAIzN,OAAS,GAChC4N,EAAQF,EAAIhE,OAAO,GACnBmE,EAAmBF,EAAMG,MAAM5J,EAAiB6J,uBAChDC,EAAmBJ,EAAME,MAAM5J,EAAiB6J,uBAChDE,EAAcJ,GACdF,EAAMG,MAAM5J,EAAiBgK,kBAC7BC,EAAcH,GACdJ,EAAME,MAAM5J,EAAiBgK,kBAC7BE,EAAaH,GACbN,EAAMG,MAAM5J,EAAiBmK,iBAC7BC,EAAaH,GACbP,EAAME,MAAM5J,EAAiBmK,iBAC7BE,EAAaH,GACbX,EAAIK,MAAM5J,EAAiBsK,oBAC3BC,EAAaH,GACbZ,EAAII,MAAM5J,EAAiBwK,sBAE/B,OAAIH,GAAcE,EAET,EACEL,GAAcE,EAEhB,EACET,IAAqBI,GAAeE,EAEtC,EACEF,GAAeE,EAEjB,EACEN,GAAoBG,EAEtB,EAEF,CACT,CAIA,IAFA,IAAIrG,EAAU,EAEPA,EAAU3B,EAAMhG,OAAS,GAAG,CACjC,GA31Ba,GA21BTgG,EAAM2B,EAAU,GAAG,IA31BV,GA41BT3B,EAAM2B,EAAU,GAAG,GAAkB,CAEvC,IAAIgH,EAAY3I,EAAM2B,EAAU,GAAG,GAC/BiH,EAAO5I,EAAM2B,GAAS,GACtBkH,EAAY7I,EAAM2B,EAAU,GAAG,GAG/BmH,EAAerQ,KAAKqH,kBAAkB6I,EAAWC,GACrD,GAAIE,EAAc,CAChB,IAAIC,EAAeH,EAAK/I,UAAU+I,EAAK5O,OAAS8O,GAChDH,EAAYA,EAAU9I,UAAU,EAAG8I,EAAU3O,OAAS8O,GACtDF,EAAOG,EAAeH,EAAK/I,UAAU,EAAG+I,EAAK5O,OAAS8O,GACtDD,EAAYE,EAAeF,CAC7B,CAQA,IALA,IAAIG,EAAgBL,EAChBM,EAAWL,EACXM,EAAgBL,EAChBM,EAAY3B,EAA2BmB,EAAWC,GAClDpB,EAA2BoB,EAAMC,GAC9BD,EAAKlF,OAAO,KAAOmF,EAAUnF,OAAO,IAAI,CAC7CiF,GAAaC,EAAKlF,OAAO,GACzBkF,EAAOA,EAAK/I,UAAU,GAAKgJ,EAAUnF,OAAO,GAC5CmF,EAAYA,EAAUhJ,UAAU,GAChC,IAAIuJ,EAAQ5B,EAA2BmB,EAAWC,GAC9CpB,EAA2BoB,EAAMC,GAEjCO,GAASD,IACXA,EAAYC,EACZJ,EAAgBL,EAChBM,EAAWL,EACXM,EAAgBL,EAEpB,CAEI7I,EAAM2B,EAAU,GAAG,IAAMqH,IAEvBA,EACFhJ,EAAM2B,EAAU,GAAG,GAAKqH,GAExBhJ,EAAMgC,OAAOL,EAAU,EAAG,GAC1BA,KAEF3B,EAAM2B,GAAS,GAAKsH,EAChBC,EACFlJ,EAAM2B,EAAU,GAAG,GAAKuH,GAExBlJ,EAAMgC,OAAOL,EAAU,EAAG,GAC1BA,KAGN,CACAA,GACF,CACF,EAGAzD,EAAiB6J,sBAAwB,eACzC7J,EAAiBgK,iBAAmB,KACpChK,EAAiBmK,gBAAkB,SACnCnK,EAAiBsK,mBAAqB,WACtCtK,EAAiBwK,qBAAuB,cAMxCxK,EAAiBF,UAAUqL,uBAAyB,SAASrJ,GAgB3D,IAfA,IAAI2G,GAAU,EACVC,EAAa,GACbC,EAAmB,EAEnBC,EAAe,KAEfnF,EAAU,EAEV2H,GAAU,EAEVC,GAAU,EAEVC,GAAW,EAEXC,GAAW,EACR9H,EAAU3B,EAAMhG,QAh7BR,GAi7BTgG,EAAM2B,GAAS,IACb3B,EAAM2B,GAAS,GAAG3H,OAASvB,KAAK2F,gBAC/BoL,GAAYC,IAEf7C,EAAWC,KAAsBlF,EACjC2H,EAAUE,EACVD,EAAUE,EACV3C,EAAe9G,EAAM2B,GAAS,KAG9BkF,EAAmB,EACnBC,EAAe,MAEjB0C,EAAWC,GAAW,IAElBzJ,EAAM2B,GAAS,IAAMjD,EACvB+K,GAAW,EAEXD,GAAW,EAUT1C,IAAkBwC,GAAWC,GAAWC,GAAYC,GACjC3C,EAAa9M,OAASvB,KAAK2F,cAAgB,GAC3CkL,EAAUC,EAAUC,EAAWC,GAAa,KAEjEzJ,EAAMgC,OAAO4E,EAAWC,EAAmB,GAAI,EAClC,IAAI3I,EAAiBS,KAAKD,EAAaoI,IAEpD9G,EAAM4G,EAAWC,EAAmB,GAAK,GAAG,GAr9BlC,EAs9BVA,IACAC,EAAe,KACXwC,GAAWC,GAEbC,EAAWC,GAAW,EACtB5C,EAAmB,IAGnBlF,IADAkF,EAC6B,EACzBD,EAAWC,EAAmB,IAAM,EACxC2C,EAAWC,GAAW,GAExB9C,GAAU,IAGdhF,IAGEgF,GACFlO,KAAK0H,kBAAkBH,EAE3B,EAQA9B,EAAiBF,UAAUmC,kBAAoB,SAASH,GAEtDA,EAAMtG,KAAK,IAAIwE,EAAiBS,KAp/BjB,EAo/BkC,KAOjD,IANA,IAKIe,EALAiC,EAAU,EACVC,EAAe,EACfC,EAAe,EACfC,EAAc,GACdC,EAAc,GAEXJ,EAAU3B,EAAMhG,QACrB,OAAQgG,EAAM2B,GAAS,IACrB,KA9/BY,EA+/BVE,IACAE,GAAe/B,EAAM2B,GAAS,GAC9BA,IACA,MACF,KAAKjD,EACHkD,IACAE,GAAe9B,EAAM2B,GAAS,GAC9BA,IACA,MACF,KAvgCW,EAygCLC,EAAeC,EAAe,GACX,IAAjBD,GAAuC,IAAjBC,IAGH,KADrBnC,EAAejH,KAAKkH,kBAAkBoC,EAAaD,MAE5CH,EAAUC,EAAeC,EAAgB,GA9gC3C,GA+gCC7B,EAAM2B,EAAUC,EAAeC,EAAe,GAAG,GAEnD7B,EAAM2B,EAAUC,EAAeC,EAAe,GAAG,IAC7CE,EAAYlC,UAAU,EAAGH,IAE7BM,EAAMgC,OAAO,EAAG,EAAG,IAAI9D,EAAiBS,KAphCvC,EAqhCGoD,EAAYlC,UAAU,EAAGH,KAC7BiC,KAEFI,EAAcA,EAAYlC,UAAUH,GACpCoC,EAAcA,EAAYjC,UAAUH,IAIjB,KADrBA,EAAejH,KAAKqH,kBAAkBiC,EAAaD,MAEjD9B,EAAM2B,GAAS,GAAKI,EAAYlC,UAAUkC,EAAY/H,OAClD0F,GAAgBM,EAAM2B,GAAS,GACnCI,EAAcA,EAAYlC,UAAU,EAAGkC,EAAY/H,OAC/C0F,GACJoC,EAAcA,EAAYjC,UAAU,EAAGiC,EAAY9H,OAC/C0F,KAIRiC,GAAWC,EAAeC,EAC1B7B,EAAMgC,OAAOL,EAASC,EAAeC,GACjCC,EAAY9H,SACdgG,EAAMgC,OAAOL,EAAS,EAClB,IAAIzD,EAAiBS,KAAKD,EAAaoD,IAC3CH,KAEEI,EAAY/H,SACdgG,EAAMgC,OAAOL,EAAS,EAClB,IAAIzD,EAAiBS,KAjjCnB,EAijCqCoD,IAC3CJ,KAEFA,KACqB,IAAZA,GApjCF,GAojCmB3B,EAAM2B,EAAU,GAAG,IAE7C3B,EAAM2B,EAAU,GAAG,IAAM3B,EAAM2B,GAAS,GACxC3B,EAAMgC,OAAOL,EAAS,IAEtBA,IAEFE,EAAe,EACfD,EAAe,EACfE,EAAc,GACdC,EAAc,GAIe,KAA/B/B,EAAMA,EAAMhG,OAAS,GAAG,IAC1BgG,EAAMmC,MAMR,IAAIwE,GAAU,EAGd,IAFAhF,EAAU,EAEHA,EAAU3B,EAAMhG,OAAS,GA5kCjB,GA6kCTgG,EAAM2B,EAAU,GAAG,IA7kCV,GA8kCT3B,EAAM2B,EAAU,GAAG,KAEjB3B,EAAM2B,GAAS,GAAG9B,UAAUG,EAAM2B,GAAS,GAAG3H,OAC9CgG,EAAM2B,EAAU,GAAG,GAAG3H,SAAWgG,EAAM2B,EAAU,GAAG,IAEtD3B,EAAM2B,GAAS,GAAK3B,EAAM2B,EAAU,GAAG,GACnC3B,EAAM2B,GAAS,GAAG9B,UAAU,EAAGG,EAAM2B,GAAS,GAAG3H,OACrBgG,EAAM2B,EAAU,GAAG,GAAG3H,QACtDgG,EAAM2B,EAAU,GAAG,GAAK3B,EAAM2B,EAAU,GAAG,GAAK3B,EAAM2B,EAAU,GAAG,GACnE3B,EAAMgC,OAAOL,EAAU,EAAG,GAC1BgF,GAAU,GACD3G,EAAM2B,GAAS,GAAG9B,UAAU,EAAGG,EAAM2B,EAAU,GAAG,GAAG3H,SAC5DgG,EAAM2B,EAAU,GAAG,KAErB3B,EAAM2B,EAAU,GAAG,IAAM3B,EAAM2B,EAAU,GAAG,GAC5C3B,EAAM2B,GAAS,GACX3B,EAAM2B,GAAS,GAAG9B,UAAUG,EAAM2B,EAAU,GAAG,GAAG3H,QAClDgG,EAAM2B,EAAU,GAAG,GACvB3B,EAAMgC,OAAOL,EAAU,EAAG,GAC1BgF,GAAU,IAGdhF,IAGEgF,GACFlO,KAAK0H,kBAAkBH,EAE3B,EAWA9B,EAAiBF,UAAU0L,YAAc,SAAS1J,EAAO2J,GACvD,IAII7G,EAJAzB,EAAS,EACTC,EAAS,EACTsI,EAAc,EACdC,EAAc,EAElB,IAAK/G,EAAI,EAAGA,EAAI9C,EAAMhG,SA5nCN,IA6nCVgG,EAAM8C,GAAG,KACXzB,GAAUrB,EAAM8C,GAAG,GAAG9I,QAEpBgG,EAAM8C,GAAG,KAAOpE,IAClB4C,GAAUtB,EAAM8C,GAAG,GAAG9I,UAEpBqH,EAASsI,IAPe7G,IAU5B8G,EAAcvI,EACdwI,EAAcvI,EAGhB,OAAItB,EAAMhG,QAAU8I,GAAK9C,EAAM8C,GAAG,KAAOpE,EAChCmL,EAGFA,GAAeF,EAAMC,EAC9B,EAQA1L,EAAiBF,UAAU8L,gBAAkB,SAAS9J,GAMpD,IALA,IAAI+J,EAAO,GACPC,EAAc,KACdC,EAAa,KACbC,EAAa,KACbC,EAAe,MACVrH,EAAI,EAAGA,EAAI9C,EAAMhG,OAAQ8I,IAAK,CACrC,IAAIlE,EAAKoB,EAAM8C,GAAG,GAEdjE,EADOmB,EAAM8C,GAAG,GACJsH,QAAQJ,EAAa,SAASI,QAAQH,EAAY,QAC7DG,QAAQF,EAAY,QAAQE,QAAQD,EAAc,cACvD,OAAQvL,GACN,KAnqCY,EAoqCVmL,EAAKjH,GAAK,oCAAsCjE,EAAO,SACvD,MACF,KAAKH,EACHqL,EAAKjH,GAAK,oCAAsCjE,EAAO,SACvD,MACF,KAxqCW,EAyqCTkL,EAAKjH,GAAK,SAAWjE,EAAO,UAGlC,CACA,OAAOkL,EAAK5E,KAAK,GACnB,EAQAjH,EAAiBF,UAAUqM,WAAa,SAASrK,GAE/C,IADA,IAAInB,EAAO,GACFiE,EAAI,EAAGA,EAAI9C,EAAMhG,OAAQ8I,IAzrClB,IA0rCV9C,EAAM8C,GAAG,KACXjE,EAAKiE,GAAK9C,EAAM8C,GAAG,IAGvB,OAAOjE,EAAKsG,KAAK,GACnB,EAQAjH,EAAiBF,UAAUsM,WAAa,SAAStK,GAE/C,IADA,IAAInB,EAAO,GACFiE,EAAI,EAAGA,EAAI9C,EAAMhG,OAAQ8I,IAC5B9C,EAAM8C,GAAG,KAAOpE,IAClBG,EAAKiE,GAAK9C,EAAM8C,GAAG,IAGvB,OAAOjE,EAAKsG,KAAK,GACnB,EASAjH,EAAiBF,UAAUuM,iBAAmB,SAASvK,GAIrD,IAHA,IAAIwK,EAAc,EACdC,EAAa,EACbC,EAAY,EACP5H,EAAI,EAAGA,EAAI9C,EAAMhG,OAAQ8I,IAAK,CACrC,IAAIlE,EAAKoB,EAAM8C,GAAG,GACd6H,EAAO3K,EAAM8C,GAAG,GACpB,OAAQlE,GACN,KAhuCY,EAiuCV6L,GAAcE,EAAK3Q,OACnB,MACF,KAAK0E,EACHgM,GAAaC,EAAK3Q,OAClB,MACF,KAruCW,EAuuCTwQ,GAAejI,KAAK7F,IAAI+N,EAAYC,GACpCD,EAAa,EACbC,EAAY,EAGlB,CAEA,OADAF,GAAejI,KAAK7F,IAAI+N,EAAYC,EAEtC,EAWAxM,EAAiBF,UAAU4M,aAAe,SAAS5K,GAEjD,IADA,IAAInB,EAAO,GACFiE,EAAI,EAAGA,EAAI9C,EAAMhG,OAAQ8I,IAChC,OAAQ9C,EAAM8C,GAAG,IACf,KA/vCY,EAgwCVjE,EAAKiE,GAAK,IAAM+H,UAAU7K,EAAM8C,GAAG,IACnC,MACF,KAAKpE,EACHG,EAAKiE,GAAK,IAAM9C,EAAM8C,GAAG,GAAG9I,OAC5B,MACF,KApwCW,EAqwCT6E,EAAKiE,GAAK,IAAM9C,EAAM8C,GAAG,GAAG9I,OAIlC,OAAO6E,EAAKsG,KAAK,MAAMiF,QAAQ,OAAQ,IACzC,EAWAlM,EAAiBF,UAAU8M,eAAiB,SAAS/L,EAAOgE,GAK1D,IAJA,IAAI/C,EAAQ,GACR+K,EAAc,EACdpJ,EAAU,EACVqJ,EAASjI,EAAMkI,MAAM,OAChBnI,EAAI,EAAGA,EAAIkI,EAAOhR,OAAQ8I,IAAK,CAGtC,IAAIoI,EAAQF,EAAOlI,GAAGjD,UAAU,GAChC,OAAQmL,EAAOlI,GAAGY,OAAO,IACvB,IAAK,IACH,IACE1D,EAAM+K,KACF,IAAI7M,EAAiBS,KAnyCjB,EAmyCmCwM,UAAUD,GACvD,CAAE,MAAOE,GAEP,MAAM,IAAI5L,MAAM,qCAAuC0L,EACzD,CACA,MACF,IAAK,IAEL,IAAK,IACH,IAAIG,EAAIC,SAASJ,EAAO,IACxB,GAAIK,MAAMF,IAAMA,EAAI,EAClB,MAAM,IAAI7L,MAAM,qCAAuC0L,GAEzD,IAAIrM,EAAOE,EAAMc,UAAU8B,EAASA,GAAW0J,GACpB,KAAvBL,EAAOlI,GAAGY,OAAO,GACnB1D,EAAM+K,KAAiB,IAAI7M,EAAiBS,KAjzCrC,EAizCsDE,GAE7DmB,EAAM+K,KAAiB,IAAI7M,EAAiBS,KAAKD,EAAaG,GAEhE,MACF,QAGE,GAAImM,EAAOlI,GACT,MAAM,IAAItD,MAAM,6CACAwL,EAAOlI,IAG/B,CACA,GAAInB,GAAW5C,EAAM/E,OACnB,MAAM,IAAIwF,MAAM,iBAAmBmC,EAC/B,wCAA0C5C,EAAM/E,OAAS,MAE/D,OAAOgG,CACT,EAaA9B,EAAiBF,UAAUwN,WAAa,SAAS3M,EAAMgH,EAAS8D,GAE9D,GAAY,MAAR9K,GAA2B,MAAXgH,GAA0B,MAAP8D,EACrC,MAAM,IAAInK,MAAM,4BAIlB,OADAmK,EAAMpH,KAAK7F,IAAI,EAAG6F,KAAK9F,IAAIkN,EAAK9K,EAAK7E,SACjC6E,GAAQgH,EAEH,EACGhH,EAAK7E,OAGN6E,EAAKgB,UAAU8J,EAAKA,EAAM9D,EAAQ7L,SAAW6L,EAE/C8D,EAGAlR,KAAKgT,aAAa5M,EAAMgH,EAAS8D,IANhC,CAQZ,EAYAzL,EAAiBF,UAAUyN,aAAe,SAAS5M,EAAMgH,EAAS8D,GAChE,GAAI9D,EAAQ7L,OAASvB,KAAKgG,cACxB,MAAM,IAAIe,MAAM,sCAIlB,IAAInE,EAAI5C,KAAKiT,gBAAgB7F,GAEzBE,EAAMtN,KAUV,SAASkT,EAAkBC,EAAG9I,GAC5B,IAAI+I,EAAWD,EAAI/F,EAAQ7L,OACvB8R,EAAYvJ,KAAKwJ,IAAIpC,EAAM7G,GAC/B,OAAKiD,EAAIzH,eAIFuN,EAAYC,EAAY/F,EAAIzH,eAF1BwN,EAAY,EAAMD,CAG7B,CAGA,IAAIG,EAAkBvT,KAAK4F,gBAEvB4N,EAAWpN,EAAKyB,QAAQuF,EAAS8D,IACpB,GAAbsC,IACFD,EAAkBzJ,KAAK9F,IAAIkP,EAAkB,EAAGM,GAAWD,IAG1C,IADjBC,EAAWpN,EAAKqN,YAAYrG,EAAS8D,EAAM9D,EAAQ7L,WAEjDgS,EACIzJ,KAAK9F,IAAIkP,EAAkB,EAAGM,GAAWD,KAKjD,IAGIG,EAASC,EAHTC,EAAY,GAAMxG,EAAQ7L,OAAS,EACvCiS,GAAY,EAKZ,IAFA,IACIK,EADAC,EAAU1G,EAAQ7L,OAAS6E,EAAK7E,OAE3BqJ,EAAI,EAAGA,EAAIwC,EAAQ7L,OAAQqJ,IAAK,CAMvC,IAFA8I,EAAU,EACVC,EAAUG,EACHJ,EAAUC,GACXT,EAAkBtI,EAAGsG,EAAMyC,IAAYJ,EACzCG,EAAUC,EAEVG,EAAUH,EAEZA,EAAU7J,KAAKiD,OAAO+G,EAAUJ,GAAW,EAAIA,GAGjDI,EAAUH,EACV,IAAII,EAAQjK,KAAK7F,IAAI,EAAGiN,EAAMyC,EAAU,GACpCK,EAASlK,KAAK9F,IAAIkN,EAAMyC,EAASvN,EAAK7E,QAAU6L,EAAQ7L,OAExD0S,EAAK9J,MAAM6J,EAAS,GACxBC,EAAGD,EAAS,IAAM,GAAKpJ,GAAK,EAC5B,IAAK,IAAInB,EAAIuK,EAAQvK,GAAKsK,EAAOtK,IAAK,CAGpC,IAAIyK,EAAYtR,EAAEwD,EAAK6E,OAAOxB,EAAI,IAQlC,GANEwK,EAAGxK,GADK,IAANmB,GACQqJ,EAAGxK,EAAI,IAAM,EAAK,GAAKyK,GAEtBD,EAAGxK,EAAI,IAAM,EAAK,GAAKyK,GACvBL,EAAQpK,EAAI,GAAKoK,EAAQpK,KAAO,EAAK,EACxCoK,EAAQpK,EAAI,GAElBwK,EAAGxK,GAAKmK,EAAW,CACrB,IAAIjD,EAAQuC,EAAkBtI,EAAGnB,EAAI,GAGrC,GAAIkH,GAAS4C,EAAiB,CAI5B,GAFAA,EAAkB5C,KAClB6C,EAAW/J,EAAI,GACAyH,GAKb,MAHA6C,EAAQjK,KAAK7F,IAAI,EAAG,EAAIiN,EAAMsC,EAKlC,CACF,CACF,CAEA,GAAIN,EAAkBtI,EAAI,EAAGsG,GAAOqC,EAClC,MAEFM,EAAUI,CACZ,CACA,OAAOT,CACT,EASA/N,EAAiBF,UAAU0N,gBAAkB,SAAS7F,GAEpD,IADA,IAAIxK,EAAI,CAAC,EACAqC,EAAI,EAAGA,EAAImI,EAAQ7L,OAAQ0D,IAClCrC,EAAEwK,EAAQnC,OAAOhG,IAAM,EAEzB,IAASA,EAAI,EAAGA,EAAImI,EAAQ7L,OAAQ0D,IAClCrC,EAAEwK,EAAQnC,OAAOhG,KAAO,GAAMmI,EAAQ7L,OAAS0D,EAAI,EAErD,OAAOrC,CACT,EAaA6C,EAAiBF,UAAU4O,kBAAoB,SAASC,EAAOhO,GAC7D,GAAmB,GAAfA,EAAK7E,OAAT,CAGA,GAAqB,OAAjB6S,EAAMC,OACR,MAAMtN,MAAM,yBAOd,IALA,IAAIqG,EAAUhH,EAAKgB,UAAUgN,EAAMC,OAAQD,EAAMC,OAASD,EAAME,SAC5DC,EAAU,EAIPnO,EAAKyB,QAAQuF,IAAYhH,EAAKqN,YAAYrG,IAC1CA,EAAQ7L,OAASvB,KAAKgG,cAAgBhG,KAAK+F,aAC3C/F,KAAK+F,cACVwO,GAAWvU,KAAK+F,aAChBqH,EAAUhH,EAAKgB,UAAUgN,EAAMC,OAASE,EACfH,EAAMC,OAASD,EAAME,QAAUC,GAG1DA,GAAWvU,KAAK+F,aAGhB,IAAIyO,EAASpO,EAAKgB,UAAUgN,EAAMC,OAASE,EAASH,EAAMC,QACtDG,GACFJ,EAAM7M,MAAME,QAAQ,IAAIhC,EAAiBS,KAnhD5B,EAmhD6CsO,IAG5D,IAAIC,EAASrO,EAAKgB,UAAUgN,EAAMC,OAASD,EAAME,QACrBF,EAAMC,OAASD,EAAME,QAAUC,GACvDE,GACFL,EAAM7M,MAAMtG,KAAK,IAAIwE,EAAiBS,KAzhDzB,EAyhD0CuO,IAIzDL,EAAMM,QAAUF,EAAOjT,OACvB6S,EAAMC,QAAUG,EAAOjT,OAEvB6S,EAAME,SAAWE,EAAOjT,OAASkT,EAAOlT,OACxC6S,EAAMO,SAAWH,EAAOjT,OAASkT,EAAOlT,MApCxC,CAqCF,EAyBAkE,EAAiBF,UAAUqP,WAAa,SAASlM,EAAGmM,EAAOC,GACzD,IAAIxO,EAAOiB,EACX,GAAgB,iBAALmB,GAAiC,iBAATmM,GACf,oBAATC,EAGTxO,EAA8BoC,GAC9BnB,EAAQvH,KAAKqG,UAAUC,EAA6BuO,GAAQ,IAClDtT,OAAS,IACjBvB,KAAKiJ,qBAAqB1B,GAC1BvH,KAAK4Q,uBAAuBrJ,SAEzB,GAAImB,GAAiB,iBAALA,GAAiC,oBAATmM,GAC3B,oBAATC,EAGTvN,EAAuDmB,EACvDpC,EAAQtG,KAAK4R,WAAWrK,QACnB,GAAgB,iBAALmB,GAAiBmM,GAAyB,iBAATA,GAC/B,oBAATC,EAETxO,EAA8BoC,EAC9BnB,EAAuDsN,MAClD,IAAgB,iBAALnM,GAAiC,iBAATmM,IACtCC,GAAyB,iBAATA,EAMlB,MAAM,IAAI/N,MAAM,sCAHhBT,EAA8BoC,EAC9BnB,EAAuDuN,CAGzD,CAEA,GAAqB,IAAjBvN,EAAMhG,OACR,MAAO,GAYT,IAVA,IAAIwT,EAAU,GACVX,EAAQ,IAAI3O,EAAiBuP,UAC7BC,EAAkB,EAClBC,EAAc,EACdC,EAAc,EAIdC,EAAgB9O,EAChB+O,EAAiB/O,EACZ+D,EAAI,EAAGA,EAAI9C,EAAMhG,OAAQ8I,IAAK,CACrC,IAAIiL,EAAY/N,EAAM8C,GAAG,GACrBkL,EAAYhO,EAAM8C,GAAG,GAQzB,OANK4K,GA7mDQ,IA6mDWK,IAEtBlB,EAAMM,OAASQ,EACfd,EAAMC,OAASc,GAGTG,GACN,KArnDY,EAsnDVlB,EAAM7M,MAAM0N,KAAqB1N,EAAM8C,GACvC+J,EAAMO,SAAWY,EAAUhU,OAC3B8T,EAAiBA,EAAejO,UAAU,EAAG+N,GAAeI,EAC3CF,EAAejO,UAAU+N,GAC1C,MACF,KAAKlP,EACHmO,EAAME,SAAWiB,EAAUhU,OAC3B6S,EAAM7M,MAAM0N,KAAqB1N,EAAM8C,GACvCgL,EAAiBA,EAAejO,UAAU,EAAG+N,GAC5BE,EAAejO,UAAU+N,EACrBI,EAAUhU,QAC/B,MACF,KAjoDW,EAkoDLgU,EAAUhU,QAAU,EAAIvB,KAAK+F,cAC7BkP,GAAmB1N,EAAMhG,QAAU8I,EAAI,GAEzC+J,EAAM7M,MAAM0N,KAAqB1N,EAAM8C,GACvC+J,EAAME,SAAWiB,EAAUhU,OAC3B6S,EAAMO,SAAWY,EAAUhU,QAClBgU,EAAUhU,QAAU,EAAIvB,KAAK+F,cAElCkP,IACFjV,KAAKmU,kBAAkBC,EAAOgB,GAC9BL,EAAQ9T,KAAKmT,GACbA,EAAQ,IAAI3O,EAAiBuP,UAC7BC,EAAkB,EAKlBG,EAAgBC,EAChBH,EAAcC,GArpDR,IA4pDVG,IACFJ,GAAeK,EAAUhU,QAEvB+T,IAAcrP,IAChBkP,GAAeI,EAAUhU,OAE7B,CAOA,OALI0T,IACFjV,KAAKmU,kBAAkBC,EAAOgB,GAC9BL,EAAQ9T,KAAKmT,IAGRW,CACT,EAQAtP,EAAiBF,UAAUiQ,eAAiB,SAAST,GAGnD,IADA,IAAIU,EAAc,GACTpL,EAAI,EAAGA,EAAI0K,EAAQxT,OAAQ8I,IAAK,CACvC,IAAI+J,EAAQW,EAAQ1K,GAChBqL,EAAY,IAAIjQ,EAAiBuP,UACrCU,EAAUnO,MAAQ,GAClB,IAAK,IAAIgE,EAAI,EAAGA,EAAI6I,EAAM7M,MAAMhG,OAAQgK,IACtCmK,EAAUnO,MAAMgE,GACZ,IAAI9F,EAAiBS,KAAKkO,EAAM7M,MAAMgE,GAAG,GAAI6I,EAAM7M,MAAMgE,GAAG,IAElEmK,EAAUhB,OAASN,EAAMM,OACzBgB,EAAUrB,OAASD,EAAMC,OACzBqB,EAAUpB,QAAUF,EAAME,QAC1BoB,EAAUf,QAAUP,EAAMO,QAC1Bc,EAAYpL,GAAKqL,CACnB,CACA,OAAOD,CACT,EAWAhQ,EAAiBF,UAAUoQ,YAAc,SAASZ,EAAS3O,GACzD,GAAsB,GAAlB2O,EAAQxT,OACV,MAAO,CAAC6E,EAAM,IAIhB2O,EAAU/U,KAAKwV,eAAeT,GAE9B,IAAIa,EAAc5V,KAAK6V,iBAAiBd,GACxC3O,EAAOwP,EAAcxP,EAAOwP,EAE5B5V,KAAK8V,eAAef,GAOpB,IAFA,IAAIzK,EAAQ,EACRyL,EAAU,GACL1L,EAAI,EAAGA,EAAI0K,EAAQxT,OAAQ8I,IAAK,CACvC,IAEI2L,EA4BEzP,EA9BF0P,EAAelB,EAAQ1K,GAAGgK,OAAS/J,EACnChE,EAAQtG,KAAK4R,WAAWmD,EAAQ1K,GAAG9C,OAEnC2O,GAAW,EAkBf,GAjBI5P,EAAM/E,OAASvB,KAAKgG,eAKJ,IAFlBgQ,EAAYhW,KAAK+S,WAAW3M,EAAME,EAAMc,UAAU,EAAGpH,KAAKgG,eAC9BiQ,OAKV,IAHhBC,EAAUlW,KAAK+S,WAAW3M,EACtBE,EAAMc,UAAUd,EAAM/E,OAASvB,KAAKgG,eACpCiQ,EAAe3P,EAAM/E,OAASvB,KAAKgG,iBAClBgQ,GAAaE,KAEhCF,GAAa,GAIjBA,EAAYhW,KAAK+S,WAAW3M,EAAME,EAAO2P,IAEzB,GAAdD,EAEFD,EAAQ1L,IAAK,EAEbC,GAASyK,EAAQ1K,GAAGsK,QAAUI,EAAQ1K,GAAGiK,aAWzC,GARAyB,EAAQ1L,IAAK,EACbC,EAAQ0L,EAAYC,EAOhB3P,IAJFC,GADc,GAAZ2P,EACM9P,EAAKgB,UAAU4O,EAAWA,EAAY1P,EAAM/E,QAE5C6E,EAAKgB,UAAU4O,EAAWE,EAAUlW,KAAKgG,gBAIjDI,EAAOA,EAAKgB,UAAU,EAAG4O,GAClBhW,KAAK6R,WAAWkD,EAAQ1K,GAAG9C,OAC3BnB,EAAKgB,UAAU4O,EAAY1P,EAAM/E,YACnC,CAGL,IAAIgG,EAAQvH,KAAKqG,UAAUC,EAAOC,GAAO,GACzC,GAAID,EAAM/E,OAASvB,KAAKgG,eACpBhG,KAAK8R,iBAAiBvK,GAASjB,EAAM/E,OACrCvB,KAAK8F,sBAEPiQ,EAAQ1L,IAAK,MACR,CACLrK,KAAK0O,6BAA6BnH,GAGlC,IAFA,IACI4O,EADAC,EAAS,EAEJ7K,EAAI,EAAGA,EAAIwJ,EAAQ1K,GAAG9C,MAAMhG,OAAQgK,IAAK,CAChD,IAAI8K,EAAMtB,EAAQ1K,GAAG9C,MAAMgE,GAxxDtB,IAyxDD8K,EAAI,KACNF,EAASnW,KAAKiR,YAAY1J,EAAO6O,IA3xD7B,IA6xDFC,EAAI,GACNjQ,EAAOA,EAAKgB,UAAU,EAAG4O,EAAYG,GAAUE,EAAI,GAC5CjQ,EAAKgB,UAAU4O,EAAYG,GACzBE,EAAI,KAAOpQ,IACpBG,EAAOA,EAAKgB,UAAU,EAAG4O,EAAYG,GAC9B/P,EAAKgB,UAAU4O,EAAYhW,KAAKiR,YAAY1J,EACxC6O,EAASC,EAAI,GAAG9U,UAEzB8U,EAAI,KAAOpQ,IACbmQ,GAAUC,EAAI,GAAG9U,OAErB,CACF,CACF,CAEJ,CAGA,MAAO,CADP6E,EAAOA,EAAKgB,UAAUwO,EAAYrU,OAAQ6E,EAAK7E,OAASqU,EAAYrU,QACtDwU,EAChB,EASAtQ,EAAiBF,UAAUsQ,iBAAmB,SAASd,GAGrD,IAFA,IAAIuB,EAAgBtW,KAAK+F,aACrB6P,EAAc,GACTvL,EAAI,EAAGA,GAAKiM,EAAejM,IAClCuL,GAAetJ,OAAOC,aAAalC,GAIrC,IAASA,EAAI,EAAGA,EAAI0K,EAAQxT,OAAQ8I,IAClC0K,EAAQ1K,GAAGqK,QAAU4B,EACrBvB,EAAQ1K,GAAGgK,QAAUiC,EAIvB,IAAIlC,EAAQW,EAAQ,GAChBxN,EAAQ6M,EAAM7M,MAClB,GAAoB,GAAhBA,EAAMhG,QAx0DK,GAw0DUgG,EAAM,GAAG,GAEhCA,EAAME,QAAQ,IAAIhC,EAAiBS,KA10DtB,EA00DuC0P,IACpDxB,EAAMM,QAAU4B,EAChBlC,EAAMC,QAAUiC,EAChBlC,EAAME,SAAWgC,EACjBlC,EAAMO,SAAW2B,OACZ,GAAIA,EAAgB/O,EAAM,GAAG,GAAGhG,OAAQ,CAE7C,IAAIgV,EAAcD,EAAgB/O,EAAM,GAAG,GAAGhG,OAC9CgG,EAAM,GAAG,GAAKqO,EAAYxO,UAAUG,EAAM,GAAG,GAAGhG,QAAUgG,EAAM,GAAG,GACnE6M,EAAMM,QAAU6B,EAChBnC,EAAMC,QAAUkC,EAChBnC,EAAME,SAAWiC,EACjBnC,EAAMO,SAAW4B,CACnB,CAKA,GAAoB,IADpBhP,GADA6M,EAAQW,EAAQA,EAAQxT,OAAS,IACnBgG,OACJhG,QA51DK,GA41DUgG,EAAMA,EAAMhG,OAAS,GAAG,GAE/CgG,EAAMtG,KAAK,IAAIwE,EAAiBS,KA91DnB,EA81DoC0P,IACjDxB,EAAME,SAAWgC,EACjBlC,EAAMO,SAAW2B,OACZ,GAAIA,EAAgB/O,EAAMA,EAAMhG,OAAS,GAAG,GAAGA,OAAQ,CAExDgV,EAAcD,EAAgB/O,EAAMA,EAAMhG,OAAS,GAAG,GAAGA,OAC7DgG,EAAMA,EAAMhG,OAAS,GAAG,IAAMqU,EAAYxO,UAAU,EAAGmP,GACvDnC,EAAME,SAAWiC,EACjBnC,EAAMO,SAAW4B,CACnB,CAEA,OAAOX,CACT,EASAnQ,EAAiBF,UAAUuQ,eAAiB,SAASf,GAEnD,IADA,IAAIyB,EAAaxW,KAAKgG,cACbqE,EAAI,EAAGA,EAAI0K,EAAQxT,OAAQ8I,IAClC,KAAI0K,EAAQ1K,GAAGiK,SAAWkC,GAA1B,CAGA,IAAIC,EAAW1B,EAAQ1K,GAEvB0K,EAAQxL,OAAOc,IAAK,GAIpB,IAHA,IAAIqK,EAAS+B,EAAS/B,OAClBL,EAASoC,EAASpC,OAClBqC,EAAa,GACgB,IAA1BD,EAASlP,MAAMhG,QAAc,CAElC,IAAI6S,EAAQ,IAAI3O,EAAiBuP,UAC7B2B,GAAQ,EAOZ,IANAvC,EAAMM,OAASA,EAASgC,EAAWnV,OACnC6S,EAAMC,OAASA,EAASqC,EAAWnV,OAChB,KAAfmV,IACFtC,EAAME,QAAUF,EAAMO,QAAU+B,EAAWnV,OAC3C6S,EAAM7M,MAAMtG,KAAK,IAAIwE,EAAiBS,KAv4D7B,EAu4D8CwQ,KAExB,IAA1BD,EAASlP,MAAMhG,QACf6S,EAAME,QAAUkC,EAAaxW,KAAK+F,cAAc,CACrD,IAAIuP,EAAYmB,EAASlP,MAAM,GAAG,GAC9BgO,EAAYkB,EAASlP,MAAM,GAAG,GA74DxB,IA84DN+N,GAEFlB,EAAMO,SAAWY,EAAUhU,OAC3B8S,GAAUkB,EAAUhU,OACpB6S,EAAM7M,MAAMtG,KAAKwV,EAASlP,MAAMqP,SAChCD,GAAQ,GACCrB,IAAcrP,GAAqC,GAAtBmO,EAAM7M,MAAMhG,QAn5D3C,GAo5DE6S,EAAM7M,MAAM,GAAG,IACfgO,EAAUhU,OAAS,EAAIiV,GAEhCpC,EAAME,SAAWiB,EAAUhU,OAC3BmT,GAAUa,EAAUhU,OACpBoV,GAAQ,EACRvC,EAAM7M,MAAMtG,KAAK,IAAIwE,EAAiBS,KAAKoP,EAAWC,IACtDkB,EAASlP,MAAMqP,UAGfrB,EAAYA,EAAUnO,UAAU,EAC5BoP,EAAapC,EAAME,QAAUtU,KAAK+F,cACtCqO,EAAME,SAAWiB,EAAUhU,OAC3BmT,GAAUa,EAAUhU,OAj6Db,IAk6DH+T,GACFlB,EAAMO,SAAWY,EAAUhU,OAC3B8S,GAAUkB,EAAUhU,QAEpBoV,GAAQ,EAEVvC,EAAM7M,MAAMtG,KAAK,IAAIwE,EAAiBS,KAAKoP,EAAWC,IAClDA,GAAakB,EAASlP,MAAM,GAAG,GACjCkP,EAASlP,MAAMqP,QAEfH,EAASlP,MAAM,GAAG,GACdkP,EAASlP,MAAM,GAAG,GAAGH,UAAUmO,EAAUhU,QAGnD,CAGAmV,GADAA,EAAa1W,KAAK6R,WAAWuC,EAAM7M,QAEpBH,UAAUsP,EAAWnV,OAASvB,KAAK+F,cAElD,IAAI8Q,EAAc7W,KAAK4R,WAAW6E,EAASlP,OACpBH,UAAU,EAAGpH,KAAK+F,cACrB,KAAhB8Q,IACFzC,EAAME,SAAWuC,EAAYtV,OAC7B6S,EAAMO,SAAWkC,EAAYtV,OACF,IAAvB6S,EAAM7M,MAAMhG,QA37DP,IA47DL6S,EAAM7M,MAAM6M,EAAM7M,MAAMhG,OAAS,GAAG,GACtC6S,EAAM7M,MAAM6M,EAAM7M,MAAMhG,OAAS,GAAG,IAAMsV,EAE1CzC,EAAM7M,MAAMtG,KAAK,IAAIwE,EAAiBS,KA/7D/B,EA+7DgD2Q,KAGtDF,GACH5B,EAAQxL,SAASc,EAAG,EAAG+J,EAE3B,CA7EA,CA+EJ,EAQA3O,EAAiBF,UAAUuR,aAAe,SAAS/B,GAEjD,IADA,IAAI3O,EAAO,GACFiE,EAAI,EAAGA,EAAI0K,EAAQxT,OAAQ8I,IAClCjE,EAAKiE,GAAK0K,EAAQ1K,GAEpB,OAAOjE,EAAKsG,KAAK,GACnB,EASAjH,EAAiBF,UAAUwR,eAAiB,SAASC,GACnD,IAAIjC,EAAU,GACd,IAAKiC,EACH,OAAOjC,EAKT,IAHA,IAAI3O,EAAO4Q,EAASxE,MAAM,MACtByE,EAAc,EACdC,EAAc,uCACXD,EAAc7Q,EAAK7E,QAAQ,CAChC,IAAIiE,EAAIY,EAAK6Q,GAAa5H,MAAM6H,GAChC,IAAK1R,EACH,MAAM,IAAIuB,MAAM,yBAA2BX,EAAK6Q,IAElD,IAAI7C,EAAQ,IAAI3O,EAAiBuP,UAyBjC,IAxBAD,EAAQ9T,KAAKmT,GACbA,EAAMM,OAAS7B,SAASrN,EAAE,GAAI,IACjB,KAATA,EAAE,IACJ4O,EAAMM,SACNN,EAAME,QAAU,GACC,KAAR9O,EAAE,GACX4O,EAAME,QAAU,GAEhBF,EAAMM,SACNN,EAAME,QAAUzB,SAASrN,EAAE,GAAI,KAGjC4O,EAAMC,OAASxB,SAASrN,EAAE,GAAI,IACjB,KAATA,EAAE,IACJ4O,EAAMC,SACND,EAAMO,QAAU,GACC,KAARnP,EAAE,GACX4O,EAAMO,QAAU,GAEhBP,EAAMC,SACND,EAAMO,QAAU9B,SAASrN,EAAE,GAAI,KAEjCyR,IAEOA,EAAc7Q,EAAK7E,QAAQ,CAChC,IAAI4V,EAAO/Q,EAAK6Q,GAAahM,OAAO,GACpC,IACE,IAAIkB,EAAOuG,UAAUtM,EAAK6Q,GAAa7P,UAAU,GACnD,CAAE,MAAOuL,GAEP,MAAM,IAAI5L,MAAM,qCAAuCoF,EACzD,CACA,GAAY,KAARgL,EAEF/C,EAAM7M,MAAMtG,KAAK,IAAIwE,EAAiBS,KAAKD,EAAakG,SACnD,GAAY,KAARgL,EAET/C,EAAM7M,MAAMtG,KAAK,IAAIwE,EAAiBS,KAlhE5B,EAkhE8CiG,SACnD,GAAY,KAARgL,EAET/C,EAAM7M,MAAMtG,KAAK,IAAIwE,EAAiBS,KAphE7B,EAohE8CiG,QAClD,IAAY,KAARgL,EAET,MACK,GAAa,KAATA,EAIT,MAAM,IAAIpQ,MAAM,uBAAyBoQ,EAAO,SAAWhL,EAC7D,CACA8K,GACF,CACF,CACA,OAAOlC,CACT,GAOAtP,EAAiBuP,UAAY,WAE3BhV,KAAKuH,MAAQ,GAEbvH,KAAK0U,OAAS,KAEd1U,KAAKqU,OAAS,KAEdrU,KAAKsU,QAAU,EAEftU,KAAK2U,QAAU,CACjB,GAS2BpP,UAAU6R,SAAW,WAmB9C,IAlBA,IAgBIjR,EADAC,EAAO,CAAC,QAdS,IAAjBpG,KAAKsU,QACGtU,KAAK0U,OAAS,KACC,GAAhB1U,KAAKsU,QACJtU,KAAK0U,OAAS,EAEb1U,KAAK0U,OAAS,EAAK,IAAM1U,KAAKsU,SASZ,MAPV,IAAjBtU,KAAK2U,QACG3U,KAAKqU,OAAS,KACC,GAAhBrU,KAAK2U,QACJ3U,KAAKqU,OAAS,EAEbrU,KAAKqU,OAAS,EAAK,IAAMrU,KAAK2U,SAEK,SAGvCtK,EAAI,EAAGA,EAAIrK,KAAKuH,MAAMhG,OAAQ8I,IAAK,CAC1C,OAAQrK,KAAKuH,MAAM8C,GAAG,IACpB,KAnlEY,EAolEVlE,EAAK,IACL,MACF,KAAKF,EACHE,EAAK,IACL,MACF,KAxlEW,EAylETA,EAAK,IAGTC,EAAKiE,EAAI,GAAKlE,EAAKiM,UAAUpS,KAAKuH,MAAM8C,GAAG,IAAM,IACnD,CACA,OAAOjE,EAAKsG,KAAK,IAAIiF,QAAQ,OAAQ,IACvC,EAIApS,EAAOD,QAAUmG,EACjBlG,EAAOD,QAAPC,iBAAqCkG,EACrClG,EAAOD,QAAPC,YAAgC0G,EAChC1G,EAAOD,QAAPC,YAvmEkB,EAwmElBA,EAAOD,QAAPC,WAvmEiB,C,kBCxDjB,IAGI8X,EAAiB,4BAGjBC,EAAW,IAGXC,EAAU,oBACVC,EAAS,6BACTC,EAAY,kBAGZC,EAAe,mDACfC,EAAgB,QAChBC,EAAe,MACfC,EAAa,mGASbC,EAAe,WAGfC,EAAe,8BAGfC,EAA8B,iBAAVC,EAAAA,GAAsBA,EAAAA,GAAUA,EAAAA,EAAOC,SAAWA,QAAUD,EAAAA,EAGhFE,EAA0B,iBAARC,MAAoBA,MAAQA,KAAKF,SAAWA,QAAUE,KAGxEC,EAAOL,GAAcG,GAAYG,SAAS,cAATA,GAkCrC,IAAIC,EAAapO,MAAM5E,UACnBiT,EAAYF,SAAS/S,UACrBkT,EAAcP,OAAO3S,UAGrBmT,EAAaL,EAAK,sBAGlBM,EAAc,WAChB,IAAIC,EAAM,SAASC,KAAKH,GAAcA,EAAWI,MAAQJ,EAAWI,KAAKC,UAAY,IACrF,OAAOH,EAAO,iBAAmBA,EAAO,EAC1C,CAHkB,GAMdI,EAAeR,EAAUpB,SAGzBhL,EAAiBqM,EAAYrM,eAO7B6M,EAAiBR,EAAYrB,SAG7B8B,EAAaC,OAAO,IACtBH,EAAa3T,KAAK+G,GAAgBuF,QA7EjB,sBA6EuC,QACvDA,QAAQ,yDAA0D,SAAW,KAI5EyH,EAASf,EAAKe,OACd7P,EAASgP,EAAWhP,OAGpB8P,EAAMC,EAAUjB,EAAM,OACtBkB,EAAeD,EAAUpB,OAAQ,UAGjCsB,EAAcJ,EAASA,EAAO7T,eAAY8G,EAC1CoN,EAAiBD,EAAcA,EAAYpC,cAAW/K,EAS1D,SAASqN,EAAKC,GACZ,IAAIC,GAAS,EACTrY,EAASoY,EAAUA,EAAQpY,OAAS,EAGxC,IADAvB,KAAK6Z,UACID,EAAQrY,GAAQ,CACvB,IAAIuY,EAAQH,EAAQC,GACpB5Z,KAAK+Z,IAAID,EAAM,GAAIA,EAAM,GAC3B,CACF,CAyFA,SAASE,EAAUL,GACjB,IAAIC,GAAS,EACTrY,EAASoY,EAAUA,EAAQpY,OAAS,EAGxC,IADAvB,KAAK6Z,UACID,EAAQrY,GAAQ,CACvB,IAAIuY,EAAQH,EAAQC,GACpB5Z,KAAK+Z,IAAID,EAAM,GAAIA,EAAM,GAC3B,CACF,CAuGA,SAASG,EAASN,GAChB,IAAIC,GAAS,EACTrY,EAASoY,EAAUA,EAAQpY,OAAS,EAGxC,IADAvB,KAAK6Z,UACID,EAAQrY,GAAQ,CACvB,IAAIuY,EAAQH,EAAQC,GACpB5Z,KAAK+Z,IAAID,EAAM,GAAIA,EAAM,GAC3B,CACF,CAsFA,SAASI,EAAaC,EAAOC,GAE3B,IADA,IA+SUC,EAAOC,EA/Sb/Y,EAAS4Y,EAAM5Y,OACZA,KACL,IA6SQ8Y,EA7SDF,EAAM5Y,GAAQ,OA6SN+Y,EA7SUF,IA8SAC,IAAUA,GAASC,IAAUA,EA7SpD,OAAO/Y,EAGX,OAAQ,CACV,CAUA,SAASgZ,EAAQC,EAAQC,GAuDzB,IAAkBJ,EAtDhBI,EA8FF,SAAeJ,EAAOG,GACpB,GAAIE,EAAQL,GACV,OAAO,EAET,IAAIM,SAAcN,EAClB,GAAY,UAARM,GAA4B,UAARA,GAA4B,WAARA,GAC/B,MAATN,GAAiBO,EAASP,GAC5B,OAAO,EAET,OAAO1C,EAAckD,KAAKR,KAAW3C,EAAamD,KAAKR,IAC1C,MAAVG,GAAkBH,KAASnC,OAAOsC,EACvC,CAzGSM,CAAML,EAAMD,GAAU,CAACC,GAuDvBC,EADSL,EAtD+BI,GAuDvBJ,EAAQU,EAAaV,GAlD7C,IAHA,IAAIT,EAAQ,EACRrY,EAASkZ,EAAKlZ,OAED,MAAViZ,GAAkBZ,EAAQrY,GAC/BiZ,EAASA,EAAOQ,EAAMP,EAAKb,OAE7B,OAAQA,GAASA,GAASrY,EAAUiZ,OAASnO,CAC/C,CAUA,SAAS4O,EAAaZ,GACpB,IAAKa,EAASb,KA4GEc,EA5GiBd,EA6GxB1B,GAAeA,KAAcwC,GA5GpC,OAAO,EA2GX,IAAkBA,EAzGZ/N,EAoTN,SAAoBiN,GAGlB,IAAIe,EAAMF,EAASb,GAASpB,EAAe5T,KAAKgV,GAAS,GACzD,OAAOe,GAAO7D,GAAW6D,GAAO5D,CAClC,CAzTiB6D,CAAWhB,IA3Z5B,SAAsBA,GAGpB,IAAIiB,GAAS,EACb,GAAa,MAATjB,GAA0C,mBAAlBA,EAAMjD,SAChC,IACEkE,KAAYjB,EAAQ,GACtB,CAAE,MAAOlH,GAAI,CAEf,OAAOmI,CACT,CAiZsCC,CAAalB,GAAUnB,EAAanB,EACxE,OAAO3K,EAAQyN,KAsJjB,SAAkBM,GAChB,GAAY,MAARA,EAAc,CAChB,IACE,OAAOnC,EAAa3T,KAAK8V,EAC3B,CAAE,MAAOhI,GAAI,CACb,IACE,OAAQgI,EAAO,EACjB,CAAE,MAAOhI,GAAI,CACf,CACA,MAAO,EACT,CAhKsBqI,CAASnB,GAC/B,CAyCA,SAASoB,EAAWC,EAAKtB,GACvB,IAAIlI,EAAOwJ,EAAIC,SACf,OA8CF,SAAmBtB,GACjB,IAAIM,SAAcN,EAClB,MAAgB,UAARM,GAA4B,UAARA,GAA4B,UAARA,GAA4B,WAARA,EACrD,cAAVN,EACU,OAAVA,CACP,CAnDSuB,CAAUxB,GACblI,EAAmB,iBAAPkI,EAAkB,SAAW,QACzClI,EAAKwJ,GACX,CAUA,SAASpC,EAAUkB,EAAQJ,GACzB,IAAIC,EAjeN,SAAkBG,EAAQJ,GACxB,OAAiB,MAAVI,OAAiBnO,EAAYmO,EAAOJ,EAC7C,CA+dcyB,CAASrB,EAAQJ,GAC7B,OAAOa,EAAaZ,GAASA,OAAQhO,CACvC,CAnUAqN,EAAKnU,UAAUsU,MAnEf,WACE7Z,KAAK2b,SAAWpC,EAAeA,EAAa,MAAQ,CAAC,CACvD,EAkEAG,EAAKnU,UAAkB,OAtDvB,SAAoB6U,GAClB,OAAOpa,KAAK8b,IAAI1B,WAAepa,KAAK2b,SAASvB,EAC/C,EAqDAV,EAAKnU,UAAUwW,IA1Cf,SAAiB3B,GACf,IAAIlI,EAAOlS,KAAK2b,SAChB,GAAIpC,EAAc,CAChB,IAAI+B,EAASpJ,EAAKkI,GAClB,OAAOkB,IAAWjE,OAAiBhL,EAAYiP,CACjD,CACA,OAAOlP,EAAe/G,KAAK6M,EAAMkI,GAAOlI,EAAKkI,QAAO/N,CACtD,EAoCAqN,EAAKnU,UAAUuW,IAzBf,SAAiB1B,GACf,IAAIlI,EAAOlS,KAAK2b,SAChB,OAAOpC,OAA6BlN,IAAd6F,EAAKkI,GAAqBhO,EAAe/G,KAAK6M,EAAMkI,EAC5E,EAuBAV,EAAKnU,UAAUwU,IAXf,SAAiBK,EAAKC,GAGpB,OAFWra,KAAK2b,SACXvB,GAAQb,QAA0BlN,IAAVgO,EAAuBhD,EAAiBgD,EAC9Dra,IACT,EAmHAga,EAAUzU,UAAUsU,MAjFpB,WACE7Z,KAAK2b,SAAW,EAClB,EAgFA3B,EAAUzU,UAAkB,OArE5B,SAAyB6U,GACvB,IAAIlI,EAAOlS,KAAK2b,SACZ/B,EAAQM,EAAahI,EAAMkI,GAE/B,QAAIR,EAAQ,KAIRA,GADY1H,EAAK3Q,OAAS,EAE5B2Q,EAAKxI,MAELH,EAAOlE,KAAK6M,EAAM0H,EAAO,IAEpB,EACT,EAwDAI,EAAUzU,UAAUwW,IA7CpB,SAAsB3B,GACpB,IAAIlI,EAAOlS,KAAK2b,SACZ/B,EAAQM,EAAahI,EAAMkI,GAE/B,OAAOR,EAAQ,OAAIvN,EAAY6F,EAAK0H,GAAO,EAC7C,EAyCAI,EAAUzU,UAAUuW,IA9BpB,SAAsB1B,GACpB,OAAOF,EAAala,KAAK2b,SAAUvB,IAAQ,CAC7C,EA6BAJ,EAAUzU,UAAUwU,IAjBpB,SAAsBK,EAAKC,GACzB,IAAInI,EAAOlS,KAAK2b,SACZ/B,EAAQM,EAAahI,EAAMkI,GAO/B,OALIR,EAAQ,EACV1H,EAAKjR,KAAK,CAACmZ,EAAKC,IAEhBnI,EAAK0H,GAAO,GAAKS,EAEZra,IACT,EAiGAia,EAAS1U,UAAUsU,MA/DnB,WACE7Z,KAAK2b,SAAW,CACd,KAAQ,IAAIjC,EACZ,IAAO,IAAKL,GAAOW,GACnB,OAAU,IAAIN,EAElB,EA0DAO,EAAS1U,UAAkB,OA/C3B,SAAwB6U,GACtB,OAAOqB,EAAWzb,KAAMoa,GAAa,OAAEA,EACzC,EA8CAH,EAAS1U,UAAUwW,IAnCnB,SAAqB3B,GACnB,OAAOqB,EAAWzb,KAAMoa,GAAK2B,IAAI3B,EACnC,EAkCAH,EAAS1U,UAAUuW,IAvBnB,SAAqB1B,GACnB,OAAOqB,EAAWzb,KAAMoa,GAAK0B,IAAI1B,EACnC,EAsBAH,EAAS1U,UAAUwU,IAVnB,SAAqBK,EAAKC,GAExB,OADAoB,EAAWzb,KAAMoa,GAAKL,IAAIK,EAAKC,GACxBra,IACT,EA+KA,IAAI+a,EAAeiB,GAAQ,SAASC,GA4SpC,IAAkB5B,EA3ShB4B,EA4SgB,OADA5B,EA3SE4B,GA4SK,GArZzB,SAAsB5B,GAEpB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAIO,EAASP,GACX,OAAOZ,EAAiBA,EAAepU,KAAKgV,GAAS,GAEvD,IAAIiB,EAAUjB,EAAQ,GACtB,MAAkB,KAAViB,GAAkB,EAAIjB,IAAW/C,EAAY,KAAOgE,CAC9D,CA2Y8BY,CAAa7B,GA1SzC,IAAIiB,EAAS,GAOb,OANI1D,EAAaiD,KAAKoB,IACpBX,EAAOra,KAAK,IAEdgb,EAAOtK,QAAQkG,GAAY,SAASxI,EAAO8M,EAAQC,EAAOH,GACxDX,EAAOra,KAAKmb,EAAQH,EAAOtK,QAAQmG,EAAc,MAASqE,GAAU9M,EACtE,IACOiM,CACT,IASA,SAASN,EAAMX,GACb,GAAoB,iBAATA,GAAqBO,EAASP,GACvC,OAAOA,EAET,IAAIiB,EAAUjB,EAAQ,GACtB,MAAkB,KAAViB,GAAkB,EAAIjB,IAAW/C,EAAY,KAAOgE,CAC9D,CAiEA,SAASU,EAAQb,EAAMkB,GACrB,GAAmB,mBAARlB,GAAuBkB,GAA+B,mBAAZA,EACnD,MAAM,IAAIC,UAvqBQ,uBAyqBpB,IAAIC,EAAW,WACb,IAAIC,EAAOC,UACPrC,EAAMiC,EAAWA,EAASK,MAAM1c,KAAMwc,GAAQA,EAAK,GACnDG,EAAQJ,EAASI,MAErB,GAAIA,EAAMb,IAAI1B,GACZ,OAAOuC,EAAMZ,IAAI3B,GAEnB,IAAIkB,EAASH,EAAKuB,MAAM1c,KAAMwc,GAE9B,OADAD,EAASI,MAAQA,EAAM5C,IAAIK,EAAKkB,GACzBA,CACT,EAEA,OADAiB,EAASI,MAAQ,IAAKX,EAAQY,OAAS3C,GAChCsC,CACT,CAGAP,EAAQY,MAAQ3C,EA6DhB,IAAIS,EAAUvQ,MAAMuQ,QAmDpB,SAASQ,EAASb,GAChB,IAAIM,SAAcN,EAClB,QAASA,IAAkB,UAARM,GAA4B,YAARA,EACzC,CA+CA,SAASC,EAASP,GAChB,MAAuB,iBAATA,GAtBhB,SAAsBA,GACpB,QAASA,GAAyB,iBAATA,CAC3B,CAqBKwC,CAAaxC,IAAUpB,EAAe5T,KAAKgV,IAAU5C,CAC1D,CAyDAlY,EAAOD,QALP,SAAakb,EAAQC,EAAMqC,GACzB,IAAIxB,EAAmB,MAAVd,OAAiBnO,EAAYkO,EAAQC,EAAQC,GAC1D,YAAkBpO,IAAXiP,EAAuBwB,EAAexB,CAC/C,C,6BCt5BA,IAGIjE,EAAiB,4BAGjB0F,EAAuB,EACvBC,EAAyB,EAGzBC,EAAmB,iBAGnBC,EAAU,qBACVC,EAAW,iBACXC,EAAW,yBACXC,EAAU,mBACVC,EAAU,gBACVC,EAAW,iBACXhG,EAAU,oBACVC,EAAS,6BACTgG,EAAS,eACTC,EAAY,kBACZC,EAAU,gBACVC,EAAY,kBACZC,EAAa,mBACbC,EAAW,iBACXC,EAAY,kBACZC,EAAS,eACTC,EAAY,kBACZvG,EAAY,kBACZwG,EAAe,qBACfC,EAAa,mBAEbC,EAAiB,uBACjBC,EAAc,oBAkBdrG,EAAe,8BAGfsG,EAAW,mBAGXC,EAAiB,CAAC,EACtBA,EAxBiB,yBAwBYA,EAvBZ,yBAwBjBA,EAvBc,sBAuBYA,EAtBX,uBAuBfA,EAtBe,uBAsBYA,EArBZ,uBAsBfA,EArBsB,8BAqBYA,EApBlB,wBAqBhBA,EApBgB,yBAoBY,EAC5BA,EAAepB,GAAWoB,EAAenB,GACzCmB,EAAeH,GAAkBG,EAAejB,GAChDiB,EAAeF,GAAeE,EAAehB,GAC7CgB,EAAef,GAAYe,EAAe/G,GAC1C+G,EAAed,GAAUc,EAAeb,GACxCa,EAAeX,GAAaW,EAAeR,GAC3CQ,EAAeP,GAAUO,EAAeN,GACxCM,EAAeJ,IAAc,EAG7B,IAAIlG,EAA8B,iBAAVC,EAAAA,GAAsBA,EAAAA,GAAUA,EAAAA,EAAOC,SAAWA,QAAUD,EAAAA,EAGhFE,EAA0B,iBAARC,MAAoBA,MAAQA,KAAKF,SAAWA,QAAUE,KAGxEC,EAAOL,GAAcG,GAAYG,SAAS,cAATA,GAGjCiG,EAA4Cjf,IAAYA,EAAQkf,UAAYlf,EAG5Emf,EAAaF,GAA4Chf,IAAWA,EAAOif,UAAYjf,EAGvFmf,EAAgBD,GAAcA,EAAWnf,UAAYif,EAGrDI,EAAcD,GAAiB1G,EAAW4G,QAG1CC,EAAY,WACd,IACE,OAAOF,GAAeA,EAAYG,SAAWH,EAAYG,QAAQ,OACnE,CAAE,MAAO3L,GAAI,CACf,CAJgB,GAOZ4L,EAAmBF,GAAYA,EAASG,aAuD5C,SAASC,EAAU9E,EAAO+E,GAIxB,IAHA,IAAItF,GAAS,EACTrY,EAAkB,MAAT4Y,EAAgB,EAAIA,EAAM5Y,SAE9BqY,EAAQrY,GACf,GAAI2d,EAAU/E,EAAMP,GAAQA,EAAOO,GACjC,OAAO,EAGX,OAAO,CACT,CAiEA,SAASgF,EAAWzD,GAClB,IAAI9B,GAAS,EACT0B,EAASnR,MAAMuR,EAAIjZ,MAKvB,OAHAiZ,EAAItZ,SAAQ,SAASiY,EAAOD,GAC1BkB,IAAS1B,GAAS,CAACQ,EAAKC,EAC1B,IACOiB,CACT,CAuBA,SAAS8D,EAAWrF,GAClB,IAAIH,GAAS,EACT0B,EAASnR,MAAM4P,EAAItX,MAKvB,OAHAsX,EAAI3X,SAAQ,SAASiY,GACnBiB,IAAS1B,GAASS,CACpB,IACOiB,CACT,CAGA,IAxBiBH,EAAMkE,EAwBnB9G,EAAapO,MAAM5E,UACnBiT,EAAYF,SAAS/S,UACrBkT,EAAcP,OAAO3S,UAGrBmT,EAAaL,EAAK,sBAGlBW,EAAeR,EAAUpB,SAGzBhL,EAAiBqM,EAAYrM,eAG7BuM,EAAc,WAChB,IAAIC,EAAM,SAASC,KAAKH,GAAcA,EAAWI,MAAQJ,EAAWI,KAAKC,UAAY,IACrF,OAAOH,EAAO,iBAAmBA,EAAO,EAC1C,CAHkB,GAUd0G,EAAuB7G,EAAYrB,SAGnC8B,GAAaC,OAAO,IACtBH,EAAa3T,KAAK+G,GAAgBuF,QA7PjB,sBA6PuC,QACvDA,QAAQ,yDAA0D,SAAW,KAI5E4N,GAASb,EAAgBrG,EAAKkH,YAASlT,EACvC+M,GAASf,EAAKe,OACdoG,GAAanH,EAAKmH,WAClBC,GAAuBhH,EAAYgH,qBACnClW,GAASgP,EAAWhP,OACpBmW,GAAiBtG,GAASA,GAAOuG,iBAActT,EAG/CuT,GAAmB1H,OAAO2H,sBAC1BC,GAAiBP,GAASA,GAAOQ,cAAW1T,EAC5C2T,IAnEa7E,EAmEQjD,OAAOY,KAnETuG,EAmEenH,OAlE7B,SAAS+H,GACd,OAAO9E,EAAKkE,EAAUY,GACxB,GAmEEC,GAAW5G,GAAUjB,EAAM,YAC3BgB,GAAMC,GAAUjB,EAAM,OACtB8H,GAAU7G,GAAUjB,EAAM,WAC1B+H,GAAM9G,GAAUjB,EAAM,OACtBgI,GAAU/G,GAAUjB,EAAM,WAC1BkB,GAAeD,GAAUpB,OAAQ,UAGjCoI,GAAqB9E,GAAS0E,IAC9BK,GAAgB/E,GAASnC,IACzBmH,GAAoBhF,GAAS2E,IAC7BM,GAAgBjF,GAAS4E,IACzBM,GAAoBlF,GAAS6E,IAG7B7G,GAAcJ,GAASA,GAAO7T,eAAY8G,EAC1CsU,GAAgBnH,GAAcA,GAAYoH,aAAUvU,EASxD,SAASqN,GAAKC,GACZ,IAAIC,GAAS,EACTrY,EAAoB,MAAXoY,EAAkB,EAAIA,EAAQpY,OAG3C,IADAvB,KAAK6Z,UACID,EAAQrY,GAAQ,CACvB,IAAIuY,EAAQH,EAAQC,GACpB5Z,KAAK+Z,IAAID,EAAM,GAAIA,EAAM,GAC3B,CACF,CA6FA,SAASE,GAAUL,GACjB,IAAIC,GAAS,EACTrY,EAAoB,MAAXoY,EAAkB,EAAIA,EAAQpY,OAG3C,IADAvB,KAAK6Z,UACID,EAAQrY,GAAQ,CACvB,IAAIuY,EAAQH,EAAQC,GACpB5Z,KAAK+Z,IAAID,EAAM,GAAIA,EAAM,GAC3B,CACF,CA0GA,SAASG,GAASN,GAChB,IAAIC,GAAS,EACTrY,EAAoB,MAAXoY,EAAkB,EAAIA,EAAQpY,OAG3C,IADAvB,KAAK6Z,UACID,EAAQrY,GAAQ,CACvB,IAAIuY,EAAQH,EAAQC,GACpB5Z,KAAK+Z,IAAID,EAAM,GAAIA,EAAM,GAC3B,CACF,CA6FA,SAAS+G,GAASC,GAChB,IAAIlH,GAAS,EACTrY,EAAmB,MAAVuf,EAAiB,EAAIA,EAAOvf,OAGzC,IADAvB,KAAK2b,SAAW,IAAI1B,KACXL,EAAQrY,GACfvB,KAAK+gB,IAAID,EAAOlH,GAEpB,CAyCA,SAASoH,GAAMrH,GACb,IAAIzH,EAAOlS,KAAK2b,SAAW,IAAI3B,GAAUL,GACzC3Z,KAAKyC,KAAOyP,EAAKzP,IACnB,CAkGA,SAASwe,GAAc5G,EAAO6G,GAC5B,IAAIC,EAAQzG,GAAQL,GAChB+G,GAASD,GAASE,GAAYhH,GAC9BiH,GAAUH,IAAUC,GAASrB,GAAS1F,GACtCkH,GAAUJ,IAAUC,IAAUE,GAAUtC,GAAa3E,GACrDmH,EAAcL,GAASC,GAASE,GAAUC,EAC1CjG,EAASkG,EAloBf,SAAmB5O,EAAG6O,GAIpB,IAHA,IAAI7H,GAAS,EACT0B,EAASnR,MAAMyI,KAEVgH,EAAQhH,GACf0I,EAAO1B,GAAS6H,EAAS7H,GAE3B,OAAO0B,CACT,CA0nB6BoG,CAAUrH,EAAM9Y,OAAQ+K,QAAU,GACzD/K,EAAS+Z,EAAO/Z,OAEpB,IAAK,IAAI6Y,KAAOC,GACT6G,IAAa9U,EAAe/G,KAAKgV,EAAOD,IACvCoH,IAEQ,UAAPpH,GAECkH,IAAkB,UAAPlH,GAA0B,UAAPA,IAE9BmH,IAAkB,UAAPnH,GAA0B,cAAPA,GAA8B,cAAPA,IAEtDuH,GAAQvH,EAAK7Y,KAElB+Z,EAAOra,KAAKmZ,GAGhB,OAAOkB,CACT,CAUA,SAASpB,GAAaC,EAAOC,GAE3B,IADA,IAAI7Y,EAAS4Y,EAAM5Y,OACZA,KACL,GAAIqgB,GAAGzH,EAAM5Y,GAAQ,GAAI6Y,GACvB,OAAO7Y,EAGX,OAAQ,CACV,CAyBA,SAASsgB,GAAWxH,GAClB,OAAa,MAATA,OACehO,IAAVgO,EAAsB4D,EAAeP,EAEtCgC,IAAkBA,MAAkBxH,OAAOmC,GA0arD,SAAmBA,GACjB,IAAIyH,EAAQ1V,EAAe/G,KAAKgV,EAAOqF,IACnCtE,EAAMf,EAAMqF,IAEhB,IACErF,EAAMqF,SAAkBrT,EACxB,IAAI0V,GAAW,CACjB,CAAE,MAAO5O,GAAI,CAEb,IAAImI,EAASgE,EAAqBja,KAAKgV,GACnC0H,IACED,EACFzH,EAAMqF,IAAkBtE,SAEjBf,EAAMqF,KAGjB,OAAOpE,CACT,CA3bM0G,CAAU3H,GA4iBhB,SAAwBA,GACtB,OAAOiF,EAAqBja,KAAKgV,EACnC,CA7iBMpB,CAAeoB,EACrB,CASA,SAAS4H,GAAgB5H,GACvB,OAAOwC,GAAaxC,IAAUwH,GAAWxH,IAAU6C,CACrD,CAgBA,SAASgF,GAAY7H,EAAOC,EAAO6H,EAASC,EAAYC,GACtD,OAAIhI,IAAUC,IAGD,MAATD,GAA0B,MAATC,IAAmBuC,GAAaxC,KAAWwC,GAAavC,GACpED,IAAUA,GAASC,IAAUA,EAmBxC,SAAyBE,EAAQF,EAAO6H,EAASC,EAAYE,EAAWD,GACtE,IAAIE,EAAW7H,GAAQF,GACnBgI,EAAW9H,GAAQJ,GACnBmI,EAASF,EAAWpF,EAAWuF,GAAOlI,GACtCmI,EAASH,EAAWrF,EAAWuF,GAAOpI,GAKtCsI,GAHJH,EAASA,GAAUvF,EAAUS,EAAY8E,IAGhB9E,EACrBkF,GAHJF,EAASA,GAAUzF,EAAUS,EAAYgF,IAGhBhF,EACrBmF,EAAYL,GAAUE,EAE1B,GAAIG,GAAa/C,GAASvF,GAAS,CACjC,IAAKuF,GAASzF,GACZ,OAAO,EAETiI,GAAW,EACXK,GAAW,CACb,CACA,GAAIE,IAAcF,EAEhB,OADAP,IAAUA,EAAQ,IAAIrB,IACduB,GAAYvD,GAAaxE,GAC7BuI,GAAYvI,EAAQF,EAAO6H,EAASC,EAAYE,EAAWD,GAiKnE,SAAoB7H,EAAQF,EAAOc,EAAK+G,EAASC,EAAYE,EAAWD,GACtE,OAAQjH,GACN,KAAKgD,EACH,GAAK5D,EAAOwI,YAAc1I,EAAM0I,YAC3BxI,EAAOyI,YAAc3I,EAAM2I,WAC9B,OAAO,EAETzI,EAASA,EAAO0I,OAChB5I,EAAQA,EAAM4I,OAEhB,KAAK/E,EACH,QAAK3D,EAAOwI,YAAc1I,EAAM0I,aAC3BV,EAAU,IAAI9C,GAAWhF,GAAS,IAAIgF,GAAWlF,KAKxD,KAAK+C,EACL,KAAKC,EACL,KAAKG,EAGH,OAAOmE,IAAIpH,GAASF,GAEtB,KAAKiD,EACH,OAAO/C,EAAO2I,MAAQ7I,EAAM6I,MAAQ3I,EAAO4I,SAAW9I,EAAM8I,QAE9D,KAAKtF,EACL,KAAKE,EAIH,OAAOxD,GAAWF,EAAQ,GAE5B,KAAKkD,EACH,IAAI6F,EAAUlE,EAEhB,KAAKpB,EACH,IAAIuF,EAAYnB,EAAUpF,EAG1B,GAFAsG,IAAYA,EAAUjE,GAElB5E,EAAO/X,MAAQ6X,EAAM7X,OAAS6gB,EAChC,OAAO,EAGT,IAAIC,EAAUlB,EAAMtG,IAAIvB,GACxB,GAAI+I,EACF,OAAOA,GAAWjJ,EAEpB6H,GAAWnF,EAGXqF,EAAMtI,IAAIS,EAAQF,GAClB,IAAIgB,EAASyH,GAAYM,EAAQ7I,GAAS6I,EAAQ/I,GAAQ6H,EAASC,EAAYE,EAAWD,GAE1F,OADAA,EAAc,OAAE7H,GACTc,EAET,KAAK7D,EACH,GAAIkJ,GACF,OAAOA,GAActb,KAAKmV,IAAWmG,GAActb,KAAKiV,GAG9D,OAAO,CACT,CA/NQkJ,CAAWhJ,EAAQF,EAAOmI,EAAQN,EAASC,EAAYE,EAAWD,GAExE,KAAMF,EAAUpF,GAAuB,CACrC,IAAI0G,EAAeb,GAAYxW,EAAe/G,KAAKmV,EAAQ,eACvDkJ,EAAeb,GAAYzW,EAAe/G,KAAKiV,EAAO,eAE1D,GAAImJ,GAAgBC,EAAc,CAChC,IAAIC,EAAeF,EAAejJ,EAAOH,QAAUG,EAC/CoJ,EAAeF,EAAepJ,EAAMD,QAAUC,EAGlD,OADA+H,IAAUA,EAAQ,IAAIrB,IACfsB,EAAUqB,EAAcC,EAAczB,EAASC,EAAYC,EACpE,CACF,CACA,IAAKS,EACH,OAAO,EAGT,OADAT,IAAUA,EAAQ,IAAIrB,IA6NxB,SAAsBxG,EAAQF,EAAO6H,EAASC,EAAYE,EAAWD,GACnE,IAAIiB,EAAYnB,EAAUpF,EACtB8G,EAAWC,GAAWtJ,GACtBuJ,EAAYF,EAAStiB,OACrByiB,EAAWF,GAAWxJ,GACtB2J,EAAYD,EAASziB,OAEzB,GAAIwiB,GAAaE,IAAcX,EAC7B,OAAO,EAET,IAAI1J,EAAQmK,EACZ,KAAOnK,KAAS,CACd,IAAIQ,EAAMyJ,EAASjK,GACnB,KAAM0J,EAAYlJ,KAAOE,EAAQlO,EAAe/G,KAAKiV,EAAOF,IAC1D,OAAO,CAEX,CAEA,IAAImJ,EAAUlB,EAAMtG,IAAIvB,GACxB,GAAI+I,GAAWlB,EAAMtG,IAAIzB,GACvB,OAAOiJ,GAAWjJ,EAEpB,IAAIgB,GAAS,EACb+G,EAAMtI,IAAIS,EAAQF,GAClB+H,EAAMtI,IAAIO,EAAOE,GAEjB,IAAI0J,EAAWZ,EACf,OAAS1J,EAAQmK,GAAW,CAE1B,IAAII,EAAW3J,EADfJ,EAAMyJ,EAASjK,IAEXwK,EAAW9J,EAAMF,GAErB,GAAIgI,EACF,IAAIiC,EAAWf,EACXlB,EAAWgC,EAAUD,EAAU/J,EAAKE,EAAOE,EAAQ6H,GACnDD,EAAW+B,EAAUC,EAAUhK,EAAKI,EAAQF,EAAO+H,GAGzD,UAAmBhW,IAAbgY,EACGF,IAAaC,GAAY9B,EAAU6B,EAAUC,EAAUjC,EAASC,EAAYC,GAC7EgC,GACD,CACL/I,GAAS,EACT,KACF,CACA4I,IAAaA,EAAkB,eAAP9J,EAC1B,CACA,GAAIkB,IAAW4I,EAAU,CACvB,IAAII,EAAU9J,EAAO+J,YACjBC,EAAUlK,EAAMiK,YAGhBD,GAAWE,KACV,gBAAiBhK,MAAU,gBAAiBF,IACzB,mBAAXgK,GAAyBA,aAAmBA,GACjC,mBAAXE,GAAyBA,aAAmBA,IACvDlJ,GAAS,EAEb,CAGA,OAFA+G,EAAc,OAAE7H,GAChB6H,EAAc,OAAE/H,GACTgB,CACT,CA1RSmJ,CAAajK,EAAQF,EAAO6H,EAASC,EAAYE,EAAWD,EACrE,CA5DSqC,CAAgBrK,EAAOC,EAAO6H,EAASC,EAAYF,GAAaG,GACzE,CAqEA,SAASpH,GAAaZ,GACpB,SAAKa,GAASb,IAwahB,SAAkBc,GAChB,QAASxC,GAAeA,KAAcwC,CACxC,CA1a0BwJ,CAAStK,MAGnBgB,GAAWhB,GAASnB,GAAanB,GAChC8C,KAAKW,GAASnB,GAC/B,CAqBA,SAASuK,GAASpK,GAChB,IAwZF,SAAqBH,GACnB,IAAIwK,EAAOxK,GAASA,EAAMkK,YACtBO,EAAwB,mBAARD,GAAsBA,EAAKtf,WAAckT,EAE7D,OAAO4B,IAAUyK,CACnB,CA7ZOC,CAAYvK,GACf,OAAOwF,GAAWxF,GAEpB,IAAIc,EAAS,GACb,IAAK,IAAIlB,KAAOlC,OAAOsC,GACjBpO,EAAe/G,KAAKmV,EAAQJ,IAAe,eAAPA,GACtCkB,EAAOra,KAAKmZ,GAGhB,OAAOkB,CACT,CAeA,SAASyH,GAAY5I,EAAOG,EAAO6H,EAASC,EAAYE,EAAWD,GACjE,IAAIiB,EAAYnB,EAAUpF,EACtBiI,EAAY7K,EAAM5Y,OAClB0iB,EAAY3J,EAAM/Y,OAEtB,GAAIyjB,GAAaf,KAAeX,GAAaW,EAAYe,GACvD,OAAO,EAGT,IAAIzB,EAAUlB,EAAMtG,IAAI5B,GACxB,GAAIoJ,GAAWlB,EAAMtG,IAAIzB,GACvB,OAAOiJ,GAAWjJ,EAEpB,IAAIV,GAAS,EACT0B,GAAS,EACT2J,EAAQ9C,EAAUnF,EAA0B,IAAI6D,QAAWxU,EAM/D,IAJAgW,EAAMtI,IAAII,EAAOG,GACjB+H,EAAMtI,IAAIO,EAAOH,KAGRP,EAAQoL,GAAW,CAC1B,IAAIE,EAAW/K,EAAMP,GACjBwK,EAAW9J,EAAMV,GAErB,GAAIwI,EACF,IAAIiC,EAAWf,EACXlB,EAAWgC,EAAUc,EAAUtL,EAAOU,EAAOH,EAAOkI,GACpDD,EAAW8C,EAAUd,EAAUxK,EAAOO,EAAOG,EAAO+H,GAE1D,QAAiBhW,IAAbgY,EAAwB,CAC1B,GAAIA,EACF,SAEF/I,GAAS,EACT,KACF,CAEA,GAAI2J,GACF,IAAKhG,EAAU3E,GAAO,SAAS8J,EAAUe,GACnC,GA72Ba/K,EA62BO+K,GAANF,EA52BXnJ,IAAI1B,KA62BF8K,IAAad,GAAY9B,EAAU4C,EAAUd,EAAUjC,EAASC,EAAYC,IAC/E,OAAO4C,EAAKhkB,KAAKkkB,GA/2B/B,IAAyB/K,CAi3Bf,IAAI,CACNkB,GAAS,EACT,KACF,OACK,GACD4J,IAAad,IACX9B,EAAU4C,EAAUd,EAAUjC,EAASC,EAAYC,GACpD,CACL/G,GAAS,EACT,KACF,CACF,CAGA,OAFA+G,EAAc,OAAElI,GAChBkI,EAAc,OAAE/H,GACTgB,CACT,CAwKA,SAASwI,GAAWtJ,GAClB,OApZF,SAAwBA,EAAQ4K,EAAUC,GACxC,IAAI/J,EAAS8J,EAAS5K,GACtB,OAAOE,GAAQF,GAAUc,EAhuB3B,SAAmBnB,EAAO2G,GAKxB,IAJA,IAAIlH,GAAS,EACTrY,EAASuf,EAAOvf,OAChB+jB,EAASnL,EAAM5Y,SAEVqY,EAAQrY,GACf4Y,EAAMmL,EAAS1L,GAASkH,EAAOlH,GAEjC,OAAOO,CACT,CAutBoCoL,CAAUjK,EAAQ+J,EAAY7K,GAClE,CAiZSgL,CAAehL,EAAQ1B,GAAM2M,GACtC,CAUA,SAAShK,GAAWC,EAAKtB,GACvB,IAAIlI,EAAOwJ,EAAIC,SACf,OAqHF,SAAmBtB,GACjB,IAAIM,SAAcN,EAClB,MAAgB,UAARM,GAA4B,UAARA,GAA4B,UAARA,GAA4B,WAARA,EACrD,cAAVN,EACU,OAAVA,CACP,CA1HSuB,CAAUxB,GACblI,EAAmB,iBAAPkI,EAAkB,SAAW,QACzClI,EAAKwJ,GACX,CAUA,SAASpC,GAAUkB,EAAQJ,GACzB,IAAIC,EAxjCN,SAAkBG,EAAQJ,GACxB,OAAiB,MAAVI,OAAiBnO,EAAYmO,EAAOJ,EAC7C,CAsjCcyB,CAASrB,EAAQJ,GAC7B,OAAOa,GAAaZ,GAASA,OAAQhO,CACvC,CAr2BAqN,GAAKnU,UAAUsU,MAvEf,WACE7Z,KAAK2b,SAAWpC,GAAeA,GAAa,MAAQ,CAAC,EACrDvZ,KAAKyC,KAAO,CACd,EAqEAiX,GAAKnU,UAAkB,OAzDvB,SAAoB6U,GAClB,IAAIkB,EAAStb,KAAK8b,IAAI1B,WAAepa,KAAK2b,SAASvB,GAEnD,OADApa,KAAKyC,MAAQ6Y,EAAS,EAAI,EACnBA,CACT,EAsDA5B,GAAKnU,UAAUwW,IA3Cf,SAAiB3B,GACf,IAAIlI,EAAOlS,KAAK2b,SAChB,GAAIpC,GAAc,CAChB,IAAI+B,EAASpJ,EAAKkI,GAClB,OAAOkB,IAAWjE,OAAiBhL,EAAYiP,CACjD,CACA,OAAOlP,EAAe/G,KAAK6M,EAAMkI,GAAOlI,EAAKkI,QAAO/N,CACtD,EAqCAqN,GAAKnU,UAAUuW,IA1Bf,SAAiB1B,GACf,IAAIlI,EAAOlS,KAAK2b,SAChB,OAAOpC,QAA8BlN,IAAd6F,EAAKkI,GAAsBhO,EAAe/G,KAAK6M,EAAMkI,EAC9E,EAwBAV,GAAKnU,UAAUwU,IAZf,SAAiBK,EAAKC,GACpB,IAAInI,EAAOlS,KAAK2b,SAGhB,OAFA3b,KAAKyC,MAAQzC,KAAK8b,IAAI1B,GAAO,EAAI,EACjClI,EAAKkI,GAAQb,SAA0BlN,IAAVgO,EAAuBhD,EAAiBgD,EAC9Dra,IACT,EAsHAga,GAAUzU,UAAUsU,MApFpB,WACE7Z,KAAK2b,SAAW,GAChB3b,KAAKyC,KAAO,CACd,EAkFAuX,GAAUzU,UAAkB,OAvE5B,SAAyB6U,GACvB,IAAIlI,EAAOlS,KAAK2b,SACZ/B,EAAQM,GAAahI,EAAMkI,GAE/B,QAAIR,EAAQ,KAIRA,GADY1H,EAAK3Q,OAAS,EAE5B2Q,EAAKxI,MAELH,GAAOlE,KAAK6M,EAAM0H,EAAO,KAEzB5Z,KAAKyC,MACA,EACT,EAyDAuX,GAAUzU,UAAUwW,IA9CpB,SAAsB3B,GACpB,IAAIlI,EAAOlS,KAAK2b,SACZ/B,EAAQM,GAAahI,EAAMkI,GAE/B,OAAOR,EAAQ,OAAIvN,EAAY6F,EAAK0H,GAAO,EAC7C,EA0CAI,GAAUzU,UAAUuW,IA/BpB,SAAsB1B,GACpB,OAAOF,GAAala,KAAK2b,SAAUvB,IAAQ,CAC7C,EA8BAJ,GAAUzU,UAAUwU,IAlBpB,SAAsBK,EAAKC,GACzB,IAAInI,EAAOlS,KAAK2b,SACZ/B,EAAQM,GAAahI,EAAMkI,GAQ/B,OANIR,EAAQ,KACR5Z,KAAKyC,KACPyP,EAAKjR,KAAK,CAACmZ,EAAKC,KAEhBnI,EAAK0H,GAAO,GAAKS,EAEZra,IACT,EAwGAia,GAAS1U,UAAUsU,MAtEnB,WACE7Z,KAAKyC,KAAO,EACZzC,KAAK2b,SAAW,CACd,KAAQ,IAAIjC,GACZ,IAAO,IAAKL,IAAOW,IACnB,OAAU,IAAIN,GAElB,EAgEAO,GAAS1U,UAAkB,OArD3B,SAAwB6U,GACtB,IAAIkB,EAASG,GAAWzb,KAAMoa,GAAa,OAAEA,GAE7C,OADApa,KAAKyC,MAAQ6Y,EAAS,EAAI,EACnBA,CACT,EAkDArB,GAAS1U,UAAUwW,IAvCnB,SAAqB3B,GACnB,OAAOqB,GAAWzb,KAAMoa,GAAK2B,IAAI3B,EACnC,EAsCAH,GAAS1U,UAAUuW,IA3BnB,SAAqB1B,GACnB,OAAOqB,GAAWzb,KAAMoa,GAAK0B,IAAI1B,EACnC,EA0BAH,GAAS1U,UAAUwU,IAdnB,SAAqBK,EAAKC,GACxB,IAAInI,EAAOuJ,GAAWzb,KAAMoa,GACxB3X,EAAOyP,EAAKzP,KAIhB,OAFAyP,EAAK6H,IAAIK,EAAKC,GACdra,KAAKyC,MAAQyP,EAAKzP,MAAQA,EAAO,EAAI,EAC9BzC,IACT,EAwDA6gB,GAAStb,UAAUwb,IAAMF,GAAStb,UAAUtE,KAnB5C,SAAqBoZ,GAEnB,OADAra,KAAK2b,SAAS5B,IAAIM,EAAOhD,GAClBrX,IACT,EAiBA6gB,GAAStb,UAAUuW,IANnB,SAAqBzB,GACnB,OAAOra,KAAK2b,SAASG,IAAIzB,EAC3B,EAoGA2G,GAAMzb,UAAUsU,MA3EhB,WACE7Z,KAAK2b,SAAW,IAAI3B,GACpBha,KAAKyC,KAAO,CACd,EAyEAue,GAAMzb,UAAkB,OA9DxB,SAAqB6U,GACnB,IAAIlI,EAAOlS,KAAK2b,SACZL,EAASpJ,EAAa,OAAEkI,GAG5B,OADApa,KAAKyC,KAAOyP,EAAKzP,KACV6Y,CACT,EAyDA0F,GAAMzb,UAAUwW,IA9ChB,SAAkB3B,GAChB,OAAOpa,KAAK2b,SAASI,IAAI3B,EAC3B,EA6CA4G,GAAMzb,UAAUuW,IAlChB,SAAkB1B,GAChB,OAAOpa,KAAK2b,SAASG,IAAI1B,EAC3B,EAiCA4G,GAAMzb,UAAUwU,IArBhB,SAAkBK,EAAKC,GACrB,IAAInI,EAAOlS,KAAK2b,SAChB,GAAIzJ,aAAgB8H,GAAW,CAC7B,IAAI0L,EAAQxT,EAAKyJ,SACjB,IAAKtC,IAAQqM,EAAMnkB,OAASokB,IAG1B,OAFAD,EAAMzkB,KAAK,CAACmZ,EAAKC,IACjBra,KAAKyC,OAASyP,EAAKzP,KACZzC,KAETkS,EAAOlS,KAAK2b,SAAW,IAAI1B,GAASyL,EACtC,CAGA,OAFAxT,EAAK6H,IAAIK,EAAKC,GACdra,KAAKyC,KAAOyP,EAAKzP,KACVzC,IACT,EA8hBA,IAAIylB,GAAc7F,GAA+B,SAASpF,GACxD,OAAc,MAAVA,EACK,IAETA,EAAStC,OAAOsC,GA9sClB,SAAqBL,EAAO+E,GAM1B,IALA,IAAItF,GAAS,EACTrY,EAAkB,MAAT4Y,EAAgB,EAAIA,EAAM5Y,OACnCqkB,EAAW,EACXtK,EAAS,KAEJ1B,EAAQrY,GAAQ,CACvB,IAAI8Y,EAAQF,EAAMP,GACdsF,EAAU7E,EAAOT,EAAOO,KAC1BmB,EAAOsK,KAAcvL,EAEzB,CACA,OAAOiB,CACT,CAksCSuK,CAAYjG,GAAiBpF,IAAS,SAASsL,GACpD,OAAOrG,GAAqBpa,KAAKmV,EAAQsL,EAC3C,IACF,EAodA,WACE,MAAO,EACT,EA7cIpD,GAASb,GAkCb,SAASF,GAAQtH,EAAO9Y,GAEtB,SADAA,EAAmB,MAAVA,EAAiB0b,EAAmB1b,KAE1B,iBAAT8Y,GAAqBgE,EAASxD,KAAKR,KAC1CA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,EAAQ9Y,CAC7C,CA2DA,SAASia,GAASL,GAChB,GAAY,MAARA,EAAc,CAChB,IACE,OAAOnC,EAAa3T,KAAK8V,EAC3B,CAAE,MAAOhI,GAAI,CACb,IACE,OAAQgI,EAAO,EACjB,CAAE,MAAOhI,GAAI,CACf,CACA,MAAO,EACT,CAkCA,SAASyO,GAAGvH,EAAOC,GACjB,OAAOD,IAAUC,GAAUD,IAAUA,GAASC,IAAUA,CAC1D,EA7IK4F,IAAYwC,GAAO,IAAIxC,GAAS,IAAI6F,YAAY,MAAQ3H,GACxD/E,IAAOqJ,GAAO,IAAIrJ,KAAQmE,GAC1B2C,IAAWuC,GAAOvC,GAAQ6F,YAAcpI,GACxCwC,IAAOsC,GAAO,IAAItC,KAAQrC,GAC1BsC,IAAWqC,GAAO,IAAIrC,KAAYnC,KACrCwE,GAAS,SAASrI,GAChB,IAAIiB,EAASuG,GAAWxH,GACpBwK,EAAOvJ,GAAUqC,EAAYtD,EAAMkK,iBAAclY,EACjD4Z,EAAapB,EAAOrJ,GAASqJ,GAAQ,GAEzC,GAAIoB,EACF,OAAQA,GACN,KAAK3F,GAAoB,OAAOlC,EAChC,KAAKmC,GAAe,OAAO/C,EAC3B,KAAKgD,GAAmB,OAAO5C,EAC/B,KAAK6C,GAAe,OAAO1C,EAC3B,KAAK2C,GAAmB,OAAOxC,EAGnC,OAAO5C,CACT,GA6IF,IAAI+F,GAAcY,GAAgB,WAAa,OAAOxF,SAAW,CAA/B,IAAsCwF,GAAkB,SAAS5H,GACjG,OAAOwC,GAAaxC,IAAUjO,EAAe/G,KAAKgV,EAAO,YACtDoF,GAAqBpa,KAAKgV,EAAO,SACtC,EAyBIK,GAAUvQ,MAAMuQ,QAgDpB,IAAIqF,GAAWD,IA4Of,WACE,OAAO,CACT,EA3LA,SAASzE,GAAWhB,GAClB,IAAKa,GAASb,GACZ,OAAO,EAIT,IAAIe,EAAMyG,GAAWxH,GACrB,OAAOe,GAAO7D,GAAW6D,GAAO5D,GAAU4D,GAAOgC,GAAYhC,GAAOyC,CACtE,CA4BA,SAASqI,GAAS7L,GAChB,MAAuB,iBAATA,GACZA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,GAAS4C,CAC7C,CA2BA,SAAS/B,GAASb,GAChB,IAAIM,SAAcN,EAClB,OAAgB,MAATA,IAA0B,UAARM,GAA4B,YAARA,EAC/C,CA0BA,SAASkC,GAAaxC,GACpB,OAAgB,MAATA,GAAiC,iBAATA,CACjC,CAmBA,IAAI2E,GAAeD,EAhiDnB,SAAmB5D,GACjB,OAAO,SAASd,GACd,OAAOc,EAAKd,EACd,CACF,CA4hDsC8L,CAAUpH,GAnvBhD,SAA0B1E,GACxB,OAAOwC,GAAaxC,IAClB6L,GAAS7L,EAAM9Y,WAAa+c,EAAeuD,GAAWxH,GAC1D,EA8wBA,SAASvB,GAAK0B,GACZ,OA1NgB,OADGH,EA2NAG,IA1NK0L,GAAS7L,EAAM9Y,UAAY8Z,GAAWhB,GA0NjC4G,GAAczG,GAAUoK,GAASpK,GA3NhE,IAAqBH,CA4NrB,CAyCA9a,EAAOD,QAlNP,SAAiB+a,EAAOC,GACtB,OAAO4H,GAAY7H,EAAOC,EAC5B,C,gzBCvmDA,IAAA8L,EAAA/mB,EAAA,OAEAgnB,EAAAhnB,EAAA,OACAinB,EAAAjnB,EAAA,OACMknB,EAAUlnB,EAAQ,OACxBmnB,EAAAnnB,EAAA,OAMMF,GAAM,EAAAqnB,EAAAC,kBAiEZC,EAAA,SAAAC,GA2FE,SAAAD,EAAYE,GACV,IAAAC,EAAAF,EAAKthB,KAAC,KAAAuhB,IAAM,K,OACZJ,EAAAM,aAAa1kB,SAAQ,SAAA2kB,GACnBF,EAAKE,GAAUF,EAAKE,GAAQhmB,KAAK8lB,EACnC,IACAA,EAAKG,SAAWR,EAAAQ,S,CAClB,CAuaF,OAxgBsCC,EAAAP,EAAAC,GAkG7BD,EAAAnhB,UAAA2hB,WAAP,SAAkBC,GAEhB,IADA,IAAIC,EAASD,GAAQA,EAAKE,WACnBD,GAAQ,CACb,GAA0B,wBAAtBA,EAAOhQ,WACT,OAAO,EAETgQ,EAASA,EAAOC,UAClB,CACA,OAAO,CACT,EACOX,EAAAnhB,UAAA+hB,kBAAP,eAAAT,EAAA,KACQU,EAqBFvnB,KAAK4mB,MApBPvmB,EAASknB,EAAAlnB,UACTmnB,EAAYD,EAAAC,aACZC,EAAUF,EAAAE,WACVC,EAAIH,EAAAG,KACJ1lB,EAAKulB,EAAAvlB,MACLG,EAAKolB,EAAAplB,MACLwlB,EAAQJ,EAAAI,SACRC,EAAUL,EAAAK,WACVvN,EAAKkN,EAAAlN,MACLyC,EAAYyK,EAAAzK,aACZ+K,EAAUN,EAAAM,WACVC,EAAWP,EAAAO,YACXC,EAAeR,EAAAQ,gBACfC,EAAAT,EAAAU,aAAAA,OAAY,IAAAD,EAAG,CAAC,EAAG,EAAG,EAAG,GAAEA,EAC3BE,EAAeX,EAAAW,gBACfC,EAAMZ,EAAAY,OACNC,EAAQb,EAAAa,SACRC,EAAWd,EAAAc,YACXC,EAAOf,EAAAe,QACPC,EAAWhB,EAAAgB,YAGbvoB,KAAKW,OAASxB,EAAIgR,KAAKnQ,KAAKwoB,WAExBhB,GACFA,EAAaroB,GAIf,IADA,IAAMspB,EAAcvQ,OAAOY,KAAK9Y,KAAK4mB,MAAM6B,aAClCxjB,EAAI,EAAGA,EAAIwjB,EAAYlnB,OAAQ0D,IACtCjF,KAAKW,OAAO8nB,EAAYxjB,IAAMjF,KAAK4mB,MAAM6B,YAAYA,EAAYxjB,IAE/DjF,KAAK4mB,MAAM8B,uBACb1oB,KAAK2oB,SAAW3oB,KAAKgnB,SACnBhnB,KAAK2oB,SACL3oB,KAAK4mB,MAAM8B,uBAGf1oB,KAAKW,OAAOioB,SAASC,gBACnBZ,EAAa,GACbA,EAAa,GACbA,EAAa,GACbA,EAAa,IAEXjoB,KAAKknB,WAAWlnB,KAAKwoB,YACvBxoB,KAAKW,OAAOioB,SAASE,qBAEvB9oB,KAAKW,OACFooB,aACAC,QACiB,kBAATtB,EAAoB,YAAAnf,OAAYmf,GAAUA,GAEjDvlB,GAAmB,KAAVA,GAAcnC,KAAKW,OAAOuB,SAAS,aAAAqG,OAAapG,IAC7DnC,KAAKW,OAAOO,YACU,kBAAbymB,EAAwB,GAAApf,OAAGof,EAAQ,MAAOA,GAE/CC,IACF5nB,KAAKW,OAAOa,UAAUjB,MAAMqnB,WACJ,kBAAfA,EAA0B,GAAArf,OAAGqf,EAAU,MAAO,GAAArf,OAAGqf,GAC1D5nB,KAAKW,OAAOioB,SAASK,kBAEvBjpB,KAAKW,OACFooB,aACAG,SAAUpM,IAAezC,GAAS,KAEjCra,KAAK4mB,MAAMuC,mBACbnpB,KAAKW,OAAOyoB,kBAEdppB,KAAKW,OAAOioB,SAASS,cAAcxB,GACnC7nB,KAAKW,OAAOooB,aAAarlB,eAAeokB,GACxC9nB,KAAKW,OAAO2oB,mBAAmBvB,GAC/B/nB,KAAKW,OAAOE,GAAG,QAASb,KAAKupB,SAC7BvpB,KAAKW,OAAOE,GAAG,OAAQb,KAAKwpB,QAC5BxpB,KAAKW,OAAOE,GAAG,OAAQb,KAAKypB,QAC5BzpB,KAAKW,OAAOE,GAAG,QAASb,KAAK0pB,SAC7B1pB,KAAKW,OAAOE,GAAG,SAAUb,KAAK2oB,UAC9B3oB,KAAKW,OAAOE,GAAG,QAASb,KAAK2pB,SACzBpB,GACFvoB,KAAK4pB,oBAEP5pB,KAAKW,OACFooB,aACAc,UAAUhpB,GAAG,kBAAmBb,KAAK8pB,mBACxC9pB,KAAKW,OAAOooB,aAAac,UAAUhpB,GAAG,eAAgBb,KAAK+pB,gBACvDtC,GAEFznB,KAAKW,OAAOooB,aAAaloB,GAAG,oBAAoB,WAE9C,IAAMwnB,EAAcxB,EAAKlmB,OAAOooB,aAAaiB,iBAC7CnD,EAAKD,MAAMa,WAAWY,EACxB,IAEFroB,KAAKW,OAAOgC,QAAQ9B,GAAG,kBAAmBb,KAAKiqB,UAC/CjqB,KAAKW,OAAOooB,aAAamB,eAAe7B,GAAe,IACnDC,GAAWA,EAAQ/mB,OAAS,GAC9BvB,KAAKmqB,cAAc7B,GAIrB,IAAM8B,EAAmBpqB,KAAKW,OAAO0pB,SACrC7D,EAAA8D,cAAcloB,SAAQ,SAAAmoB,GAChBH,EAAiBhe,eAAeme,GAElC1D,EAAKlmB,OAAO6pB,UAAUD,EAAQ1D,EAAKD,MAAM2D,IAChC1D,EAAKD,MAAM2D,IACpBE,QAAQC,KACN,2BAAAniB,OAA2BgiB,EAAM,+GAGvC,IAEAvqB,KAAK2qB,cAAc3qB,KAAK4mB,OAEpBzc,MAAMuQ,QAAQ0N,IAChBA,EAAShmB,SAAQ,SAAAwoB,GACa,kBAAjBA,EAAQ/R,KAChBgO,EAAKlmB,OAAOynB,SAAiByC,QAAQD,EAAQC,QAASD,EAAQ/R,MAE9DgO,EAAKlmB,OAAOynB,SAAiB0C,WAAWF,EAE7C,IAGE1C,GACFloB,KAAKW,OAAO0B,mBAAmB,gBAAkB6lB,GAG/C7nB,IACFL,KAAKwoB,UAAUnoB,WAAa,IAAMA,GAGhC8nB,GACFA,EAAOnoB,KAAKW,QAGdX,KAAKW,OAAOe,SAERM,GACFhC,KAAKW,OAAOqB,OAEhB,EAEO0kB,EAAAnhB,UAAAwlB,mBAAP,SAA0BC,GAIxB,IAHA,IAAMC,EAAWD,EACXE,EAAYlrB,KAAK4mB,MAEd3hB,EAAI,EAAGA,EAAIuhB,EAAA8D,cAAc/oB,OAAQ0D,IAAK,CAC7C,IAAMslB,EAAS/D,EAAA8D,cAAcrlB,GACzBimB,EAAUX,KAAYU,EAASV,IAEjCvqB,KAAKW,OAAO6pB,UAAUD,EAAQW,EAAUX,GAE5C,CAEA,GAAIW,EAAU7qB,YAAc4qB,EAAS5qB,UAAW,CAC9C,IACM8qB,EADiBnrB,KAAKwoB,UAAUnoB,UACK+qB,OAAO5Y,MAAM,KAChCyY,EAAS5qB,UAAU+qB,OAAO5Y,MAAM,KACxCpQ,SAAQ,SAAAipB,GACtB,IAAMzR,EAAQuR,EAAoBtjB,QAAQwjB,GAC1CF,EAAoB5hB,OAAOqQ,EAAO,EACpC,IACA5Z,KAAKwoB,UAAUnoB,UACb,IAAM6qB,EAAU7qB,UAAY,IAAM8qB,EAAoBze,KAAK,IAC/D,CAGA,IAAM4e,EACJtrB,KAAKW,QACc,MAAnBuqB,EAAU7Q,OACVra,KAAKW,OAAOkb,aAAeqP,EAAU7Q,MAEvC,GAAIiR,EAAc,CAEhBtrB,KAAKurB,QAAS,EACd,IAAMC,EAAMxrB,KAAKW,OAAOgC,QAAQknB,UAAU4B,SAC1CzrB,KAAKW,OAAOuoB,SAASgC,EAAU7Q,MAAO6Q,EAAUQ,aAChD1rB,KAAKW,OAAOgC,QAAQknB,UAAU8B,SAASH,GACvCxrB,KAAKurB,QAAS,CAChB,CAEIL,EAAU3C,cAAgB0C,EAAS1C,aACrCvoB,KAAK4pB,oBAEHsB,EAAUxD,OAASuD,EAASvD,MAC9B1nB,KAAKW,OACFooB,aACAC,QAC2B,kBAAnBkC,EAAUxD,KACb,YAAAnf,OAAY2iB,EAAUxD,MACrBwD,EAAUxD,MAGjBwD,EAAU/oB,QAAU8oB,EAAS9oB,OAC/BnC,KAAKW,OAAOuB,SAAS,aAAegpB,EAAU/oB,OAE5C+oB,EAAUhD,kBAAoB+C,EAAS/C,kBACrCgD,EAAUhD,gBACZloB,KAAKW,OAAO0B,mBACV,gBAAkB6oB,EAAUhD,iBAG9BloB,KAAKW,OAAO0B,mBAAmB,OAG/B6oB,EAAUvD,WAAasD,EAAStD,UAClC3nB,KAAKW,OAAOO,YACoB,kBAAvBgqB,EAAUvD,SACb,GAAApf,OAAG2iB,EAAUvD,SAAQ,MACrBuD,EAAUvD,UAGduD,EAAUtD,aAAeqD,EAASrD,aACpC5nB,KAAKW,OAAOa,UAAUjB,MAAMqnB,WACM,kBAAzBsD,EAAUtD,WACb,GAAArf,OAAG2iB,EAAUtD,WAAU,MACvBsD,EAAUtD,WAChB5nB,KAAKW,OAAOioB,SAASK,kBAEnBiC,EAAUpD,cAAgBmD,EAASnD,aACrC9nB,KAAKW,OAAOooB,aAAarlB,eAAewnB,EAAUpD,aAEhDoD,EAAUnD,kBAAoBkD,EAASlD,iBACzC/nB,KAAKW,OAAO2oB,mBAAmB4B,EAAUnD,iBAEvCmD,EAAUrD,aAAeoD,EAASpD,YACpC7nB,KAAKW,OAAOioB,SAASS,cAAc6B,EAAUrD,YAE1CtB,EAAQ2E,EAAUU,WAAYX,EAASW,aAC1C5rB,KAAK2qB,cAAcO,IAIjBI,GAAiB/E,EAAQ2E,EAAU7C,YAAa4C,EAAS5C,cAC3DroB,KAAKW,OAAOooB,aAAamB,eAAegB,EAAU7C,aAAe,KAGhE9B,EAAQ2E,EAAU5C,QAAS2C,EAAS3C,UACrCne,MAAMuQ,QAAQwQ,EAAU5C,UAExBtoB,KAAKmqB,cAAce,EAAU5C,SAI1B/B,EAAQ2E,EAAUjD,aAAcgD,EAAShD,eAC5CjoB,KAAK6rB,oBAAoBX,EAAUjD,cAInC+C,EAAUnmB,SAAW7E,KAAK4mB,MAAM/hB,QAChCmmB,EAAUrmB,QAAU3E,KAAK4mB,MAAMjiB,OAE/B3E,KAAKW,OAAOe,SAEV1B,KAAK4mB,MAAM5kB,QAAUgpB,EAAUhpB,OACjChC,KAAKW,OAAOqB,OAEhB,EAEO0kB,EAAAnhB,UAAAsmB,oBAAP,SAA2BC,QAAA,IAAAA,IAAAA,EAAA,CAAW,EAAG,EAAG,EAAG,IAC7C9rB,KAAKW,OAAOioB,SAASC,gBACnBiD,EAAQ,GACRA,EAAQ,GACRA,EAAQ,GACRA,EAAQ,GAEZ,EAEOpF,EAAAnhB,UAAAwmB,qBAAP,WACM/rB,KAAKW,SACPX,KAAKW,OAAOqrB,UACZhsB,KAAKW,OAAS,KAElB,EAEO+lB,EAAAnhB,UAAAojB,SAAP,SAAgBsD,GACd,GAAIjsB,KAAK4mB,MAAM+B,WAAa3oB,KAAKurB,OAAQ,CACvC,IAAMlR,EAAQra,KAAKW,OAAOkb,WAC1B7b,KAAK4mB,MAAM+B,SAAStO,EAAO4R,EAC7B,CACF,EAEOvF,EAAAnhB,UAAAukB,kBAAP,SAAyBmC,GACvB,GAAIjsB,KAAK4mB,MAAMkD,kBAAmB,CAChC,IAAMzP,EAAQra,KAAKW,OAAOurB,eAC1BlsB,KAAK4mB,MAAMkD,kBAAkBzP,EAAO4R,EACtC,CACF,EACOvF,EAAAnhB,UAAAwkB,eAAP,SAAsBkC,GACpB,GAAIjsB,KAAK4mB,MAAMmD,eAAgB,CAC7B,IAAM1P,EAAQra,KAAKW,OAAOurB,eAC1BlsB,KAAK4mB,MAAMmD,eAAe1P,EAAO4R,EACnC,CACF,EACOvF,EAAAnhB,UAAAokB,QAAP,SAAesC,GACTjsB,KAAK4mB,MAAM+C,SACb3pB,KAAK4mB,MAAM+C,QAAQsC,GAEjBjsB,KAAK4mB,MAAM2B,aACbvoB,KAAK4pB,mBAET,EACOlD,EAAAnhB,UAAAgkB,QAAP,SAAe0C,GACTjsB,KAAK4mB,MAAM2C,SACbvpB,KAAK4mB,MAAM2C,QAAQ0C,EAAOjsB,KAAKW,OAEnC,EAEO+lB,EAAAnhB,UAAAikB,OAAP,SAAcyC,GACRjsB,KAAK4mB,MAAM4C,QACbxpB,KAAK4mB,MAAM4C,OAAOyC,EAAOjsB,KAAKW,OAElC,EAEO+lB,EAAAnhB,UAAAkkB,OAAP,SAAclC,G,IAAEnhB,EAAImhB,EAAAnhB,KACdpG,KAAK4mB,MAAM6C,QACbzpB,KAAK4mB,MAAM6C,OAAOrjB,EAEtB,EAEOsgB,EAAAnhB,UAAAmkB,QAAP,SAAenC,G,IAAEnhB,EAAImhB,EAAAnhB,KACfpG,KAAK4mB,MAAM8C,SACb1pB,KAAK4mB,MAAM8C,QAAQtjB,EAEvB,EAEOsgB,EAAAnhB,UAAA0kB,SAAP,WACMjqB,KAAK4mB,MAAMqD,UACbjqB,KAAK4mB,MAAMqD,SAASjqB,KAAKW,OAE7B,EAEO+lB,EAAAnhB,UAAAolB,cAAP,SAAqB/D,GAEnB,IADA,IAAMgF,EAAa1T,OAAOY,KAAK8N,EAAMgF,YAC5BrgB,EAAI,EAAGA,EAAIqgB,EAAWrqB,OAAQgK,IAErCvL,KAAKW,OAAO6pB,UAAUoB,EAAWrgB,GAAIqb,EAAMgF,WAAWA,EAAWrgB,IAErE,EAEOmb,EAAAnhB,UAAA4kB,cAAP,SAAqB7B,GAArB,IAAAzB,EAAA,KAEMsF,EAAiBnsB,KAAKW,OAAOooB,aAAaqD,YAAW,GACzD,IAAK,IAAMnnB,KAAKknB,EACVA,EAAe/f,eAAenH,IAChCjF,KAAKW,OAAOooB,aAAasD,aAAaF,EAAelnB,GAAGqnB,IAK5D,IAAK,IAAMrnB,KADXknB,EAAiBnsB,KAAKW,OAAOooB,aAAaqD,YAAW,GAGjDD,EAAe/f,eAAenH,IACF,oBAA5BknB,EAAelnB,GAAGsnB,OACU,sBAA5BJ,EAAelnB,GAAGsnB,OAElBvsB,KAAKW,OAAOooB,aAAasD,aAAaF,EAAelnB,GAAGqnB,IAI5DhE,EAAQlmB,SACN,SAACmlB,G,IACCiF,EAAQjF,EAAAiF,SACRC,EAAQlF,EAAAkF,SACRC,EAAMnF,EAAAmF,OACNC,EAAMpF,EAAAoF,OACNtsB,EAASknB,EAAAlnB,UACTsa,EAAI4M,EAAA5M,KACJqN,EAAAT,EAAAqF,QAAAA,OAAO,IAAA5E,GAAQA,EAET6E,EAAQ,IAAIzG,EAAA0G,MAAMN,EAAUC,EAAUC,EAAQC,GACpD9F,EAAKlmB,OAAOooB,aAAagE,UAAUF,EAAOxsB,EAAWsa,EAAMiS,EAC7D,GAEJ,EAEOlG,EAAAnhB,UAAAqkB,kBAAP,WAGE,IAAMjpB,EAASX,KAAKW,OACZ4nB,EAAgBvoB,KAAK4mB,MAAK2B,YAE5ByE,GAAmBrsB,EAAOgC,QAAQkZ,WAAWta,OAC/C4lB,EAAOxmB,EAAOioB,SAASqE,iBAEtBD,GAAmB7F,GACtBxmB,EAAOioB,SAASsE,SAASzrB,YAAYd,EAAOioB,SAASqE,iBACrDtsB,EAAOioB,SAASqE,gBAAkB,MACzBD,IAAoB7F,IAC7BA,EAAOxmB,EAAOioB,SAASqE,gBAAkB9sB,SAASC,cAAc,QAC3D+sB,YAAc5E,GAAe,GAClCpB,EAAK9mB,UAAY,8BACjB8mB,EAAK5mB,MAAMgU,QAAU,QACrB4S,EAAK5mB,MAAM6sB,SAAW,WACtBjG,EAAK5mB,MAAM8sB,OAAS,IACpB1sB,EAAOioB,SAASsE,SAASxsB,YAAYymB,IAC5B6F,GAAmB7F,IAC5BA,EAAKgG,YAAc5E,EAEvB,EAEO7B,EAAAnhB,UAAA+nB,UAAP,SAAiBC,GACfvtB,KAAKwoB,UAAY+E,CACnB,EAEO7G,EAAAnhB,UAAAioB,OAAP,WACQ,IAAAjG,EAAiCvnB,KAAK4mB,MAApCzD,EAAIoE,EAAApE,KAAExe,EAAK4iB,EAAA5iB,MAAEE,EAAM0iB,EAAA1iB,OAAEtE,EAAKgnB,EAAAhnB,MAC5BktB,EAAQC,EAAA,CAAK/oB,MAAKA,EAAEE,OAAMA,GAAKtE,GACrC,OAAO+lB,EAAAlmB,cAAA,OAAKutB,IAAK3tB,KAAKstB,UAAWhB,GAAInJ,EAAM5iB,MAAOktB,GACpD,EAtgBc/G,EAAAkH,UAAsD,CAClElG,KAAMrB,EAAUwH,UAAU,CAACxH,EAAUpK,OAAQoK,EAAU7L,SACvDxY,MAAOqkB,EAAUyH,KACjB3rB,MAAOkkB,EAAUpK,OACjBkH,KAAMkD,EAAUpK,OAChB5b,UAAWgmB,EAAUpK,OACrBpX,OAAQwhB,EAAUpK,OAClBtX,MAAO0hB,EAAUpK,OACjB0L,SAAUtB,EAAUwH,UAAU,CAACxH,EAAUlK,OAAQkK,EAAUpK,SAC3D2L,WAAYvB,EAAUwH,UAAU,CAACxH,EAAUlK,OAAQkK,EAAUpK,SAC7D4L,WAAYxB,EAAUyH,KACtBnF,SAAUtC,EAAUlL,KACpBsO,OAAQpD,EAAUlL,KAClBuO,QAASrD,EAAUlL,KACnBoO,QAASlD,EAAUlL,KACnBwO,QAAStD,EAAUlL,KACnBqO,OAAQnD,EAAUlL,KAClB8O,SAAU5D,EAAUlL,KACpBd,MAAOgM,EAAUpK,OACjBa,aAAcuJ,EAAUpK,OACxBkM,OAAQ9B,EAAUlL,KAClB2O,kBAAmBzD,EAAUlL,KAC7B4O,eAAgB1D,EAAUlL,KAC1BqM,aAAcnB,EAAUlL,KACxBsM,WAAYpB,EAAUlL,KACtB4S,SAAU1H,EAAUlK,OACpB3P,SAAU6Z,EAAUlK,OACpB6R,SAAU3H,EAAUyH,KACpBG,oBAAqB5H,EAAUyH,KAC/BI,QAAS7H,EAAUlK,OACnB4L,gBAAiB1B,EAAUyH,KAC3BpC,YAAarF,EAAUlK,OACvBuM,qBAAsBrC,EAAUlK,OAChCsM,YAAapC,EAAU7L,OACvBoR,WAAYvF,EAAU7L,OACtBja,MAAO8lB,EAAU7L,OACjByN,aAAc5B,EAAUlM,MACxBkO,YAAahC,EAAUlM,MACvBmO,QAASjC,EAAUlM,MACnB+N,gBAAiB7B,EAAUpK,OAC3B6L,YAAazB,EAAUyH,KACvBK,eAAgB9H,EAAUyH,KAC1BM,0BAA2B/H,EAAUwH,UAAU,CAC7CxH,EAAUyH,KACVzH,EAAUlM,QAEZkU,yBAA0BhI,EAAUwH,UAAU,CAC5CxH,EAAUyH,KACVzH,EAAUlM,QAEZgP,kBAAmB9C,EAAUyH,KAC7B1F,SAAU/B,EAAUlM,MACpBoO,YAAalC,EAAUpK,QAEXyK,EAAA4H,aAAyC,CACrDnL,KAAM,aACNnhB,OAAO,EACP0lB,KAAM,GACNvlB,MAAO,GACP0C,OAAQ,QACRF,MAAO,QACPgjB,SAAU,GACVwG,gBAAgB,EAChBtG,YAAY,EACZc,SAAU,KACVe,QAAS,KACTvB,OAAQ,KACR8B,SAAU,KACV8D,SAAU,KACVvhB,SAAU,KACVwhB,UAAU,EACVC,qBAAqB,EACrBlG,iBAAiB,EACjBmG,QAAS,EACTxC,YAAa,EACbjD,YAAa,CAAC,EACdloB,MAAO,CAAC,EACR0nB,aAAc,CAAC,EAAG,EAAG,EAAG,GACxB2D,WAAY,CAAC,EACb9D,aAAa,EACbsG,2BAA2B,EAC3BC,0BAA0B,EAC1B9F,YAAa,KACbY,mBAAmB,GAobvBzC,C,CAxgBA,CAAsCJ,EAAMiI,W,UAAvB7H,C,2kBC5ErB,IAAAL,EAAAhnB,EAAA,OACAinB,EAAAjnB,EAAA,OACAmvB,EAAAnvB,EAAA,OACMovB,EAAiBpvB,EAAQ,OAwC/BqvB,EAAA,SAAA/H,GAoEE,SAAA+H,EAAY9H,GACV,IAAAC,EAAAF,EAAKthB,KAAC,KAAAuhB,IAAM,K,OACZC,EAAK8H,MAAQ,CACXtU,MAAOwM,EAAKD,MAAMvM,OAEpBwM,EAAK8B,SAAW9B,EAAK8B,SAAS5nB,KAAK8lB,GACnCA,EAAK+H,KAAO/H,EAAK+H,KAAK7tB,KAAK8lB,G,CAC7B,CAoNF,OA/R2CI,EAAAyH,EAAA/H,GA6ElC+H,EAAAnpB,UAAAwlB,mBAAP,WACU,IAAA1Q,EAAUra,KAAK4mB,MAAKvM,MAExBA,IAAUra,KAAK2uB,MAAMtU,OACvBra,KAAK6uB,SAAS,CAAExU,MAAKA,GAEzB,EAEOqU,EAAAnpB,UAAAojB,SAAP,SAAgBtO,GACdra,KAAK6uB,SAAS,CACZxU,MAAKA,IAEHra,KAAK4mB,MAAM+B,UACb3oB,KAAK4mB,MAAM+B,SAAStO,EAExB,EAEOqU,EAAAnpB,UAAAqpB,KAAP,WACE,IAAMthB,EAAM,IAAImhB,EACVK,EAAW9uB,KAAK2uB,MAAMtU,MAAM,GAC5B0U,EAAW/uB,KAAK2uB,MAAMtU,MAAM,GAElC,GAAwB,IAApByU,EAASvtB,QAAoC,IAApBwtB,EAASxtB,OACpC,MAAO,GAGT,IAAMqtB,EAAOthB,EAAIjH,UAAUyoB,EAAUC,GACrCzhB,EAAIrE,qBAAqB2lB,GAEzB,IAAMI,EAAchvB,KAAKivB,oBAAoBL,GAE7C,OAD2B5uB,KAAKkvB,eAAeF,EAEjD,EAEON,EAAAnpB,UAAA0pB,oBAAP,SAA2BL,GACzB,IAAMO,EACQ,EADRA,GAEU,EAFVA,EAGS,EAGTH,EAAc,CAClB7pB,KAAM,GACNiqB,MAAO,IAGHC,EAAS,CACblqB,KAAM,EACNiqB,MAAO,GAqFT,OAlFAR,EAAKxsB,SAAQ,SAACktB,GACZ,IAAMC,EAAYD,EAAM,GAClBlpB,EAAOkpB,EAAM,GACfE,EAAQppB,EAAKoM,MAAM,MAAMjR,OAAS,EAGtC,GAAoB,IAAhB6E,EAAK7E,OAAT,CAIA,IAAMkuB,EAAYrpB,EAAK,GACjBspB,EAAWtpB,EAAKA,EAAK7E,OAAS,GAChCouB,EAAmB,EAEvB,OAAQJ,GACN,KAAKJ,EACHE,EAAOlqB,MAAQqqB,EACfH,EAAOD,OAASI,EAEhB,MACF,KAAKL,EAEe,OAAdM,IACFJ,EAAOlqB,OACPqqB,KAMuB,KAHzBG,EAAmBH,IAIjBR,EAAYI,MAAMnuB,KAAK,CACrB2uB,UAAWP,EAAOD,MAClBS,QAASR,EAAOD,QAKH,OAAbM,IACFC,GAAoB,GAGtBX,EAAY7pB,KAAKlE,KAAK,CACpB2uB,UAAWP,EAAOlqB,KAClB0qB,QAASR,EAAOlqB,KAAOwqB,IAGzBN,EAAOlqB,MAAQqqB,EACf,MACF,KAAKL,EAEe,OAAdM,IACFJ,EAAOD,QACPI,KAMuB,KAHzBG,EAAmBH,IAIjBR,EAAY7pB,KAAKlE,KAAK,CACpB2uB,UAAWP,EAAOlqB,KAClB0qB,QAASR,EAAOlqB,OAKH,OAAbuqB,IACFC,GAAoB,GAGtBX,EAAYI,MAAMnuB,KAAK,CACrB2uB,UAAWP,EAAOD,MAClBS,QAASR,EAAOD,MAAQO,IAG1BN,EAAOD,OAASI,EAChB,MACF,QACE,MAAM,IAAIzoB,MAAM,8BAvEpB,CAyEF,IACOioB,CACT,EAION,EAAAnpB,UAAA2pB,eAAP,SAAsBF,QAAA,IAAAA,IAAAA,EAAA,CAAqB7pB,KAAM,GAAIiqB,MAAO,KAQ1D,IAPA,IAAMU,EAAqB,GAErBC,EAAe,CACnB5qB,KAAM,GACNiqB,MAAO,IAGAnqB,EAAI,EAAGA,EAAI+pB,EAAY7pB,KAAK5D,OAAQ0D,IAAK,CAChD,IAAM+qB,EAAY,CAChBxD,SAAUwC,EAAY7pB,KAAKF,GAAG2qB,UAAY,EAC1ClD,OAAQsC,EAAY7pB,KAAKF,GAAG4qB,QAC5BlV,KAAM,OACNta,UAAW,cAEb0vB,EAAa5qB,KAAKlE,KAAK+uB,EACzB,CAEA,IAAS/qB,EAAI,EAAGA,EAAI+pB,EAAYI,MAAM7tB,OAAQ0D,IAAK,CAC3C+qB,EAAY,CAChBxD,SAAUwC,EAAYI,MAAMnqB,GAAG2qB,UAAY,EAC3ClD,OAAQsC,EAAYI,MAAMnqB,GAAG4qB,QAC7BlV,KAAM,OACNta,UAAW,cAEb0vB,EAAaX,MAAMnuB,KAAK+uB,EAC1B,CAKA,OAHAF,EAAmB,GAAKC,EAAa5qB,KACrC2qB,EAAmB,GAAKC,EAAaX,MAE9BU,CACT,EAEOpB,EAAAnpB,UAAAioB,OAAP,WACE,IAAMlF,EAAUtoB,KAAK4uB,OACrB,OACEtI,EAAAlmB,cAACouB,EAAAyB,QAAW,CACV9M,KAAMnjB,KAAK4mB,MAAMzD,KACjB9iB,UAAWL,KAAK4mB,MAAMvmB,UACtB2B,MAAOhC,KAAK4mB,MAAM5kB,MAClB0C,YAAa1E,KAAK4mB,MAAMliB,YACxBrD,OAAQrB,KAAK4mB,MAAMvlB,OACnBqmB,KAAM1nB,KAAK4mB,MAAMc,KACjBvlB,MAAOnC,KAAK4mB,MAAMzkB,MAClB0C,OAAQ7E,KAAK4mB,MAAM/hB,OACnBF,MAAO3E,KAAK4mB,MAAMjiB,MAClBgjB,SAAU3nB,KAAK4mB,MAAMe,SACrBE,WAAY7nB,KAAK4mB,MAAMiB,WACvBc,SAAU3oB,KAAK2oB,SACfe,QAAS1pB,KAAK4mB,MAAM8C,QACpBvB,OAAQnoB,KAAK4mB,MAAMuB,OACnB8B,SAAUjqB,KAAK4mB,MAAMqD,SACrB8D,SAAU/tB,KAAK4mB,MAAMmH,SACrBvhB,SAAUxM,KAAK4mB,MAAMpa,SACrBwhB,SAAUhuB,KAAK4mB,MAAMoH,SACrBC,oBAAqBjuB,KAAK4mB,MAAMqH,oBAChClG,gBAAiB/nB,KAAK4mB,MAAMmB,gBAC5BmG,QAASluB,KAAK4mB,MAAMsH,QACpBxC,YAAa1rB,KAAK4mB,MAAM8E,YACxBjD,YAAazoB,KAAK4mB,MAAM6B,YACxBloB,MAAOP,KAAK4mB,MAAMrmB,MAClB0nB,aAAcjoB,KAAK4mB,MAAMqB,aACzB2D,WAAY5rB,KAAK4mB,MAAMgF,WACvB9D,YAAa9nB,KAAK4mB,MAAMkB,YACxBsG,0BAA2BpuB,KAAK4mB,MAAMwH,0BACtCC,yBAA0BruB,KAAK4mB,MAAMyH,yBACrChU,MAAOra,KAAK2uB,MAAMtU,MAClBiO,QAASA,GAGf,EA1RcoG,EAAAd,UAAuD,CACnElC,YAAarF,EAAUlK,OACvBsM,YAAapC,EAAU7L,OACvB4T,0BAA2B/H,EAAUyH,KACrCO,yBAA0BhI,EAAUyH,KACpC9rB,MAAOqkB,EAAUyH,KACjBnG,SAAUtB,EAAUlK,OACpBtX,OAAQwhB,EAAUpK,OAClBgS,oBAAqB5H,EAAUyH,KAC/BthB,SAAU6Z,EAAUlK,OACpB4R,SAAU1H,EAAUlK,OACpBuL,KAAMrB,EAAUpK,OAChBkH,KAAMkD,EAAUpK,OAChB5b,UAAWgmB,EAAUpK,OACrBkM,OAAQ9B,EAAUlL,KAClBuO,QAASrD,EAAUlL,KACnB8O,SAAU5D,EAAUlL,KACpBwN,SAAUtC,EAAUlL,KACpBzW,YAAa2hB,EAAUpK,OACvB+R,SAAU3H,EAAUyH,KACpB7F,aAAc5B,EAAUlM,MACxByR,WAAYvF,EAAU7L,OACtBqN,WAAYxB,EAAUyH,KACtB/F,gBAAiB1B,EAAUyH,KAC3BzsB,OAAQglB,EAAUlK,OAClB5b,MAAO8lB,EAAU7L,OACjB0T,QAAS7H,EAAUlK,OACnBha,MAAOkkB,EAAUpK,OACjB5B,MAAOgM,EAAUlM,MACjBxV,MAAO0hB,EAAUpK,OACjB6L,YAAazB,EAAUyH,MAGXY,EAAAJ,aAA0C,CACtD5C,YAAa,EACbjD,YAAa,CAAC,EACd2F,2BAA2B,EAC3BC,0BAA0B,EAC1BrsB,OAAO,EACP2lB,SAAU,GACV9iB,OAAQ,QACRopB,qBAAqB,EACrBzhB,SAAU,KACVuhB,SAAU,KACVrG,KAAM,GACNvE,KAAM,aACNgF,OAAQ,KACR8B,SAAU,KACVP,QAAS,KACTf,SAAU,KACVjkB,YAAa,SACbspB,UAAU,EACV/F,aAAc,CAAC,EAAG,EAAG,EAAG,GACxB2D,WAAY,CAAC,EACb/D,YAAY,EACZE,iBAAiB,EACjB1mB,OAAQ,EACRd,MAAO,CAAC,EACR2tB,QAAS,EACT/rB,MAAO,SACPkY,MAAO,CAAC,GAAI,IACZ1V,MAAO,QACPmjB,aAAa,GA6NjB4G,C,CA/RA,CAA2CpI,EAAMiI,W,UAA5BG,C,kJCgDZpvB,EAAAA,cA/E6B,CACpC,WACA,WACA,WACA,sBACA,UACA,4BACA,2BACA,kBAuEsBA,EAAAA,aAvDY,CAClC,WACA,UACA,UACA,SACA,SACA,UACA,oBACA,iBACA,WACA,gBACA,aA4C8CA,EAAAA,eAhCzB,WACrB,IAAIH,EAgBJ,MAfsB,qBAAX+wB,QAGTjY,EAAAA,EAAOiY,OAAS,CAAC,EACjB/wB,EAAME,EAAQ,cAGP4Y,EAAAA,EAAOiY,QACJA,OAAe/wB,KAEzBA,EAAO+wB,OAAe/wB,KAClBgxB,SAAYD,OAAe/wB,IAAIE,SAAY6wB,OAAe/wB,IAAIgxB,SAElEhxB,EAAME,EAAQ,OAETF,CACT,EAcsCG,EAAAA,SAZrB,SAAC8wB,EAA8BC,GAC9C,IAAIC,EAAa,KAEjB,OAAO,WACL,IAAMC,EAAUvwB,KACVwc,EAAOC,UACb+T,aAAaF,GACbA,EAAQG,YAAW,WACjBL,EAAG1T,MAAM6T,EAAS/T,EACpB,GAAG6T,EACL,CACF,C,sGC1FA,IAAAK,EAAArxB,EAAA,OACAsxB,EAAAtxB,EAAA,OAaEC,EAAAA,KAbKqxB,EAAAV,QACP,IAAAzB,EAAAnvB,EAAA,OAWEC,EAAAA,MAXKkvB,EAAAyB,QAyBP3wB,EAAAA,QAAeoxB,EAAAT,O,gzBC3Bf,IAAAzJ,EAAAnnB,EAAA,OAMMF,GAAM,EAAAqnB,EAAAC,kBACZL,EAAA/mB,EAAA,OACAuxB,EAAAvxB,EAAA,MACAgnB,EAAAhnB,EAAA,OACAinB,EAAAjnB,EAAA,OACMknB,EAAUlnB,EAAQ,OAClB0c,EAAM1c,EAAQ,OAiEpBwxB,EAAA,SAAAlK,GA2FE,SAAAkK,EAAYjK,GACV,IAAAC,EAAAF,EAAKthB,KAAC,KAAAuhB,IAAM,K,OACZJ,EAAAM,aAAa1kB,SAAQ,SAAA2kB,GACnBF,EAAKE,GAAUF,EAAKE,GAAQhmB,KAAK8lB,EACnC,IACAA,EAAKG,SAAWR,EAAAQ,S,CAClB,CAqXF,OAtd4CC,EAAA4J,EAAAlK,GAkGnCkK,EAAAtrB,UAAA2hB,WAAP,SAAkBC,GAEhB,IADA,IAAIC,EAASD,GAAQA,EAAKE,WACnBD,GAAQ,CACb,GAA0B,wBAAtBA,EAAOhQ,WACT,OAAO,EAETgQ,EAASA,EAAOC,UAClB,CACA,OAAO,CACT,EACOwJ,EAAAtrB,UAAA+hB,kBAAP,eAAAT,EAAA,KACQU,EAoBFvnB,KAAK4mB,MAnBPvmB,EAASknB,EAAAlnB,UACTmnB,EAAYD,EAAAC,aACZE,EAAIH,EAAAG,KACJ1lB,EAAKulB,EAAAvlB,MACLG,EAAKolB,EAAAplB,MACLwlB,EAAQJ,EAAAI,SACRtN,EAAKkN,EAAAlN,MACLyC,EAAYyK,EAAAzK,aACZ4O,EAAWnE,EAAAmE,YACX7D,EAAUN,EAAAM,WACVC,EAAWP,EAAAO,YACXC,EAAeR,EAAAQ,gBACfC,EAAAT,EAAAU,aAAAA,OAAY,IAAAD,EAAG,CAAC,EAAG,EAAG,EAAG,GAAEA,EAC3BE,EAAeX,EAAAW,gBACfC,EAAMZ,EAAAY,OACNC,EAAQb,EAAAa,SACRC,EAAWd,EAAAc,YACXC,EAAOf,EAAAe,QACPjnB,EAAMkmB,EAAAlmB,OAGRrB,KAAKW,OAASxB,EAAIgR,KAAKnQ,KAAKwoB,WACxBxoB,KAAKknB,WAAWlnB,KAAKwoB,YACvBxoB,KAAKW,OAAOioB,SAASE,qBAEvB9oB,KAAKW,OAAOuB,SAAS,aAAAqG,OAAapG,IAE9BqlB,GACFA,EAAaroB,GAGf,IAAMspB,EAAcvQ,OAAOY,KAAK9Y,KAAK4mB,MAAM6B,aAErCjW,EAAQ,IAAIoe,EAAApxB,MAChBQ,KAAKW,OAAOa,UACZ,aAAA+G,OAAapG,GACbd,GAEFrB,KAAKW,OAAOmwB,IAAIte,MAAQA,EAExBxS,KAAK+wB,YAAcve,EAAM5Q,UAAU,GACnC5B,KAAKwS,MAAQA,EAEbxS,KAAKW,OAAO2oB,oBAAmB,GAC/BtpB,KAAKW,OAAOioB,SAASS,eAAc,GAEnC,IAAMe,EAAmBpqB,KAAK+wB,YAAY1G,SACtCrqB,KAAK4mB,MAAM8B,uBACb1oB,KAAK2oB,SAAW3oB,KAAKgnB,SACnBhnB,KAAK2oB,SACL3oB,KAAK4mB,MAAM8B,uBAGflW,EAAMpQ,SAAQ,SAACzB,EAAyBiZ,GACtC,IAAK,IAAI3U,EAAI,EAAGA,EAAIwjB,EAAYlnB,OAAQ0D,IACtCtE,EAAO8nB,EAAYxjB,IAAM4hB,EAAKD,MAAM6B,YAAYA,EAAYxjB,IAE9D,IAAM+rB,EAAwBjV,EAAIe,EAAclD,GAC1CqX,EAAiBlV,EAAI1B,EAAOT,EAAO,IACzCjZ,EAAOgC,QAAQM,eAAe,IAAI9D,EAAI+xB,aACtCvwB,EAAOuB,SAAS,aAAAqG,OAAapG,IAC7BxB,EAAOioB,SAASC,gBACdZ,EAAa,GACbA,EAAa,GACbA,EAAa,GACbA,EAAa,IAEftnB,EAAOooB,aAAaC,QAAQ,YAAAzgB,OAAYmf,IACxC/mB,EAAOO,YAAYymB,GACnBhnB,EAAOioB,SAASS,cAAcxB,GAC9BlnB,EAAOooB,aAAarlB,eAAeokB,GACnCnnB,EAAO2oB,mBAAmBvB,GAC1BpnB,EAAOE,GAAG,QAASgmB,EAAK0C,SACxB5oB,EAAOE,GAAG,OAAQgmB,EAAK2C,QACvB7oB,EAAOE,GAAG,QAAgBgmB,EAAK8C,SAC/BhpB,EAAOE,GAAG,OAAQgmB,EAAK4C,QACvB9oB,EAAOE,GAAG,QAASgmB,EAAK6C,SACxB/oB,EAAOE,GAAG,SAAUgmB,EAAK8B,UACzBhoB,EACGooB,aACAc,UAAUhpB,GAAG,kBAAmBgmB,EAAKiD,mBACxCnpB,EAAOooB,aAAac,UAAUhpB,GAAG,eAAgBgmB,EAAKkD,gBACtDppB,EAAOgC,QAAQ9B,GAAG,kBAAmBgmB,EAAKoD,UAC1CtpB,EAAOuoB,cACqB7c,IAA1B2kB,EACIC,EACAD,EACJtF,GAEF,IAAMyF,EAAiBpV,EAAIsM,EAAazO,EAAO,IACzCwX,EAAarV,EAAIuM,EAAS1O,EAAO,IACvCjZ,EAAOooB,aAAamB,eAAeiH,GAC/BC,GAAcA,EAAW7vB,OAAS,GACpCslB,EAAKsD,cAAciH,EAAYzwB,GAGjC,IAASsE,EAAI,EAAGA,EAAIuhB,EAAA8D,cAAc/oB,OAAQ0D,IAAK,CAC7C,IAAMslB,EAAS/D,EAAA8D,cAAcrlB,GACzBmlB,EAAiBhe,eAAeme,GAClC5pB,EAAO6pB,UAAUD,EAAe1D,EAAKD,MAAM2D,IAClC1D,EAAKD,MAAM2D,IACpBE,QAAQC,KACN,2BAAAniB,OAA2BgiB,EAAM,+GAGvC,CACA1D,EAAK8D,cAAc9D,EAAKD,MAAOjmB,GAE3BwJ,MAAMuQ,QAAQ0N,IAChBA,EAAShmB,SAAQ,SAAAwoB,GACa,kBAAjBA,EAAQ/R,KAChBlY,EAAOynB,SAAiByC,QAAQD,EAAQC,QAASD,EAAQ/R,MAEzDlY,EAAOynB,SAAiB0C,WAAWF,EAExC,IAGE1C,GACFvnB,EAAO0B,mBAAmB,gBAAkB6lB,EAEhD,IAEI7nB,IACFL,KAAKwoB,UAAUnoB,WAAa,IAAMA,GAGhC2B,GACFhC,KAAK+wB,YAAY/uB,QAGnB,IAAMqvB,EAAKrxB,KAAKW,OAAOmwB,IAAIte,MAC3B6e,EAAG5sB,eAC0B,UAA3BzE,KAAK4mB,MAAMliB,YAA0B2sB,EAAG/rB,MAAQ+rB,EAAGtsB,QAErDssB,EAAG3vB,QAAO,GACNymB,GACFA,EAAOkJ,EAEX,EAEOR,EAAAtrB,UAAAwlB,mBAAP,SAA0BC,GAA1B,IAAAnE,EAAA,KACQoE,EAAWD,EACXE,EAAYlrB,KAAK4mB,MAEjBpU,EAAQxS,KAAKW,OAAOmwB,IAAIte,MAqE9B,GAnEI0Y,EAAU7pB,SAAW4pB,EAAS5pB,QAChCmR,EAAMpR,UAAU8pB,EAAU7pB,QAGxB6pB,EAAUxmB,cAAgBumB,EAASvmB,aACrC8N,EAAM/N,eACsB,UAA1BymB,EAAUxmB,YAA0B8N,EAAMlN,MAAQkN,EAAMzN,QAI5DyN,EAAMpQ,SAAQ,SAACzB,EAAyBiZ,GAClCsR,EAAUxD,OAASuD,EAASvD,MAC9B/mB,EAAOooB,aAAaC,QAAQ,YAAckC,EAAUxD,MAElDwD,EAAUhD,kBAAoB+C,EAAS/C,kBACrCgD,EAAUhD,gBACZvnB,EAAO0B,mBACL,gBAAkB6oB,EAAUhD,iBAG9BvnB,EAAO0B,mBAAmB,OAG1B6oB,EAAUvD,WAAasD,EAAStD,UAClChnB,EAAOO,YAAYgqB,EAAUvD,UAE3BuD,EAAUpD,cAAgBmD,EAASnD,aACrCnnB,EAAOooB,aAAarlB,eAAewnB,EAAUpD,aAE3CoD,EAAUnD,kBAAoBkD,EAASlD,iBACzCpnB,EAAO2oB,mBAAmB4B,EAAUnD,iBAElCmD,EAAUrD,aAAeoD,EAASpD,YACpClnB,EAAOioB,SAASS,cAAc6B,EAAUrD,YAG1C,IAAK,IAAI5iB,EAAI,EAAGA,EAAIuhB,EAAA8D,cAAc/oB,OAAQ0D,IAAK,CAC7C,IAAMslB,EAAS/D,EAAA8D,cAAcrlB,GACzBimB,EAAUX,KAAYU,EAASV,IACjC5pB,EAAO6pB,UAAUD,EAAeW,EAAUX,GAE9C,CACKhE,EAAQ2E,EAAUU,WAAYX,EAASW,aAC1C/E,EAAK8D,cAAcO,EAAWvqB,GAEhC,IAAM2wB,EAAYvV,EAAImP,EAAU7Q,MAAOT,EAAO,IAC9C,GAAIjZ,EAAOkb,aAAeyV,EAAW,CAEnCzK,EAAK0E,QAAS,EACd,IAAMC,EAAO7qB,EAAOgC,QAAQknB,UAAkB4B,SAC9C9qB,EAAOuoB,SAASoI,EAAWpG,EAAUQ,aACpC/qB,EAAOgC,QAAQknB,UAAkB8B,SAASH,GAC3C3E,EAAK0E,QAAS,CAChB,CACA,IAAM4F,EAAiBpV,EAAImP,EAAU7C,YAAazO,EAAO,IACnD2X,EAAiBxV,EAAIkP,EAAS5C,YAAazO,EAAO,IACnD2M,EAAQ4K,EAAgBI,IAC3B5wB,EAAOooB,aAAamB,eAAeiH,GAGrC,IAAMC,EAAarV,EAAImP,EAAU5C,QAAS1O,EAAO,IAC3C4X,EAAazV,EAAIkP,EAAS3C,QAAS1O,EAAO,KAC3C2M,EAAQ6K,EAAYI,IAAernB,MAAMuQ,QAAQ0W,IACpDvK,EAAKsD,cAAciH,EAAYzwB,EAEnC,IAEIuqB,EAAU7qB,YAAc4qB,EAAS5qB,UAAW,CAC9C,IACM8qB,EADiBnrB,KAAKwoB,UAAUnoB,UACK+qB,OAAO5Y,MAAM,KAChCyY,EAAS5qB,UAAU+qB,OAAO5Y,MAAM,KACxCpQ,SAAQ,SAAAipB,GACtB,IAAMzR,EAAQuR,EAAoBtjB,QAAQwjB,GAC1CF,EAAoB5hB,OAAOqQ,EAAO,EACpC,IACA5Z,KAAKwoB,UAAUnoB,UACb,IAAM6qB,EAAU7qB,UAAY,IAAM8qB,EAAoBze,KAAK,IAC/D,CAEIwe,EAAU/oB,QAAU8oB,EAAS9oB,OAC/BqQ,EAAMtQ,SAAS,aAAegpB,EAAU/oB,OAGtC+oB,EAAUlpB,QAAUipB,EAASjpB,OAC/BhC,KAAK+wB,YAAY/uB,QAGjBkpB,EAAUrmB,SAAW7E,KAAK4mB,MAAM/hB,QAChCqmB,EAAUvmB,QAAU3E,KAAK4mB,MAAMjiB,OAE/B3E,KAAKW,OAAOe,QAEhB,EAEOmvB,EAAAtrB,UAAAwmB,qBAAP,WACE/rB,KAAKW,OAAOqrB,UACZhsB,KAAKW,OAAS,IAChB,EAEOkwB,EAAAtrB,UAAAojB,SAAP,SAAgBsD,GACd,GAAIjsB,KAAK4mB,MAAM+B,WAAa3oB,KAAKurB,OAAQ,CACvC,IAAMkG,EAAa,GACnBzxB,KAAKW,OAAOmwB,IAAIte,MAAMpQ,SAAQ,SAACzB,GAC7B8wB,EAAMxwB,KAAKN,EAAOkb,WACpB,IACA7b,KAAK4mB,MAAM+B,SAAS8I,EAAOxF,EAC7B,CACF,EAEO4E,EAAAtrB,UAAAukB,kBAAP,SAAyBmC,GACvB,GAAIjsB,KAAK4mB,MAAMkD,kBAAmB,CAChC,IAAM4H,EAAa,GACnB1xB,KAAKW,OAAOmwB,IAAIte,MAAMpQ,SAAQ,SAACzB,GAC7B+wB,EAAMzwB,KAAKN,EAAOurB,eACpB,IACAlsB,KAAK4mB,MAAMkD,kBAAkB4H,EAAOzF,EACtC,CACF,EACO4E,EAAAtrB,UAAAwkB,eAAP,SAAsBkC,GACpB,GAAIjsB,KAAK4mB,MAAMmD,eAAgB,CAC7B,IAAM4H,EAAa,GACnB3xB,KAAKW,OAAOmwB,IAAIte,MAAMpQ,SAAQ,SAACzB,GAC7BgxB,EAAM1wB,KAAKN,EAAOurB,eACpB,IACAlsB,KAAK4mB,MAAMmD,eAAe4H,EAAO1F,EACnC,CACF,EACO4E,EAAAtrB,UAAAgkB,QAAP,SAAe0C,GACTjsB,KAAK4mB,MAAM2C,SACbvpB,KAAK4mB,MAAM2C,QAAQ0C,EAEvB,EAEO4E,EAAAtrB,UAAAokB,QAAP,SAAesC,GACTjsB,KAAK4mB,MAAM+C,SACb3pB,KAAK4mB,MAAM+C,QAAQsC,EAEvB,EAEO4E,EAAAtrB,UAAAikB,OAAP,SAAcyC,GACRjsB,KAAK4mB,MAAM4C,QACbxpB,KAAK4mB,MAAM4C,OAAOyC,EAEtB,EAEO4E,EAAAtrB,UAAAkkB,OAAP,SAAcrjB,GACRpG,KAAK4mB,MAAM6C,QACbzpB,KAAK4mB,MAAM6C,OAAOrjB,EAEtB,EAEOyqB,EAAAtrB,UAAAmkB,QAAP,SAAetjB,GACTpG,KAAK4mB,MAAM8C,SACb1pB,KAAK4mB,MAAM8C,QAAQtjB,EAEvB,EAEOyqB,EAAAtrB,UAAA0kB,SAAP,WACMjqB,KAAK4mB,MAAMqD,UACbjqB,KAAK4mB,MAAMqD,SAASjqB,KAAKW,OAE7B,EAEOkwB,EAAAtrB,UAAAolB,cAAP,SAAqB/D,EAA0BjmB,GAE7C,IADA,IAAMirB,EAAa1T,OAAOY,KAAK8N,EAAMgF,YAC5BrgB,EAAI,EAAGA,EAAIqgB,EAAWrqB,OAAQgK,IACrC5K,EAAO6pB,UAAUoB,EAAWrgB,GAAWqb,EAAMgF,WAAWA,EAAWrgB,IAEvE,EAEOslB,EAAAtrB,UAAA4kB,cAAP,SAAqB7B,EAAoB3nB,GAEvC,IAAIwrB,EAAiBxrB,EAAOooB,aAAaqD,YAAW,GACpD,IAAK,IAAMnnB,KAAKknB,EACVA,EAAe/f,eAAenH,IAChCtE,EAAOooB,aAAasD,aAAaF,EAAelnB,GAAGqnB,IAKvD,IAAK,IAAMrnB,KADXknB,EAAiBxrB,EAAOooB,aAAaqD,YAAW,GAE1CD,EAAe/f,eAAenH,IAChCtE,EAAOooB,aAAasD,aAAaF,EAAelnB,GAAGqnB,IAIvDhE,EAAQlmB,SACN,SAACmlB,G,IACCiF,EAAQjF,EAAAiF,SACRC,EAAQlF,EAAAkF,SACRC,EAAMnF,EAAAmF,OACNC,EAAMpF,EAAAoF,OACNtsB,EAASknB,EAAAlnB,UACTsa,EAAI4M,EAAA5M,KACJqN,EAAAT,EAAAqF,QAAAA,OAAO,IAAA5E,GAAQA,EAET6E,EAAQ,IAAIzG,EAAA0G,MAAMN,EAAUC,EAAUC,EAAQC,GACpDhsB,EACGooB,aACAgE,UAAUF,EAAcxsB,EAAWsa,EAAaiS,EACrD,GAEJ,EAEOiE,EAAAtrB,UAAA+nB,UAAP,SAAiBC,GACfvtB,KAAKwoB,UAAY+E,CACnB,EAEOsD,EAAAtrB,UAAAioB,OAAP,WACQ,IAAAjG,EAAiCvnB,KAAK4mB,MAApCzD,EAAIoE,EAAApE,KAAExe,EAAK4iB,EAAA5iB,MAAEE,EAAM0iB,EAAA1iB,OAAEtE,EAAKgnB,EAAAhnB,MAC5BktB,EAAQC,EAAA,CAAK/oB,MAAKA,EAAEE,OAAMA,GAAKtE,GACrC,OAAO+lB,EAAAlmB,cAAA,OAAKutB,IAAK3tB,KAAKstB,UAAWhB,GAAInJ,EAAM5iB,MAAOktB,GACpD,EAldcoD,EAAAjD,UAAwD,CACpEvtB,UAAWgmB,EAAUpK,OACrByM,qBAAsBrC,EAAUlK,OAChCW,aAAcuJ,EAAUuL,QAAQvL,EAAUpK,QAC1Cja,MAAOqkB,EAAUyH,KACjBnG,SAAUtB,EAAUwH,UAAU,CAACxH,EAAUlK,OAAQkK,EAAUpK,SAC3DpX,OAAQwhB,EAAUpK,OAClByL,KAAMrB,EAAUpK,OAChBkH,KAAMkD,EAAUpK,OAChBuN,OAAQnD,EAAUlL,KAClBwN,SAAUtC,EAAUlL,KACpBsO,OAAQpD,EAAUlL,KAClBoO,QAASlD,EAAUlL,KACnBwO,QAAStD,EAAUlL,KACnBgN,OAAQ9B,EAAUlL,KAClBuO,QAASrD,EAAUlL,KACnB8O,SAAU5D,EAAUlL,KACpBzW,YAAa2hB,EAAUpK,OACvB4L,WAAYxB,EAAUyH,KACtBzsB,OAAQglB,EAAUlK,OAClBha,MAAOkkB,EAAUpK,OACjB5B,MAAOgM,EAAUuL,QAAQvL,EAAUpK,QACnCtX,MAAO0hB,EAAUpK,OACjB6N,kBAAmBzD,EAAUlL,KAC7B4O,eAAgB1D,EAAUlL,KAC1BqM,aAAcnB,EAAUlL,KACxB4S,SAAU1H,EAAUlK,OACpB3P,SAAU6Z,EAAUlK,OACpB6R,SAAU3H,EAAUyH,KACpBG,oBAAqB5H,EAAUyH,KAC/BI,QAAS7H,EAAUlK,OACnB4L,gBAAiB1B,EAAUyH,KAC3BpC,YAAarF,EAAUlK,OACvBsM,YAAapC,EAAU7L,OACvBoR,WAAYvF,EAAU7L,OACtBja,MAAO8lB,EAAU7L,OACjByN,aAAc5B,EAAUlM,MACxBkO,YAAahC,EAAUlM,MACvBmO,QAASjC,EAAUlM,MACnB+N,gBAAiB7B,EAAUpK,OAC3B6L,YAAazB,EAAUyH,KACvBM,0BAA2B/H,EAAUwH,UAAU,CAC7CxH,EAAUyH,KACVzH,EAAUlM,QAEZkU,yBAA0BhI,EAAUwH,UAAU,CAC5CxH,EAAUyH,KACVzH,EAAUlM,QAEZiO,SAAU/B,EAAUlM,OAER0W,EAAAvC,aAA2C,CACvDnL,KAAM,aACNnhB,OAAO,EACP0C,YAAa,SACbrD,OAAQ,EACRqmB,KAAM,GACNvlB,MAAO,GACP0C,OAAQ,QACRF,MAAO,QACP0V,MAAO,GACPsN,SAAU,GACVE,YAAY,EACZc,SAAU,KACVe,QAAS,KACTvB,OAAQ,KACR8B,SAAU,KACV8D,SAAU,KACVvhB,SAAU,KACVwhB,UAAU,EACVC,qBAAqB,EACrBlG,iBAAiB,EACjBmG,QAAS,EACTxC,YAAa,EACbjD,YAAa,CAAC,EACdloB,MAAO,CAAC,EACR0nB,aAAc,CAAC,EAAG,EAAG,EAAG,GACxB2D,WAAY,CAAC,EACb9D,aAAa,EACbsG,2BAA2B,EAC3BC,0BAA0B,GAmY9BwC,C,CAtdA,CAA4CvK,EAAMiI,W,UAA7BsC,C","sources":["../node_modules/ace-builds/src-noconflict/ext-split.js","../node_modules/diff-match-patch/index.js","../node_modules/lodash.get/index.js","../node_modules/lodash.isequal/index.js","../node_modules/react-ace/src/ace.tsx","../node_modules/react-ace/src/diff.tsx","../node_modules/react-ace/src/editorOptions.ts","../node_modules/react-ace/src/index.ts","../node_modules/react-ace/src/split.tsx"],"sourcesContent":["ace.define(\"ace/split\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/lib/event_emitter\",\"ace/editor\",\"ace/virtual_renderer\",\"ace/edit_session\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"./lib/oop\");\nvar lang = require(\"./lib/lang\");\nvar EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\nvar Editor = require(\"./editor\").Editor;\nvar Renderer = require(\"./virtual_renderer\").VirtualRenderer;\nvar EditSession = require(\"./edit_session\").EditSession;\nvar Split;\nSplit = function (container, theme, splits) {\n    this.BELOW = 1;\n    this.BESIDE = 0;\n    this.$container = container;\n    this.$theme = theme;\n    this.$splits = 0;\n    this.$editorCSS = \"\";\n    this.$editors = [];\n    this.$orientation = this.BESIDE;\n    this.setSplits(splits || 1);\n    this.$cEditor = this.$editors[0];\n    this.on(\"focus\", function (editor) {\n        this.$cEditor = editor;\n    }.bind(this));\n};\n(function () {\n    oop.implement(this, EventEmitter);\n    this.$createEditor = function () {\n        var el = document.createElement(\"div\");\n        el.className = this.$editorCSS;\n        el.style.cssText = \"position: absolute; top:0px; bottom:0px\";\n        this.$container.appendChild(el);\n        var editor = new Editor(new Renderer(el, this.$theme));\n        editor.on(\"focus\", function () {\n            this._emit(\"focus\", editor);\n        }.bind(this));\n        this.$editors.push(editor);\n        editor.setFontSize(this.$fontSize);\n        return editor;\n    };\n    this.setSplits = function (splits) {\n        var editor;\n        if (splits < 1) {\n            throw \"The number of splits have to be > 0!\";\n        }\n        if (splits == this.$splits) {\n            return;\n        }\n        else if (splits > this.$splits) {\n            while (this.$splits < this.$editors.length && this.$splits < splits) {\n                editor = this.$editors[this.$splits];\n                this.$container.appendChild(editor.container);\n                editor.setFontSize(this.$fontSize);\n                this.$splits++;\n            }\n            while (this.$splits < splits) {\n                this.$createEditor();\n                this.$splits++;\n            }\n        }\n        else {\n            while (this.$splits > splits) {\n                editor = this.$editors[this.$splits - 1];\n                this.$container.removeChild(editor.container);\n                this.$splits--;\n            }\n        }\n        this.resize();\n    };\n    this.getSplits = function () {\n        return this.$splits;\n    };\n    this.getEditor = function (idx) {\n        return this.$editors[idx];\n    };\n    this.getCurrentEditor = function () {\n        return this.$cEditor;\n    };\n    this.focus = function () {\n        this.$cEditor.focus();\n    };\n    this.blur = function () {\n        this.$cEditor.blur();\n    };\n    this.setTheme = function (theme) {\n        this.$editors.forEach(function (editor) {\n            editor.setTheme(theme);\n        });\n    };\n    this.setKeyboardHandler = function (keybinding) {\n        this.$editors.forEach(function (editor) {\n            editor.setKeyboardHandler(keybinding);\n        });\n    };\n    this.forEach = function (callback, scope) {\n        this.$editors.forEach(callback, scope);\n    };\n    this.$fontSize = \"\";\n    this.setFontSize = function (size) {\n        this.$fontSize = size;\n        this.forEach(function (editor) {\n            editor.setFontSize(size);\n        });\n    };\n    this.$cloneSession = function (session) {\n        var s = new EditSession(session.getDocument(), session.getMode());\n        var undoManager = session.getUndoManager();\n        s.setUndoManager(undoManager);\n        s.setTabSize(session.getTabSize());\n        s.setUseSoftTabs(session.getUseSoftTabs());\n        s.setOverwrite(session.getOverwrite());\n        s.setBreakpoints(session.getBreakpoints());\n        s.setUseWrapMode(session.getUseWrapMode());\n        s.setUseWorker(session.getUseWorker());\n        s.setWrapLimitRange(session.$wrapLimitRange.min, session.$wrapLimitRange.max);\n        s.$foldData = session.$cloneFoldData();\n        return s;\n    };\n    this.setSession = function (session, idx) {\n        var editor;\n        if (idx == null) {\n            editor = this.$cEditor;\n        }\n        else {\n            editor = this.$editors[idx];\n        }\n        var isUsed = this.$editors.some(function (editor) {\n            return editor.session === session;\n        });\n        if (isUsed) {\n            session = this.$cloneSession(session);\n        }\n        editor.setSession(session);\n        return session;\n    };\n    this.getOrientation = function () {\n        return this.$orientation;\n    };\n    this.setOrientation = function (orientation) {\n        if (this.$orientation == orientation) {\n            return;\n        }\n        this.$orientation = orientation;\n        this.resize();\n    };\n    this.resize = function () {\n        var width = this.$container.clientWidth;\n        var height = this.$container.clientHeight;\n        var editor;\n        if (this.$orientation == this.BESIDE) {\n            var editorWidth = width / this.$splits;\n            for (var i = 0; i < this.$splits; i++) {\n                editor = this.$editors[i];\n                editor.container.style.width = editorWidth + \"px\";\n                editor.container.style.top = \"0px\";\n                editor.container.style.left = i * editorWidth + \"px\";\n                editor.container.style.height = height + \"px\";\n                editor.resize();\n            }\n        }\n        else {\n            var editorHeight = height / this.$splits;\n            for (var i = 0; i < this.$splits; i++) {\n                editor = this.$editors[i];\n                editor.container.style.width = width + \"px\";\n                editor.container.style.top = i * editorHeight + \"px\";\n                editor.container.style.left = \"0px\";\n                editor.container.style.height = editorHeight + \"px\";\n                editor.resize();\n            }\n        }\n    };\n}).call(Split.prototype);\nexports.Split = Split;\n\n});\n\nace.define(\"ace/ext/split\",[\"require\",\"exports\",\"module\",\"ace/split\"], function(require, exports, module){\"use strict\";\nmodule.exports = require(\"../split\");\n\n});                (function() {\n                    ace.require([\"ace/ext/split\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            ","/**\n * Diff Match and Patch\n * Copyright 2018 The diff-match-patch Authors.\n * https://github.com/google/diff-match-patch\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nvar diff_match_patch = function() {\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Diff_Timeout = 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.Diff_EditCost = 4;\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n  this.Match_Threshold = 0.5;\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\n  // A match this many characters away from the expected location will add\n  // 1.0 to the score (0.0 is a perfect match).\n  this.Match_Distance = 1000;\n  // When deleting a large block of text (over ~64 characters), how close do\n  // the contents have to be to match the expected contents. (0.0 = perfection,\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n  // end points of a delete need to match.\n  this.Patch_DeleteThreshold = 0.5;\n  // Chunk size for context length.\n  this.Patch_Margin = 4;\n\n  // The number of bits in an int.\n  this.Match_MaxBits = 32;\n};\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/**\n * Class representing one diff tuple.\n * ~Attempts to look like a two-element array (which is what this used to be).~\n * Constructor returns an actual two-element array, to allow destructing @JackuB\n * See https://github.com/JackuB/diff-match-patch/issues/14 for details\n * @param {number} op Operation, one of: DIFF_DELETE, DIFF_INSERT, DIFF_EQUAL.\n * @param {string} text Text to be deleted, inserted, or retained.\n * @constructor\n */\ndiff_match_patch.Diff = function(op, text) {\n  return [op, text];\n};\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\n *     then don't run a line-level diff first to identify the changed areas.\n *     Defaults to true, which does a faster, slightly less optimal diff.\n * @param {number=} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Diff_Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [new diff_match_patch.Diff(DIFF_EQUAL, text1)];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, commonprefix));\n  }\n  if (commonsuffix) {\n    diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, commonsuffix));\n  }\n  this.diff_cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [new diff_match_patch.Diff(DIFF_INSERT, text2)];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [new diff_match_patch.Diff(DIFF_DELETE, text1)];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [new diff_match_patch.Diff(DIFF_INSERT, longtext.substring(0, i)),\n             new diff_match_patch.Diff(DIFF_EQUAL, shorttext),\n             new diff_match_patch.Diff(DIFF_INSERT,\n                 longtext.substring(i + shorttext.length))];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [new diff_match_patch.Diff(DIFF_DELETE, text1),\n            new diff_match_patch.Diff(DIFF_INSERT, text2)];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = this.diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([new diff_match_patch.Diff(DIFF_EQUAL, mid_common)],\n                          diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.diff_lineMode_(text1, text2, deadline);\n  }\n\n  return this.diff_bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.diff_linesToChars_(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  var linearray = a.lineArray;\n\n  var diffs = this.diff_main(text1, text2, false, deadline);\n\n  // Convert the diff back to original text.\n  this.diff_charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.diff_cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, ''));\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          var subDiff =\n              this.diff_main(text_delete, text_insert, false, deadline);\n          for (var j = subDiff.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, subDiff[j]);\n          }\n          pointer = pointer + subDiff.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [new diff_match_patch.Diff(DIFF_DELETE, text1),\n          new diff_match_patch.Diff(DIFF_INSERT, text2)];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n *     An object containing the encoded text1, the encoded text2 and\n *     the array of unique strings.\n *     The zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        if (lineArrayLength == maxLines) {\n          // Bail out at 65535 because\n          // String.fromCharCode(65536) == String.fromCharCode(0)\n          line = text.substring(lineStart);\n          lineEnd = text.length;\n        }\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n      lineStart = lineEnd + 1;\n    }\n    return chars;\n  }\n  // Allocate 2/3rds of the space for text1, the rest for text2.\n  var maxLines = 40000;\n  var chars1 = diff_linesToCharsMunge_(text1);\n  maxLines = 65535;\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\n  for (var i = 0; i < diffs.length; i++) {\n    var chars = diffs[i][1];\n    var text = [];\n    for (var j = 0; j < chars.length; j++) {\n      text[j] = lineArray[chars.charCodeAt(j)];\n    }\n    diffs[i][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: https://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: https://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: https://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n  if (this.Diff_Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\n                                               shorttext.substring(j));\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\n                                               shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastEquality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastEquality = diffs[pointer][1];\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastEquality && (lastEquality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastEquality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     new diff_match_patch.Diff(DIFF_DELETE, lastEquality));\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastEquality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n  this.diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 ||\n            overlap_length1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n              insertion.substring(0, overlap_length1)));\n          diffs[pointer - 1][1] =\n              deletion.substring(0, deletion.length - overlap_length1);\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 ||\n            overlap_length2 >= insertion.length / 2) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n              deletion.substring(0, overlap_length2)));\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] =\n              insertion.substring(0, insertion.length - overlap_length2);\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] =\n              deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 &&\n        char1.match(diff_match_patch.whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 &&\n        char2.match(diff_match_patch.whitespaceRegex_);\n    var lineBreak1 = whitespace1 &&\n        char1.match(diff_match_patch.linebreakRegex_);\n    var lineBreak2 = whitespace2 &&\n        char2.match(diff_match_patch.linebreakRegex_);\n    var blankLine1 = lineBreak1 &&\n        one.match(diff_match_patch.blanklineEndRegex_);\n    var blankLine2 = lineBreak2 &&\n        two.match(diff_match_patch.blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n// Define some regex patterns for matching boundaries.\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\ndiff_match_patch.whitespaceRegex_ = /\\s/;\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastEquality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastEquality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastEquality = null;\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastEquality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastEquality.length < this.Diff_EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     new diff_match_patch.Diff(DIFF_DELETE, lastEquality));\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastEquality = null;\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n  // Add a dummy entry at the end.\n  diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, ''));\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n                    text_insert.substring(0, commonlength)));\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          pointer -= count_delete + count_insert;\n          diffs.splice(pointer, count_delete + count_insert);\n          if (text_delete.length) {\n            diffs.splice(pointer, 0,\n                new diff_match_patch.Diff(DIFF_DELETE, text_delete));\n            pointer++;\n          }\n          if (text_insert.length) {\n            diffs.splice(pointer, 0,\n                new diff_match_patch.Diff(DIFF_INSERT, text_insert));\n            pointer++;\n          }\n          pointer++;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\n  var html = [];\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_para = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] =\n              new diff_match_patch.Diff(DIFF_INSERT, decodeURI(param));\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = new diff_match_patch.Diff(DIFF_EQUAL, text);\n        } else {\n          diffs[diffsLength++] = new diff_match_patch.Diff(DIFF_DELETE, text);\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n//  MATCH FUNCTIONS\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n */\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\n  // Check for null inputs.\n  if (text == null || pattern == null || loc == null) {\n    throw new Error('Null input. (match_main)');\n  }\n\n  loc = Math.max(0, Math.min(loc, text.length));\n  if (text == pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0;\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc;\n  } else {\n    // Do a fuzzy compare.\n    return this.match_bitap_(text, pattern, loc);\n  }\n};\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n * @private\n */\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\n  if (pattern.length > this.Match_MaxBits) {\n    throw new Error('Pattern too long for this browser.');\n  }\n\n  // Initialise the alphabet.\n  var s = this.match_alphabet_(pattern);\n\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   * @param {number} e Number of errors in match.\n   * @param {number} x Location of match.\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n   * @private\n   */\n  function match_bitapScore_(e, x) {\n    var accuracy = e / pattern.length;\n    var proximity = Math.abs(loc - x);\n    if (!dmp.Match_Distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy;\n    }\n    return accuracy + (proximity / dmp.Match_Distance);\n  }\n\n  // Highest score beyond which we give up.\n  var score_threshold = this.Match_Threshold;\n  // Is there a nearby exact match? (speedup)\n  var best_loc = text.indexOf(pattern, loc);\n  if (best_loc != -1) {\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    // What about in the other direction? (speedup)\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n    if (best_loc != -1) {\n      score_threshold =\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    }\n  }\n\n  // Initialise the bit arrays.\n  var matchmask = 1 << (pattern.length - 1);\n  best_loc = -1;\n\n  var bin_min, bin_mid;\n  var bin_max = pattern.length + text.length;\n  var last_rd;\n  for (var d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    bin_min = 0;\n    bin_mid = bin_max;\n    while (bin_min < bin_mid) {\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n        bin_min = bin_mid;\n      } else {\n        bin_max = bin_mid;\n      }\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n    }\n    // Use the result from this iteration as the maximum for the next.\n    bin_max = bin_mid;\n    var start = Math.max(1, loc - bin_mid + 1);\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\n    var rd = Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (var j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      var charMatch = s[text.charAt(j - 1)];\n      if (d === 0) {  // First pass: exact match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n      } else {  // Subsequent passes: fuzzy match.\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n                last_rd[j + 1];\n      }\n      if (rd[j] & matchmask) {\n        var score = match_bitapScore_(d, j - 1);\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (score <= score_threshold) {\n          // Told you so.\n          score_threshold = score;\n          best_loc = j - 1;\n          if (best_loc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - best_loc);\n          } else {\n            // Already passed loc, downhill from here on in.\n            break;\n          }\n        }\n      }\n    }\n    // No hope for a (better) match at greater error levels.\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n      break;\n    }\n    last_rd = rd;\n  }\n  return best_loc;\n};\n\n\n/**\n * Initialise the alphabet for the Bitap algorithm.\n * @param {string} pattern The text to encode.\n * @return {!Object} Hash of character locations.\n * @private\n */\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\n  var s = {};\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n  }\n  return s;\n};\n\n\n//  PATCH FUNCTIONS\n\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond Match_MaxBits.\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n * @param {string} text Source text.\n * @private\n */\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\n  if (text.length == 0) {\n    return;\n  }\n  if (patch.start2 === null) {\n    throw Error('patch not initialized');\n  }\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  var padding = 0;\n\n  // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\n         this.Patch_Margin) {\n    padding += this.Patch_Margin;\n    pattern = text.substring(patch.start2 - padding,\n                             patch.start2 + patch.length1 + padding);\n  }\n  // Add one chunk for good luck.\n  padding += this.Patch_Margin;\n\n  // Add the prefix.\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\n  if (prefix) {\n    patch.diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, prefix));\n  }\n  // Add the suffix.\n  var suffix = text.substring(patch.start2 + patch.length1,\n                              patch.start2 + patch.length1 + padding);\n  if (suffix) {\n    patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, suffix));\n  }\n\n  // Roll back the start points.\n  patch.start1 -= prefix.length;\n  patch.start2 -= prefix.length;\n  // Extend the lengths.\n  patch.length1 += prefix.length + suffix.length;\n  patch.length2 += prefix.length + suffix.length;\n};\n\n\n/**\n * Compute a list of patches to turn text1 into text2.\n * Use diffs if provided, otherwise compute it ourselves.\n * There are four ways to call this function, depending on what data is\n * available to the caller:\n * Method 1:\n * a = text1, b = text2\n * Method 2:\n * a = diffs\n * Method 3 (optimal):\n * a = text1, b = diffs\n * Method 4 (deprecated, use method 3):\n * a = text1, b = text2, c = diffs\n *\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n * Array of diff tuples for text1 to text2 (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>=} opt_b text2 (methods 1,4) or\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>=} opt_c Array of diff tuples\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\n  var text1, diffs;\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\n      typeof opt_c == 'undefined') {\n    // Method 1: text1, text2\n    // Compute diffs from text1 and text2.\n    text1 = /** @type {string} */(a);\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\n    if (diffs.length > 2) {\n      this.diff_cleanupSemantic(diffs);\n      this.diff_cleanupEfficiency(diffs);\n    }\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\n      typeof opt_c == 'undefined') {\n    // Method 2: diffs\n    // Compute text1 from diffs.\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\n    text1 = this.diff_text1(diffs);\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\n      typeof opt_c == 'undefined') {\n    // Method 3: text1, diffs\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\n      opt_c && typeof opt_c == 'object') {\n    // Method 4: text1, text2, diffs\n    // text2 is not used.\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\n  } else {\n    throw new Error('Unknown call format to patch_make.');\n  }\n\n  if (diffs.length === 0) {\n    return [];  // Get rid of the null case.\n  }\n  var patches = [];\n  var patch = new diff_match_patch.patch_obj();\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\n  var char_count1 = 0;  // Number of characters into the text1 string.\n  var char_count2 = 0;  // Number of characters into the text2 string.\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\n  // context info.\n  var prepatch_text = text1;\n  var postpatch_text = text1;\n  for (var x = 0; x < diffs.length; x++) {\n    var diff_type = diffs[x][0];\n    var diff_text = diffs[x][1];\n\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = char_count1;\n      patch.start2 = char_count2;\n    }\n\n    switch (diff_type) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = diffs[x];\n        patch.length2 += diff_text.length;\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\n                         postpatch_text.substring(char_count2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diff_text.length;\n        patch.diffs[patchDiffLength++] = diffs[x];\n        postpatch_text = postpatch_text.substring(0, char_count2) +\n                         postpatch_text.substring(char_count2 +\n                             diff_text.length);\n        break;\n      case DIFF_EQUAL:\n        if (diff_text.length <= 2 * this.Patch_Margin &&\n            patchDiffLength && diffs.length != x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length1 += diff_text.length;\n          patch.length2 += diff_text.length;\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            this.patch_addContext_(patch, prepatch_text);\n            patches.push(patch);\n            patch = new diff_match_patch.patch_obj();\n            patchDiffLength = 0;\n            // Unlike Unidiff, our patch lists have a rolling context.\n            // https://github.com/google/diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n            prepatch_text = postpatch_text;\n            char_count1 = char_count2;\n          }\n        }\n        break;\n    }\n\n    // Update the current character count.\n    if (diff_type !== DIFF_INSERT) {\n      char_count1 += diff_text.length;\n    }\n    if (diff_type !== DIFF_DELETE) {\n      char_count2 += diff_text.length;\n    }\n  }\n  // Pick up the leftover patch if not empty.\n  if (patchDiffLength) {\n    this.patch_addContext_(patch, prepatch_text);\n    patches.push(patch);\n  }\n\n  return patches;\n};\n\n\n/**\n * Given an array of patches, return another array that is identical.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\n  // Making deep copies is hard in JavaScript.\n  var patchesCopy = [];\n  for (var x = 0; x < patches.length; x++) {\n    var patch = patches[x];\n    var patchCopy = new diff_match_patch.patch_obj();\n    patchCopy.diffs = [];\n    for (var y = 0; y < patch.diffs.length; y++) {\n      patchCopy.diffs[y] =\n          new diff_match_patch.Diff(patch.diffs[y][0], patch.diffs[y][1]);\n    }\n    patchCopy.start1 = patch.start1;\n    patchCopy.start2 = patch.start2;\n    patchCopy.length1 = patch.length1;\n    patchCopy.length2 = patch.length2;\n    patchesCopy[x] = patchCopy;\n  }\n  return patchesCopy;\n};\n\n\n/**\n * Merge a set of patches onto the text.  Return a patched text, as well\n * as a list of true/false values indicating which patches were applied.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @param {string} text Old text.\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n *      new text and an array of boolean values.\n */\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\n  if (patches.length == 0) {\n    return [text, []];\n  }\n\n  // Deep copy the patches so that no changes are made to originals.\n  patches = this.patch_deepCopy(patches);\n\n  var nullPadding = this.patch_addPadding(patches);\n  text = nullPadding + text + nullPadding;\n\n  this.patch_splitMax(patches);\n  // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n  var delta = 0;\n  var results = [];\n  for (var x = 0; x < patches.length; x++) {\n    var expected_loc = patches[x].start2 + delta;\n    var text1 = this.diff_text1(patches[x].diffs);\n    var start_loc;\n    var end_loc = -1;\n    if (text1.length > this.Match_MaxBits) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\n                                  expected_loc);\n      if (start_loc != -1) {\n        end_loc = this.match_main(text,\n            text1.substring(text1.length - this.Match_MaxBits),\n            expected_loc + text1.length - this.Match_MaxBits);\n        if (end_loc == -1 || start_loc >= end_loc) {\n          // Can't find valid trailing context.  Drop this patch.\n          start_loc = -1;\n        }\n      }\n    } else {\n      start_loc = this.match_main(text, text1, expected_loc);\n    }\n    if (start_loc == -1) {\n      // No match found.  :(\n      results[x] = false;\n      // Subtract the delta for this failed patch from subsequent patches.\n      delta -= patches[x].length2 - patches[x].length1;\n    } else {\n      // Found a match.  :)\n      results[x] = true;\n      delta = start_loc - expected_loc;\n      var text2;\n      if (end_loc == -1) {\n        text2 = text.substring(start_loc, start_loc + text1.length);\n      } else {\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n      }\n      if (text1 == text2) {\n        // Perfect match, just shove the replacement text in.\n        text = text.substring(0, start_loc) +\n               this.diff_text2(patches[x].diffs) +\n               text.substring(start_loc + text1.length);\n      } else {\n        // Imperfect match.  Run a diff to get a framework of equivalent\n        // indices.\n        var diffs = this.diff_main(text1, text2, false);\n        if (text1.length > this.Match_MaxBits &&\n            this.diff_levenshtein(diffs) / text1.length >\n            this.Patch_DeleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false;\n        } else {\n          this.diff_cleanupSemanticLossless(diffs);\n          var index1 = 0;\n          var index2;\n          for (var y = 0; y < patches[x].diffs.length; y++) {\n            var mod = patches[x].diffs[y];\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = this.diff_xIndex(diffs, index1);\n            }\n            if (mod[0] === DIFF_INSERT) {  // Insertion\n              text = text.substring(0, start_loc + index2) + mod[1] +\n                     text.substring(start_loc + index2);\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\n              text = text.substring(0, start_loc + index2) +\n                     text.substring(start_loc + this.diff_xIndex(diffs,\n                         index1 + mod[1].length));\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  }\n  // Strip the padding off.\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n};\n\n\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} The padding string added to each side.\n */\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\n  var paddingLength = this.Patch_Margin;\n  var nullPadding = '';\n  for (var x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  }\n\n  // Bump all the patches forward.\n  for (var x = 0; x < patches.length; x++) {\n    patches[x].start1 += paddingLength;\n    patches[x].start2 += paddingLength;\n  }\n\n  // Add some padding on start of first diff.\n  var patch = patches[0];\n  var diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, nullPadding));\n    patch.start1 -= paddingLength;  // Should be 0.\n    patch.start2 -= paddingLength;  // Should be 0.\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    var extraLength = paddingLength - diffs[0][1].length;\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  // Add some padding on end of last diff.\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, nullPadding));\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  return nullPadding;\n};\n\n\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\n  var patch_size = this.Match_MaxBits;\n  for (var x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patch_size) {\n      continue;\n    }\n    var bigpatch = patches[x];\n    // Remove the big old patch.\n    patches.splice(x--, 1);\n    var start1 = bigpatch.start1;\n    var start2 = bigpatch.start2;\n    var precontext = '';\n    while (bigpatch.diffs.length !== 0) {\n      // Create one of several smaller patches.\n      var patch = new diff_match_patch.patch_obj();\n      var empty = true;\n      patch.start1 = start1 - precontext.length;\n      patch.start2 = start2 - precontext.length;\n      if (precontext !== '') {\n        patch.length1 = patch.length2 = precontext.length;\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, precontext));\n      }\n      while (bigpatch.diffs.length !== 0 &&\n             patch.length1 < patch_size - this.Patch_Margin) {\n        var diff_type = bigpatch.diffs[0][0];\n        var diff_text = bigpatch.diffs[0][1];\n        if (diff_type === DIFF_INSERT) {\n          // Insertions are harmless.\n          patch.length2 += diff_text.length;\n          start2 += diff_text.length;\n          patch.diffs.push(bigpatch.diffs.shift());\n          empty = false;\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\n                   patch.diffs[0][0] == DIFF_EQUAL &&\n                   diff_text.length > 2 * patch_size) {\n          // This is a large deletion.  Let it pass in one chunk.\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          empty = false;\n          patch.diffs.push(new diff_match_patch.Diff(diff_type, diff_text));\n          bigpatch.diffs.shift();\n        } else {\n          // Deletion or equality.  Only take as much as we can stomach.\n          diff_text = diff_text.substring(0,\n              patch_size - patch.length1 - this.Patch_Margin);\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          if (diff_type === DIFF_EQUAL) {\n            patch.length2 += diff_text.length;\n            start2 += diff_text.length;\n          } else {\n            empty = false;\n          }\n          patch.diffs.push(new diff_match_patch.Diff(diff_type, diff_text));\n          if (diff_text == bigpatch.diffs[0][1]) {\n            bigpatch.diffs.shift();\n          } else {\n            bigpatch.diffs[0][1] =\n                bigpatch.diffs[0][1].substring(diff_text.length);\n          }\n        }\n      }\n      // Compute the head context for the next patch.\n      precontext = this.diff_text2(patch.diffs);\n      precontext =\n          precontext.substring(precontext.length - this.Patch_Margin);\n      // Append the end context for this patch.\n      var postcontext = this.diff_text1(bigpatch.diffs)\n                            .substring(0, this.Patch_Margin);\n      if (postcontext !== '') {\n        patch.length1 += postcontext.length;\n        patch.length2 += postcontext.length;\n        if (patch.diffs.length !== 0 &&\n            patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\n        } else {\n          patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, postcontext));\n        }\n      }\n      if (!empty) {\n        patches.splice(++x, 0, patch);\n      }\n    }\n  }\n};\n\n\n/**\n * Take a list of patches and return a textual representation.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} Text representation of patches.\n */\ndiff_match_patch.prototype.patch_toText = function(patches) {\n  var text = [];\n  for (var x = 0; x < patches.length; x++) {\n    text[x] = patches[x];\n  }\n  return text.join('');\n};\n\n\n/**\n * Parse a textual representation of patches and return a list of Patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.patch_fromText = function(textline) {\n  var patches = [];\n  if (!textline) {\n    return patches;\n  }\n  var text = textline.split('\\n');\n  var textPointer = 0;\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n  while (textPointer < text.length) {\n    var m = text[textPointer].match(patchHeader);\n    if (!m) {\n      throw new Error('Invalid patch string: ' + text[textPointer]);\n    }\n    var patch = new diff_match_patch.patch_obj();\n    patches.push(patch);\n    patch.start1 = parseInt(m[1], 10);\n    if (m[2] === '') {\n      patch.start1--;\n      patch.length1 = 1;\n    } else if (m[2] == '0') {\n      patch.length1 = 0;\n    } else {\n      patch.start1--;\n      patch.length1 = parseInt(m[2], 10);\n    }\n\n    patch.start2 = parseInt(m[3], 10);\n    if (m[4] === '') {\n      patch.start2--;\n      patch.length2 = 1;\n    } else if (m[4] == '0') {\n      patch.length2 = 0;\n    } else {\n      patch.start2--;\n      patch.length2 = parseInt(m[4], 10);\n    }\n    textPointer++;\n\n    while (textPointer < text.length) {\n      var sign = text[textPointer].charAt(0);\n      try {\n        var line = decodeURI(text[textPointer].substring(1));\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error('Illegal escape in patch_fromText: ' + line);\n      }\n      if (sign == '-') {\n        // Deletion.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_DELETE, line));\n      } else if (sign == '+') {\n        // Insertion.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_INSERT, line));\n      } else if (sign == ' ') {\n        // Minor equality.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, line));\n      } else if (sign == '@') {\n        // Start of next patch.\n        break;\n      } else if (sign === '') {\n        // Blank line?  Whatever.\n      } else {\n        // WTF?\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n      }\n      textPointer++;\n    }\n  }\n  return patches;\n};\n\n\n/**\n * Class representing one patch operation.\n * @constructor\n */\ndiff_match_patch.patch_obj = function() {\n  /** @type {!Array.<!diff_match_patch.Diff>} */\n  this.diffs = [];\n  /** @type {?number} */\n  this.start1 = null;\n  /** @type {?number} */\n  this.start2 = null;\n  /** @type {number} */\n  this.length1 = 0;\n  /** @type {number} */\n  this.length2 = 0;\n};\n\n\n/**\n * Emulate GNU diff's format.\n * Header: @@ -382,8 +481,9 @@\n * Indices are printed as 1-based, not 0-based.\n * @return {string} The GNU diff string.\n */\ndiff_match_patch.patch_obj.prototype.toString = function() {\n  var coords1, coords2;\n  if (this.length1 === 0) {\n    coords1 = this.start1 + ',0';\n  } else if (this.length1 == 1) {\n    coords1 = this.start1 + 1;\n  } else {\n    coords1 = (this.start1 + 1) + ',' + this.length1;\n  }\n  if (this.length2 === 0) {\n    coords2 = this.start2 + ',0';\n  } else if (this.length2 == 1) {\n    coords2 = this.start2 + 1;\n  } else {\n    coords2 = (this.start2 + 1) + ',' + this.length2;\n  }\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n  var op;\n  // Escape the body of the patch with %xx notation.\n  for (var x = 0; x < this.diffs.length; x++) {\n    switch (this.diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+';\n        break;\n      case DIFF_DELETE:\n        op = '-';\n        break;\n      case DIFF_EQUAL:\n        op = ' ';\n        break;\n    }\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n  }\n  return text.join('').replace(/%20/g, ' ');\n};\n\n\n// The following export code was added by @ForbesLindesay\nmodule.exports = diff_match_patch;\nmodule.exports['diff_match_patch'] = diff_match_patch;\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","import { Ace, Range } from \"ace-builds\";\nimport * as AceBuilds from \"ace-builds\";\nimport * as PropTypes from \"prop-types\";\nimport * as React from \"react\";\nconst isEqual = require(\"lodash.isequal\");\nimport {\n  debounce,\n  editorEvents,\n  editorOptions,\n  getAceInstance\n} from \"./editorOptions\";\nconst ace = getAceInstance();\n\nimport {\n  IAceEditor,\n  IAceOptions,\n  ICommand,\n  IEditorProps,\n  IMarker\n} from \"./types\";\n/**\n * See https://github.com/ajaxorg/ace/wiki/Configuring-Ace\n */\n\nexport interface IAceEditorProps {\n  name?: string;\n  style?: React.CSSProperties;\n  /** For available modes see https://github.com/thlorenz/brace/tree/master/mode */\n  mode?: string | object;\n  /** For available themes see https://github.com/thlorenz/brace/tree/master/theme */\n  theme?: string;\n  height?: string;\n  width?: string;\n  className?: string;\n  fontSize?: number | string;\n  lineHeight?: number | string;\n  showGutter?: boolean;\n  showPrintMargin?: boolean;\n  highlightActiveLine?: boolean;\n  focus?: boolean;\n  cursorStart?: number;\n  wrapEnabled?: boolean;\n  readOnly?: boolean;\n  minLines?: number;\n  maxLines?: number;\n  navigateToFileEnd?: boolean;\n  debounceChangePeriod?: number;\n  enableBasicAutocompletion?: boolean | string[];\n  enableLiveAutocompletion?: boolean | string[];\n  tabSize?: number;\n  value?: string;\n  placeholder?: string;\n  defaultValue?: string;\n  scrollMargin?: number[];\n  enableSnippets?: boolean;\n  onSelectionChange?: (value: any, event?: any) => void;\n  onCursorChange?: (value: any, event?: any) => void;\n  onInput?: (event?: any) => void;\n  onLoad?: (editor: Ace.Editor) => void;\n  onValidate?: (annotations: Ace.Annotation[]) => void;\n  onBeforeLoad?: (ace: typeof AceBuilds) => void;\n  onChange?: (value: string, event?: any) => void;\n  onSelection?: (selectedText: string, event?: any) => void;\n  onCopy?: (value: string) => void;\n  onPaste?: (value: string) => void;\n  onFocus?: (event: any, editor?: Ace.Editor) => void;\n  onBlur?: (event: any, editor?: Ace.Editor) => void;\n  onScroll?: (editor: IEditorProps) => void;\n  editorProps?: IEditorProps;\n  setOptions?: IAceOptions;\n  keyboardHandler?: string;\n  commands?: ICommand[];\n  annotations?: Ace.Annotation[];\n  markers?: IMarker[];\n}\n\nexport default class ReactAce extends React.Component<IAceEditorProps> {\n  public static propTypes: PropTypes.ValidationMap<IAceEditorProps> = {\n    mode: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    focus: PropTypes.bool,\n    theme: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    height: PropTypes.string,\n    width: PropTypes.string,\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    lineHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    showGutter: PropTypes.bool,\n    onChange: PropTypes.func,\n    onCopy: PropTypes.func,\n    onPaste: PropTypes.func,\n    onFocus: PropTypes.func,\n    onInput: PropTypes.func,\n    onBlur: PropTypes.func,\n    onScroll: PropTypes.func,\n    value: PropTypes.string,\n    defaultValue: PropTypes.string,\n    onLoad: PropTypes.func,\n    onSelectionChange: PropTypes.func,\n    onCursorChange: PropTypes.func,\n    onBeforeLoad: PropTypes.func,\n    onValidate: PropTypes.func,\n    minLines: PropTypes.number,\n    maxLines: PropTypes.number,\n    readOnly: PropTypes.bool,\n    highlightActiveLine: PropTypes.bool,\n    tabSize: PropTypes.number,\n    showPrintMargin: PropTypes.bool,\n    cursorStart: PropTypes.number,\n    debounceChangePeriod: PropTypes.number,\n    editorProps: PropTypes.object,\n    setOptions: PropTypes.object,\n    style: PropTypes.object,\n    scrollMargin: PropTypes.array,\n    annotations: PropTypes.array,\n    markers: PropTypes.array,\n    keyboardHandler: PropTypes.string,\n    wrapEnabled: PropTypes.bool,\n    enableSnippets: PropTypes.bool,\n    enableBasicAutocompletion: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.array\n    ]),\n    enableLiveAutocompletion: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.array\n    ]),\n    navigateToFileEnd: PropTypes.bool,\n    commands: PropTypes.array,\n    placeholder: PropTypes.string\n  };\n  public static defaultProps: Partial<IAceEditorProps> = {\n    name: \"ace-editor\",\n    focus: false,\n    mode: \"\",\n    theme: \"\",\n    height: \"500px\",\n    width: \"500px\",\n    fontSize: 12,\n    enableSnippets: false,\n    showGutter: true,\n    onChange: null,\n    onPaste: null,\n    onLoad: null,\n    onScroll: null,\n    minLines: null,\n    maxLines: null,\n    readOnly: false,\n    highlightActiveLine: true,\n    showPrintMargin: true,\n    tabSize: 4,\n    cursorStart: 1,\n    editorProps: {},\n    style: {},\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    wrapEnabled: false,\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false,\n    placeholder: null,\n    navigateToFileEnd: true\n  };\n  public editor: IAceEditor;\n  public refEditor: HTMLElement;\n  public debounce: (fn: any, delay: number) => (...args: any) => void;\n  // [index: string]: any;\n  public silent: boolean;\n  constructor(props: IAceEditorProps) {\n    super(props);\n    editorEvents.forEach(method => {\n      this[method] = this[method].bind(this);\n    });\n    this.debounce = debounce;\n  }\n  public isInShadow(node: HTMLElement): boolean {\n    let parent = node && node.parentNode;\n    while (parent) {\n      if (parent.toString() === \"[object ShadowRoot]\") {\n        return true;\n      }\n      parent = parent.parentNode;\n    }\n    return false;\n  }\n  public componentDidMount() {\n    const {\n      className,\n      onBeforeLoad,\n      onValidate,\n      mode,\n      focus,\n      theme,\n      fontSize,\n      lineHeight,\n      value,\n      defaultValue,\n      showGutter,\n      wrapEnabled,\n      showPrintMargin,\n      scrollMargin = [0, 0, 0, 0],\n      keyboardHandler,\n      onLoad,\n      commands,\n      annotations,\n      markers,\n      placeholder\n    } = this.props;\n\n    this.editor = ace.edit(this.refEditor) as IAceEditor;\n\n    if (onBeforeLoad) {\n      onBeforeLoad(ace);\n    }\n\n    const editorProps = Object.keys(this.props.editorProps);\n    for (let i = 0; i < editorProps.length; i++) {\n      this.editor[editorProps[i]] = this.props.editorProps[editorProps[i]];\n    }\n    if (this.props.debounceChangePeriod) {\n      this.onChange = this.debounce(\n        this.onChange,\n        this.props.debounceChangePeriod\n      );\n    }\n    this.editor.renderer.setScrollMargin(\n      scrollMargin[0],\n      scrollMargin[1],\n      scrollMargin[2],\n      scrollMargin[3]\n    );\n    if (this.isInShadow(this.refEditor)) {\n      this.editor.renderer.attachToShadowRoot();\n    }\n    this.editor\n      .getSession()\n      .setMode(\n        typeof mode === \"string\" ? `ace/mode/${mode}` : (mode as Ace.SyntaxMode)\n      );\n    if (theme && theme !== \"\") this.editor.setTheme(`ace/theme/${theme}`);\n    this.editor.setFontSize(\n      typeof fontSize === \"number\" ? `${fontSize}px` : fontSize\n    );\n    if (lineHeight) {\n      this.editor.container.style.lineHeight =\n        typeof lineHeight === \"number\" ? `${lineHeight}px` : `${lineHeight}`;\n      this.editor.renderer.updateFontSize();\n    }\n    this.editor\n      .getSession()\n      .setValue(!defaultValue ? value || \"\" : defaultValue);\n\n    if (this.props.navigateToFileEnd) {\n      this.editor.navigateFileEnd();\n    }\n    this.editor.renderer.setShowGutter(showGutter);\n    this.editor.getSession().setUseWrapMode(wrapEnabled);\n    this.editor.setShowPrintMargin(showPrintMargin);\n    this.editor.on(\"focus\", this.onFocus);\n    this.editor.on(\"blur\", this.onBlur);\n    this.editor.on(\"copy\", this.onCopy);\n    this.editor.on(\"paste\", this.onPaste);\n    this.editor.on(\"change\", this.onChange);\n    this.editor.on(\"input\", this.onInput);\n    if (placeholder) {\n      this.updatePlaceholder();\n    }\n    this.editor\n      .getSession()\n      .selection.on(\"changeSelection\", this.onSelectionChange);\n    this.editor.getSession().selection.on(\"changeCursor\", this.onCursorChange);\n    if (onValidate) {\n      // @ts-ignore types don't include\n      this.editor.getSession().on(\"changeAnnotation\", () => {\n        // tslint:disable-next-line:no-shadowed-variable\n        const annotations = this.editor.getSession().getAnnotations();\n        this.props.onValidate(annotations);\n      });\n    }\n    this.editor.session.on(\"changeScrollTop\", this.onScroll);\n    this.editor.getSession().setAnnotations(annotations || []);\n    if (markers && markers.length > 0) {\n      this.handleMarkers(markers);\n    }\n\n    // get a list of possible options to avoid 'misspelled option errors'\n    const availableOptions = this.editor.$options;\n    editorOptions.forEach(option => {\n      if (availableOptions.hasOwnProperty(option)) {\n        // @ts-ignore\n        this.editor.setOption(option, this.props[option]);\n      } else if (this.props[option]) {\n        console.warn(\n          `ReactAce: editor option ${option} was activated but not found. Did you need to import a related tool or did you possibly mispell the option?`\n        );\n      }\n    });\n\n    this.handleOptions(this.props);\n\n    if (Array.isArray(commands)) {\n      commands.forEach(command => {\n        if (typeof command.exec === \"string\") {\n          (this.editor.commands as any).bindKey(command.bindKey, command.exec);\n        } else {\n          (this.editor.commands as any).addCommand(command);\n        }\n      });\n    }\n\n    if (keyboardHandler) {\n      this.editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n    }\n\n    if (className) {\n      this.refEditor.className += \" \" + className;\n    }\n\n    if (onLoad) {\n      onLoad(this.editor);\n    }\n\n    this.editor.resize();\n\n    if (focus) {\n      this.editor.focus();\n    }\n  }\n\n  public componentDidUpdate(prevProps: IAceEditorProps) {\n    const oldProps = prevProps;\n    const nextProps = this.props;\n\n    for (let i = 0; i < editorOptions.length; i++) {\n      const option = editorOptions[i];\n      if (nextProps[option] !== oldProps[option]) {\n        // @ts-ignore\n        this.editor.setOption(option, nextProps[option]);\n      }\n    }\n\n    if (nextProps.className !== oldProps.className) {\n      const appliedClasses = this.refEditor.className;\n      const appliedClassesArray = appliedClasses.trim().split(\" \");\n      const oldClassesArray = oldProps.className.trim().split(\" \");\n      oldClassesArray.forEach(oldClass => {\n        const index = appliedClassesArray.indexOf(oldClass);\n        appliedClassesArray.splice(index, 1);\n      });\n      this.refEditor.className =\n        \" \" + nextProps.className + \" \" + appliedClassesArray.join(\" \");\n    }\n\n    // First process editor value, as it may create a new session (see issue #300)\n    const valueChanged =\n      this.editor &&\n      nextProps.value != null &&\n      this.editor.getValue() !== nextProps.value;\n\n    if (valueChanged) {\n      // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n      this.silent = true;\n      const pos = this.editor.session.selection.toJSON();\n      this.editor.setValue(nextProps.value, nextProps.cursorStart);\n      this.editor.session.selection.fromJSON(pos);\n      this.silent = false;\n    }\n\n    if (nextProps.placeholder !== oldProps.placeholder) {\n      this.updatePlaceholder();\n    }\n    if (nextProps.mode !== oldProps.mode) {\n      this.editor\n        .getSession()\n        .setMode(\n          typeof nextProps.mode === \"string\"\n            ? `ace/mode/${nextProps.mode}`\n            : (nextProps.mode as Ace.SyntaxMode)\n        );\n    }\n    if (nextProps.theme !== oldProps.theme) {\n      this.editor.setTheme(\"ace/theme/\" + nextProps.theme);\n    }\n    if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n      if (nextProps.keyboardHandler) {\n        this.editor.setKeyboardHandler(\n          \"ace/keyboard/\" + nextProps.keyboardHandler\n        );\n      } else {\n        this.editor.setKeyboardHandler(null);\n      }\n    }\n    if (nextProps.fontSize !== oldProps.fontSize) {\n      this.editor.setFontSize(\n        typeof nextProps.fontSize === \"number\"\n          ? `${nextProps.fontSize}px`\n          : nextProps.fontSize\n      );\n    }\n    if (nextProps.lineHeight !== oldProps.lineHeight) {\n      this.editor.container.style.lineHeight =\n        typeof nextProps.lineHeight === \"number\"\n          ? `${nextProps.lineHeight}px`\n          : nextProps.lineHeight;\n      this.editor.renderer.updateFontSize();\n    }\n    if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n      this.editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n    }\n    if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n      this.editor.setShowPrintMargin(nextProps.showPrintMargin);\n    }\n    if (nextProps.showGutter !== oldProps.showGutter) {\n      this.editor.renderer.setShowGutter(nextProps.showGutter);\n    }\n    if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n      this.handleOptions(nextProps);\n    }\n    // if the value or annotations changed, set the annotations\n    // changing the value may create create a new session which will require annotations to be re-set\n    if (valueChanged || !isEqual(nextProps.annotations, oldProps.annotations)) {\n      this.editor.getSession().setAnnotations(nextProps.annotations || []);\n    }\n    if (\n      !isEqual(nextProps.markers, oldProps.markers) &&\n      Array.isArray(nextProps.markers)\n    ) {\n      this.handleMarkers(nextProps.markers);\n    }\n\n    // this doesn't look like it works at all....\n    if (!isEqual(nextProps.scrollMargin, oldProps.scrollMargin)) {\n      this.handleScrollMargins(nextProps.scrollMargin);\n    }\n\n    if (\n      prevProps.height !== this.props.height ||\n      prevProps.width !== this.props.width\n    ) {\n      this.editor.resize();\n    }\n    if (this.props.focus && !prevProps.focus) {\n      this.editor.focus();\n    }\n  }\n\n  public handleScrollMargins(margins = [0, 0, 0, 0]) {\n    this.editor.renderer.setScrollMargin(\n      margins[0],\n      margins[1],\n      margins[2],\n      margins[3]\n    );\n  }\n\n  public componentWillUnmount() {\n    if (this.editor) {\n      this.editor.destroy();\n      this.editor = null;\n    }\n  }\n\n  public onChange(event: any) {\n    if (this.props.onChange && !this.silent) {\n      const value = this.editor.getValue();\n      this.props.onChange(value, event);\n    }\n  }\n\n  public onSelectionChange(event: any) {\n    if (this.props.onSelectionChange) {\n      const value = this.editor.getSelection();\n      this.props.onSelectionChange(value, event);\n    }\n  }\n  public onCursorChange(event: any) {\n    if (this.props.onCursorChange) {\n      const value = this.editor.getSelection();\n      this.props.onCursorChange(value, event);\n    }\n  }\n  public onInput(event?: any) {\n    if (this.props.onInput) {\n      this.props.onInput(event);\n    }\n    if (this.props.placeholder) {\n      this.updatePlaceholder();\n    }\n  }\n  public onFocus(event: any) {\n    if (this.props.onFocus) {\n      this.props.onFocus(event, this.editor);\n    }\n  }\n\n  public onBlur(event: any) {\n    if (this.props.onBlur) {\n      this.props.onBlur(event, this.editor);\n    }\n  }\n\n  public onCopy({ text }: { text: string }) {\n    if (this.props.onCopy) {\n      this.props.onCopy(text);\n    }\n  }\n\n  public onPaste({ text }: { text: string }) {\n    if (this.props.onPaste) {\n      this.props.onPaste(text);\n    }\n  }\n\n  public onScroll() {\n    if (this.props.onScroll) {\n      this.props.onScroll(this.editor);\n    }\n  }\n\n  public handleOptions(props: IAceEditorProps) {\n    const setOptions = Object.keys(props.setOptions);\n    for (let y = 0; y < setOptions.length; y++) {\n      // @ts-ignore\n      this.editor.setOption(setOptions[y], props.setOptions[setOptions[y]]);\n    }\n  }\n\n  public handleMarkers(markers: IMarker[]) {\n    // remove foreground markers\n    let currentMarkers = this.editor.getSession().getMarkers(true);\n    for (const i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        this.editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // remove background markers except active line marker and selected word marker\n    currentMarkers = this.editor.getSession().getMarkers(false);\n    for (const i in currentMarkers) {\n      if (\n        currentMarkers.hasOwnProperty(i) &&\n        currentMarkers[i].clazz !== \"ace_active-line\" &&\n        currentMarkers[i].clazz !== \"ace_selected-word\"\n      ) {\n        this.editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // add new markers\n    markers.forEach(\n      ({\n        startRow,\n        startCol,\n        endRow,\n        endCol,\n        className,\n        type,\n        inFront = false\n      }) => {\n        const range = new Range(startRow, startCol, endRow, endCol);\n        this.editor.getSession().addMarker(range, className, type, inFront);\n      }\n    );\n  }\n\n  public updatePlaceholder() {\n    // Adapted from https://stackoverflow.com/questions/26695708/how-can-i-add-placeholder-text-when-the-editor-is-empty\n\n    const editor = this.editor;\n    const { placeholder } = this.props;\n\n    const showPlaceholder = !editor.session.getValue().length;\n    let node = editor.renderer.placeholderNode;\n\n    if (!showPlaceholder && node) {\n      editor.renderer.scroller.removeChild(editor.renderer.placeholderNode);\n      editor.renderer.placeholderNode = null;\n    } else if (showPlaceholder && !node) {\n      node = editor.renderer.placeholderNode = document.createElement(\"div\");\n      node.textContent = placeholder || \"\";\n      node.className = \"ace_comment ace_placeholder\";\n      node.style.padding = \"0 9px\";\n      node.style.position = \"absolute\";\n      node.style.zIndex = \"3\";\n      editor.renderer.scroller.appendChild(node);\n    } else if (showPlaceholder && node) {\n      node.textContent = placeholder;\n    }\n  }\n\n  public updateRef(item: HTMLElement) {\n    this.refEditor = item;\n  }\n\n  public render() {\n    const { name, width, height, style } = this.props;\n    const divStyle = { width, height, ...style };\n    return <div ref={this.updateRef} id={name} style={divStyle} />;\n  }\n}\n","import * as PropTypes from \"prop-types\";\nimport * as React from \"react\";\nimport SplitEditor from \"./split\";\nconst DiffMatchPatch = require(\"diff-match-patch\");\nimport { IEditorProps } from \"./types\";\n\nexport interface IDiffEditorProps {\n  cursorStart?: number;\n  editorProps?: object;\n  enableBasicAutocompletion?: boolean | string[];\n  enableLiveAutocompletion?: boolean | string[];\n  focus?: boolean;\n  fontSize?: number;\n  height?: string;\n  highlightActiveLine?: boolean;\n  maxLines?: number;\n  minLines?: number;\n  mode?: string;\n  name?: string;\n  className?: string;\n  onLoad?: (editor: IEditorProps) => void;\n  onChange?: (value: string[], event?: any) => void;\n  onPaste?: (value: string) => void;\n  onScroll?: (editor: IEditorProps) => void;\n  orientation?: string;\n  readOnly?: boolean;\n  scrollMargin?: number[];\n  setOptions?: object;\n  showGutter?: boolean;\n  showPrintMargin?: boolean;\n  splits?: number;\n  style?: object;\n  tabSize?: number;\n  theme?: string;\n  value?: string[];\n  width?: string;\n  wrapEnabled?: boolean;\n}\n\nexport interface IDiffEditorState {\n  value: string[];\n}\n\nexport default class DiffComponent extends React.Component<\n  IDiffEditorProps,\n  IDiffEditorState\n> {\n  public static propTypes: PropTypes.ValidationMap<IDiffEditorProps> = {\n    cursorStart: PropTypes.number,\n    editorProps: PropTypes.object,\n    enableBasicAutocompletion: PropTypes.bool,\n    enableLiveAutocompletion: PropTypes.bool,\n    focus: PropTypes.bool,\n    fontSize: PropTypes.number,\n    height: PropTypes.string,\n    highlightActiveLine: PropTypes.bool,\n    maxLines: PropTypes.number,\n    minLines: PropTypes.number,\n    mode: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    onLoad: PropTypes.func,\n    onPaste: PropTypes.func,\n    onScroll: PropTypes.func,\n    onChange: PropTypes.func,\n    orientation: PropTypes.string,\n    readOnly: PropTypes.bool,\n    scrollMargin: PropTypes.array,\n    setOptions: PropTypes.object,\n    showGutter: PropTypes.bool,\n    showPrintMargin: PropTypes.bool,\n    splits: PropTypes.number,\n    style: PropTypes.object,\n    tabSize: PropTypes.number,\n    theme: PropTypes.string,\n    value: PropTypes.array,\n    width: PropTypes.string,\n    wrapEnabled: PropTypes.bool\n  };\n\n  public static defaultProps: Partial<IDiffEditorProps> = {\n    cursorStart: 1,\n    editorProps: {},\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false,\n    focus: false,\n    fontSize: 12,\n    height: \"500px\",\n    highlightActiveLine: true,\n    maxLines: null,\n    minLines: null,\n    mode: \"\",\n    name: \"ace-editor\",\n    onLoad: null,\n    onScroll: null,\n    onPaste: null,\n    onChange: null,\n    orientation: \"beside\",\n    readOnly: false,\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    showGutter: true,\n    showPrintMargin: true,\n    splits: 2,\n    style: {},\n    tabSize: 4,\n    theme: \"github\",\n    value: [\"\", \"\"],\n    width: \"500px\",\n    wrapEnabled: true\n  };\n  constructor(props: IDiffEditorProps) {\n    super(props);\n    this.state = {\n      value: this.props.value\n    };\n    this.onChange = this.onChange.bind(this);\n    this.diff = this.diff.bind(this);\n  }\n\n  public componentDidUpdate() {\n    const { value } = this.props;\n\n    if (value !== this.state.value) {\n      this.setState({ value });\n    }\n  }\n\n  public onChange(value: any) {\n    this.setState({\n      value\n    });\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  }\n\n  public diff() {\n    const dmp = new DiffMatchPatch();\n    const lhString = this.state.value[0];\n    const rhString = this.state.value[1];\n\n    if (lhString.length === 0 && rhString.length === 0) {\n      return [];\n    }\n\n    const diff = dmp.diff_main(lhString, rhString);\n    dmp.diff_cleanupSemantic(diff);\n\n    const diffedLines = this.generateDiffedLines(diff);\n    const codeEditorSettings = this.setCodeMarkers(diffedLines);\n    return codeEditorSettings;\n  }\n\n  public generateDiffedLines(diff: any) {\n    const C = {\n      DIFF_EQUAL: 0,\n      DIFF_DELETE: -1,\n      DIFF_INSERT: 1\n    };\n\n    const diffedLines = {\n      left: [] as any[],\n      right: [] as any[]\n    };\n\n    const cursor = {\n      left: 1,\n      right: 1\n    };\n\n    diff.forEach((chunk: any) => {\n      const chunkType = chunk[0];\n      const text = chunk[1];\n      let lines = text.split(\"\\n\").length - 1;\n\n      // diff-match-patch sometimes returns empty strings at random\n      if (text.length === 0) {\n        return;\n      }\n\n      const firstChar = text[0];\n      const lastChar = text[text.length - 1];\n      let linesToHighlight = 0;\n\n      switch (chunkType) {\n        case C.DIFF_EQUAL:\n          cursor.left += lines;\n          cursor.right += lines;\n\n          break;\n        case C.DIFF_DELETE:\n          // If the deletion starts with a newline, push the cursor down to that line\n          if (firstChar === \"\\n\") {\n            cursor.left++;\n            lines--;\n          }\n\n          linesToHighlight = lines;\n\n          // If the deletion does not include a newline, highlight the same line on the right\n          if (linesToHighlight === 0) {\n            diffedLines.right.push({\n              startLine: cursor.right,\n              endLine: cursor.right\n            });\n          }\n\n          // If the last character is a newline, we don't want to highlight that line\n          if (lastChar === \"\\n\") {\n            linesToHighlight -= 1;\n          }\n\n          diffedLines.left.push({\n            startLine: cursor.left,\n            endLine: cursor.left + linesToHighlight\n          });\n\n          cursor.left += lines;\n          break;\n        case C.DIFF_INSERT:\n          // If the insertion starts with a newline, push the cursor down to that line\n          if (firstChar === \"\\n\") {\n            cursor.right++;\n            lines--;\n          }\n\n          linesToHighlight = lines;\n\n          // If the insertion does not include a newline, highlight the same line on the left\n          if (linesToHighlight === 0) {\n            diffedLines.left.push({\n              startLine: cursor.left,\n              endLine: cursor.left\n            });\n          }\n\n          // If the last character is a newline, we don't want to highlight that line\n          if (lastChar === \"\\n\") {\n            linesToHighlight -= 1;\n          }\n\n          diffedLines.right.push({\n            startLine: cursor.right,\n            endLine: cursor.right + linesToHighlight\n          });\n\n          cursor.right += lines;\n          break;\n        default:\n          throw new Error(\"Diff type was not defined.\");\n      }\n    });\n    return diffedLines;\n  }\n\n  // Receives a collection of line numbers and iterates through them to highlight appropriately\n  // Returns an object that tells the render() method how to display the code editors\n  public setCodeMarkers(diffedLines: any = { left: [], right: [] }) {\n    const codeEditorSettings = [];\n\n    const newMarkerSet = {\n      left: [] as any[],\n      right: [] as any[]\n    };\n\n    for (let i = 0; i < diffedLines.left.length; i++) {\n      const markerObj = {\n        startRow: diffedLines.left[i].startLine - 1,\n        endRow: diffedLines.left[i].endLine,\n        type: \"text\",\n        className: \"codeMarker\"\n      };\n      newMarkerSet.left.push(markerObj);\n    }\n\n    for (let i = 0; i < diffedLines.right.length; i++) {\n      const markerObj = {\n        startRow: diffedLines.right[i].startLine - 1,\n        endRow: diffedLines.right[i].endLine,\n        type: \"text\",\n        className: \"codeMarker\"\n      };\n      newMarkerSet.right.push(markerObj);\n    }\n\n    codeEditorSettings[0] = newMarkerSet.left;\n    codeEditorSettings[1] = newMarkerSet.right;\n\n    return codeEditorSettings;\n  }\n\n  public render() {\n    const markers = this.diff();\n    return (\n      <SplitEditor\n        name={this.props.name}\n        className={this.props.className}\n        focus={this.props.focus}\n        orientation={this.props.orientation}\n        splits={this.props.splits}\n        mode={this.props.mode}\n        theme={this.props.theme}\n        height={this.props.height}\n        width={this.props.width}\n        fontSize={this.props.fontSize}\n        showGutter={this.props.showGutter}\n        onChange={this.onChange}\n        onPaste={this.props.onPaste}\n        onLoad={this.props.onLoad}\n        onScroll={this.props.onScroll}\n        minLines={this.props.minLines}\n        maxLines={this.props.maxLines}\n        readOnly={this.props.readOnly}\n        highlightActiveLine={this.props.highlightActiveLine}\n        showPrintMargin={this.props.showPrintMargin}\n        tabSize={this.props.tabSize}\n        cursorStart={this.props.cursorStart}\n        editorProps={this.props.editorProps}\n        style={this.props.style}\n        scrollMargin={this.props.scrollMargin}\n        setOptions={this.props.setOptions}\n        wrapEnabled={this.props.wrapEnabled}\n        enableBasicAutocompletion={this.props.enableBasicAutocompletion}\n        enableLiveAutocompletion={this.props.enableLiveAutocompletion}\n        value={this.state.value}\n        markers={markers}\n      />\n    );\n  }\n}\n","import * as AceBuilds from \"ace-builds\";\n\ntype EditorOption =\n  | \"minLines\"\n  | \"maxLines\"\n  | \"readOnly\"\n  | \"highlightActiveLine\"\n  | \"tabSize\"\n  | \"enableBasicAutocompletion\"\n  | \"enableLiveAutocompletion\"\n  | \"enableSnippets\";\n\nconst editorOptions: EditorOption[] = [\n  \"minLines\",\n  \"maxLines\",\n  \"readOnly\",\n  \"highlightActiveLine\",\n  \"tabSize\",\n  \"enableBasicAutocompletion\",\n  \"enableLiveAutocompletion\",\n  \"enableSnippets\"\n];\n\ntype EditorEvent =\n  | \"onChange\"\n  | \"onFocus\"\n  | \"onInput\"\n  | \"onBlur\"\n  | \"onCopy\"\n  | \"onPaste\"\n  | \"onSelectionChange\"\n  | \"onCursorChange\"\n  | \"onScroll\"\n  | \"handleOptions\"\n  | \"updateRef\";\n\nconst editorEvents: EditorEvent[] = [\n  \"onChange\",\n  \"onFocus\",\n  \"onInput\",\n  \"onBlur\",\n  \"onCopy\",\n  \"onPaste\",\n  \"onSelectionChange\",\n  \"onCursorChange\",\n  \"onScroll\",\n  \"handleOptions\",\n  \"updateRef\"\n];\n\n// Typescript globals definition to allow us to create a window object during SSR.\ndeclare global {\n  namespace NodeJS {\n    // tslint:disable-next-line\n    interface Global {\n      window: any;\n    }\n  }\n}\nconst getAceInstance = (): typeof AceBuilds => {\n  let ace;\n  if (typeof window === \"undefined\") {\n    // ace-builds just needs some window object to attach ace to.\n    // During SSR even just an empty object will work.\n    global.window = {} as any;\n    ace = require(\"ace-builds\");\n    // And it can be discarded immediately afterward to avoid confusing\n    // other libraries that might detect SSR the same way we did.\n    delete global.window;\n  } else if ((window as any).ace) {\n    // Fallback for ace.require when vanilla ACE is hosted over a CDN\n    ace = (window as any).ace;\n    ace.acequire = (window as any).ace.require || (window as any).ace.acequire;\n  } else {\n    ace = require(\"ace-builds\");\n  }\n  return ace;\n};\n\nconst debounce = (fn: (...args: any[]) => void, delay: number) => {\n  let timer: any = null;\n  // tslint:disable-next-line\n  return function () {\n    const context = this;\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      fn.apply(context, args);\n    }, delay);\n  };\n};\nexport { editorOptions, editorEvents, debounce, getAceInstance };\n","import ace, { IAceEditorProps } from \"./ace\";\nimport diff, { IDiffEditorProps, IDiffEditorState } from \"./diff\";\nimport split, { ISplitEditorProps } from \"./split\";\nimport {\n  IAceOptions,\n  IAnnotation,\n  ICommand,\n  ICommandBindKey,\n  ICommandManager,\n  IEditorProps,\n  IMarker\n} from \"./types\";\nexport {\n  split,\n  diff,\n  IAceOptions,\n  IAceEditorProps,\n  IAnnotation,\n  ICommand,\n  ICommandBindKey,\n  ICommandManager,\n  IDiffEditorProps,\n  IDiffEditorState,\n  IEditorProps,\n  IMarker,\n  ISplitEditorProps\n};\nexport default ace;\n","import {\n  debounce,\n  editorEvents,\n  editorOptions,\n  getAceInstance\n} from \"./editorOptions\";\nconst ace = getAceInstance();\nimport { Ace, Range } from \"ace-builds\";\nimport { Split } from \"ace-builds/src-noconflict/ext-split\";\nimport * as PropTypes from \"prop-types\";\nimport * as React from \"react\";\nconst isEqual = require(\"lodash.isequal\");\nconst get = require(\"lodash.get\");\nimport {\n  IAceEditor,\n  IAceOptions,\n  IAnnotation,\n  ICommand,\n  IEditorProps,\n  IMarker\n} from \"./types\";\n\ninterface IAceEditorClass extends IAceEditor {\n  [index: string]: any;\n  $options?: any;\n}\n\nexport interface ISplitEditorProps {\n  [index: string]: any;\n  name?: string;\n  style?: object;\n  /** For available modes see https://github.com/thlorenz/brace/tree/master/mode */\n  mode?: string;\n  /** For available themes see https://github.com/thlorenz/brace/tree/master/theme */\n  theme?: string;\n  height?: string;\n  width?: string;\n  className?: string;\n  fontSize?: number | string;\n  showGutter?: boolean;\n  showPrintMargin?: boolean;\n  highlightActiveLine?: boolean;\n  focus?: boolean;\n  splits: number;\n  debounceChangePeriod?: number;\n  cursorStart?: number;\n  wrapEnabled?: boolean;\n  readOnly?: boolean;\n  minLines?: number;\n  maxLines?: number;\n  enableBasicAutocompletion?: boolean | string[];\n  enableLiveAutocompletion?: boolean | string[];\n  tabSize?: number;\n  value?: string[];\n  defaultValue?: string[];\n  scrollMargin?: number[];\n  orientation?: string;\n  onSelectionChange?: (value: any, event?: any) => void;\n  onCursorChange?: (value: any, event?: any) => void;\n  onInput?: (event?: any) => void;\n  onLoad?: (editor: IEditorProps) => void;\n  onBeforeLoad?: (ace: any) => void;\n  onChange?: (value: string[], event?: any) => void;\n  onSelection?: (selectedText: string, event?: any) => void;\n  onCopy?: (value: string) => void;\n  onPaste?: (value: string) => void;\n  onFocus?: (value: Event) => void;\n  onBlur?: (value: Event) => void;\n  onScroll?: (editor: IEditorProps) => void;\n  editorProps?: IEditorProps;\n  setOptions?: IAceOptions;\n  keyboardHandler?: string;\n  commands?: ICommand[];\n  annotations?: IAnnotation[][];\n  markers?: IMarker[][];\n}\n\nexport default class SplitComponent extends React.Component<ISplitEditorProps> {\n  [index: string]: any;\n\n  public static propTypes: PropTypes.ValidationMap<ISplitEditorProps> = {\n    className: PropTypes.string,\n    debounceChangePeriod: PropTypes.number,\n    defaultValue: PropTypes.arrayOf(PropTypes.string),\n    focus: PropTypes.bool,\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.string,\n    mode: PropTypes.string,\n    name: PropTypes.string,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onCopy: PropTypes.func,\n    onFocus: PropTypes.func,\n    onInput: PropTypes.func,\n    onLoad: PropTypes.func,\n    onPaste: PropTypes.func,\n    onScroll: PropTypes.func,\n    orientation: PropTypes.string,\n    showGutter: PropTypes.bool,\n    splits: PropTypes.number,\n    theme: PropTypes.string,\n    value: PropTypes.arrayOf(PropTypes.string),\n    width: PropTypes.string,\n    onSelectionChange: PropTypes.func,\n    onCursorChange: PropTypes.func,\n    onBeforeLoad: PropTypes.func,\n    minLines: PropTypes.number,\n    maxLines: PropTypes.number,\n    readOnly: PropTypes.bool,\n    highlightActiveLine: PropTypes.bool,\n    tabSize: PropTypes.number,\n    showPrintMargin: PropTypes.bool,\n    cursorStart: PropTypes.number,\n    editorProps: PropTypes.object,\n    setOptions: PropTypes.object,\n    style: PropTypes.object,\n    scrollMargin: PropTypes.array,\n    annotations: PropTypes.array,\n    markers: PropTypes.array,\n    keyboardHandler: PropTypes.string,\n    wrapEnabled: PropTypes.bool,\n    enableBasicAutocompletion: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.array\n    ]),\n    enableLiveAutocompletion: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.array\n    ]),\n    commands: PropTypes.array\n  };\n  public static defaultProps: Partial<ISplitEditorProps> = {\n    name: \"ace-editor\",\n    focus: false,\n    orientation: \"beside\",\n    splits: 2,\n    mode: \"\",\n    theme: \"\",\n    height: \"500px\",\n    width: \"500px\",\n    value: [],\n    fontSize: 12,\n    showGutter: true,\n    onChange: null,\n    onPaste: null,\n    onLoad: null,\n    onScroll: null,\n    minLines: null,\n    maxLines: null,\n    readOnly: false,\n    highlightActiveLine: true,\n    showPrintMargin: true,\n    tabSize: 4,\n    cursorStart: 1,\n    editorProps: {},\n    style: {},\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    wrapEnabled: false,\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false\n  };\n  public editor: IAceEditorClass;\n  public refEditor: HTMLElement;\n  public silent: boolean;\n  public split: IAceEditorClass;\n  public splitEditor: IAceEditorClass;\n  public debounce: (fn: any, delay: number) => (...args: any) => void;\n  constructor(props: ISplitEditorProps) {\n    super(props);\n    editorEvents.forEach(method => {\n      this[method] = this[method].bind(this);\n    });\n    this.debounce = debounce;\n  }\n  public isInShadow(node: HTMLElement): boolean {\n    let parent = node && node.parentNode;\n    while (parent) {\n      if (parent.toString() === \"[object ShadowRoot]\") {\n        return true;\n      }\n      parent = parent.parentNode;\n    }\n    return false;\n  }\n  public componentDidMount() {\n    const {\n      className,\n      onBeforeLoad,\n      mode,\n      focus,\n      theme,\n      fontSize,\n      value,\n      defaultValue,\n      cursorStart,\n      showGutter,\n      wrapEnabled,\n      showPrintMargin,\n      scrollMargin = [0, 0, 0, 0],\n      keyboardHandler,\n      onLoad,\n      commands,\n      annotations,\n      markers,\n      splits\n    } = this.props;\n\n    this.editor = ace.edit(this.refEditor) as IAceEditor;\n    if (this.isInShadow(this.refEditor)) {\n      this.editor.renderer.attachToShadowRoot();\n    }\n    this.editor.setTheme(`ace/theme/${theme}`);\n\n    if (onBeforeLoad) {\n      onBeforeLoad(ace);\n    }\n\n    const editorProps = Object.keys(this.props.editorProps);\n\n    const split = new Split(\n      this.editor.container,\n      `ace/theme/${theme}`,\n      splits\n    );\n    this.editor.env.split = split;\n\n    this.splitEditor = split.getEditor(0);\n    this.split = split;\n    // in a split scenario we don't want a print margin for the entire application\n    this.editor.setShowPrintMargin(false);\n    this.editor.renderer.setShowGutter(false);\n    // get a list of possible options to avoid 'misspelled option errors'\n    const availableOptions = this.splitEditor.$options;\n    if (this.props.debounceChangePeriod) {\n      this.onChange = this.debounce(\n        this.onChange,\n        this.props.debounceChangePeriod\n      );\n    }\n    split.forEach((editor: IAceEditorClass, index: number) => {\n      for (let i = 0; i < editorProps.length; i++) {\n        editor[editorProps[i]] = this.props.editorProps[editorProps[i]];\n      }\n      const defaultValueForEditor = get(defaultValue, index);\n      const valueForEditor = get(value, index, \"\");\n      editor.session.setUndoManager(new ace.UndoManager());\n      editor.setTheme(`ace/theme/${theme}`);\n      editor.renderer.setScrollMargin(\n        scrollMargin[0],\n        scrollMargin[1],\n        scrollMargin[2],\n        scrollMargin[3]\n      );\n      editor.getSession().setMode(`ace/mode/${mode}`);\n      editor.setFontSize(fontSize as any);\n      editor.renderer.setShowGutter(showGutter);\n      editor.getSession().setUseWrapMode(wrapEnabled);\n      editor.setShowPrintMargin(showPrintMargin);\n      editor.on(\"focus\", this.onFocus);\n      editor.on(\"blur\", this.onBlur);\n      editor.on(\"input\" as any, this.onInput);\n      editor.on(\"copy\", this.onCopy as any);\n      editor.on(\"paste\", this.onPaste as any);\n      editor.on(\"change\", this.onChange);\n      editor\n        .getSession()\n        .selection.on(\"changeSelection\", this.onSelectionChange);\n      editor.getSession().selection.on(\"changeCursor\", this.onCursorChange);\n      editor.session.on(\"changeScrollTop\", this.onScroll);\n      editor.setValue(\n        defaultValueForEditor === undefined\n          ? valueForEditor\n          : defaultValueForEditor,\n        cursorStart\n      );\n      const newAnnotations = get(annotations, index, []);\n      const newMarkers = get(markers, index, []);\n      editor.getSession().setAnnotations(newAnnotations);\n      if (newMarkers && newMarkers.length > 0) {\n        this.handleMarkers(newMarkers, editor);\n      }\n\n      for (let i = 0; i < editorOptions.length; i++) {\n        const option = editorOptions[i];\n        if (availableOptions.hasOwnProperty(option)) {\n          editor.setOption(option as any, this.props[option]);\n        } else if (this.props[option]) {\n          console.warn(\n            `ReaceAce: editor option ${option} was activated but not found. Did you need to import a related tool or did you possibly mispell the option?`\n          );\n        }\n      }\n      this.handleOptions(this.props, editor);\n\n      if (Array.isArray(commands)) {\n        commands.forEach(command => {\n          if (typeof command.exec === \"string\") {\n            (editor.commands as any).bindKey(command.bindKey, command.exec);\n          } else {\n            (editor.commands as any).addCommand(command);\n          }\n        });\n      }\n\n      if (keyboardHandler) {\n        editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n      }\n    });\n\n    if (className) {\n      this.refEditor.className += \" \" + className;\n    }\n\n    if (focus) {\n      this.splitEditor.focus();\n    }\n\n    const sp = this.editor.env.split;\n    sp.setOrientation(\n      this.props.orientation === \"below\" ? sp.BELOW : sp.BESIDE\n    );\n    sp.resize(true);\n    if (onLoad) {\n      onLoad(sp);\n    }\n  }\n\n  public componentDidUpdate(prevProps: ISplitEditorProps) {\n    const oldProps = prevProps;\n    const nextProps = this.props;\n\n    const split = this.editor.env.split;\n\n    if (nextProps.splits !== oldProps.splits) {\n      split.setSplits(nextProps.splits);\n    }\n\n    if (nextProps.orientation !== oldProps.orientation) {\n      split.setOrientation(\n        nextProps.orientation === \"below\" ? split.BELOW : split.BESIDE\n      );\n    }\n\n    split.forEach((editor: IAceEditorClass, index: number) => {\n      if (nextProps.mode !== oldProps.mode) {\n        editor.getSession().setMode(\"ace/mode/\" + nextProps.mode);\n      }\n      if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n        if (nextProps.keyboardHandler) {\n          editor.setKeyboardHandler(\n            \"ace/keyboard/\" + nextProps.keyboardHandler\n          );\n        } else {\n          editor.setKeyboardHandler(null);\n        }\n      }\n      if (nextProps.fontSize !== oldProps.fontSize) {\n        editor.setFontSize(nextProps.fontSize as any);\n      }\n      if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n        editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n      }\n      if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n        editor.setShowPrintMargin(nextProps.showPrintMargin);\n      }\n      if (nextProps.showGutter !== oldProps.showGutter) {\n        editor.renderer.setShowGutter(nextProps.showGutter);\n      }\n\n      for (let i = 0; i < editorOptions.length; i++) {\n        const option = editorOptions[i];\n        if (nextProps[option] !== oldProps[option]) {\n          editor.setOption(option as any, nextProps[option]);\n        }\n      }\n      if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n        this.handleOptions(nextProps, editor);\n      }\n      const nextValue = get(nextProps.value, index, \"\");\n      if (editor.getValue() !== nextValue) {\n        // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n        this.silent = true;\n        const pos = (editor.session.selection as any).toJSON();\n        editor.setValue(nextValue, nextProps.cursorStart);\n        (editor.session.selection as any).fromJSON(pos);\n        this.silent = false;\n      }\n      const newAnnotations = get(nextProps.annotations, index, []);\n      const oldAnnotations = get(oldProps.annotations, index, []);\n      if (!isEqual(newAnnotations, oldAnnotations)) {\n        editor.getSession().setAnnotations(newAnnotations);\n      }\n\n      const newMarkers = get(nextProps.markers, index, []);\n      const oldMarkers = get(oldProps.markers, index, []);\n      if (!isEqual(newMarkers, oldMarkers) && Array.isArray(newMarkers)) {\n        this.handleMarkers(newMarkers, editor);\n      }\n    });\n\n    if (nextProps.className !== oldProps.className) {\n      const appliedClasses = this.refEditor.className;\n      const appliedClassesArray = appliedClasses.trim().split(\" \");\n      const oldClassesArray = oldProps.className.trim().split(\" \");\n      oldClassesArray.forEach(oldClass => {\n        const index = appliedClassesArray.indexOf(oldClass);\n        appliedClassesArray.splice(index, 1);\n      });\n      this.refEditor.className =\n        \" \" + nextProps.className + \" \" + appliedClassesArray.join(\" \");\n    }\n\n    if (nextProps.theme !== oldProps.theme) {\n      split.setTheme(\"ace/theme/\" + nextProps.theme);\n    }\n\n    if (nextProps.focus && !oldProps.focus) {\n      this.splitEditor.focus();\n    }\n    if (\n      nextProps.height !== this.props.height ||\n      nextProps.width !== this.props.width\n    ) {\n      this.editor.resize();\n    }\n  }\n\n  public componentWillUnmount() {\n    this.editor.destroy();\n    this.editor = null;\n  }\n\n  public onChange(event: any) {\n    if (this.props.onChange && !this.silent) {\n      const value: any = [];\n      this.editor.env.split.forEach((editor: IAceEditorClass) => {\n        value.push(editor.getValue());\n      });\n      this.props.onChange(value, event);\n    }\n  }\n\n  public onSelectionChange(event: any) {\n    if (this.props.onSelectionChange) {\n      const value: any = [];\n      this.editor.env.split.forEach((editor: IAceEditorClass) => {\n        value.push(editor.getSelection());\n      });\n      this.props.onSelectionChange(value, event);\n    }\n  }\n  public onCursorChange(event: any) {\n    if (this.props.onCursorChange) {\n      const value: any = [];\n      this.editor.env.split.forEach((editor: IAceEditorClass) => {\n        value.push(editor.getSelection());\n      });\n      this.props.onCursorChange(value, event);\n    }\n  }\n  public onFocus(event: any) {\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  }\n\n  public onInput(event: any) {\n    if (this.props.onInput) {\n      this.props.onInput(event);\n    }\n  }\n\n  public onBlur(event: any) {\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  }\n\n  public onCopy(text: string) {\n    if (this.props.onCopy) {\n      this.props.onCopy(text);\n    }\n  }\n\n  public onPaste(text: string) {\n    if (this.props.onPaste) {\n      this.props.onPaste(text);\n    }\n  }\n\n  public onScroll() {\n    if (this.props.onScroll) {\n      this.props.onScroll(this.editor);\n    }\n  }\n\n  public handleOptions(props: ISplitEditorProps, editor: IAceEditorClass) {\n    const setOptions = Object.keys(props.setOptions);\n    for (let y = 0; y < setOptions.length; y++) {\n      editor.setOption(setOptions[y] as any, props.setOptions[setOptions[y]]);\n    }\n  }\n\n  public handleMarkers(markers: IMarker[], editor: IAceEditorClass) {\n    // remove foreground markers\n    let currentMarkers = editor.getSession().getMarkers(true);\n    for (const i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // remove background markers\n    currentMarkers = editor.getSession().getMarkers(false);\n    for (const i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // add new markers\n    markers.forEach(\n      ({\n        startRow,\n        startCol,\n        endRow,\n        endCol,\n        className,\n        type,\n        inFront = false\n      }) => {\n        const range = new Range(startRow, startCol, endRow, endCol);\n        editor\n          .getSession()\n          .addMarker(range as any, className, type as any, inFront);\n      }\n    );\n  }\n\n  public updateRef(item: HTMLElement) {\n    this.refEditor = item;\n  }\n\n  public render() {\n    const { name, width, height, style } = this.props;\n    const divStyle = { width, height, ...style };\n    return <div ref={this.updateRef} id={name} style={divStyle} />;\n  }\n}\n"],"names":["ace","define","require","exports","module","Split","oop","EventEmitter","Editor","Renderer","VirtualRenderer","EditSession","implement","this","$createEditor","el","document","createElement","className","$editorCSS","style","cssText","$container","appendChild","editor","$theme","on","_emit","bind","$editors","push","setFontSize","$fontSize","setSplits","splits","$splits","length","container","removeChild","resize","getSplits","getEditor","idx","getCurrentEditor","$cEditor","focus","blur","setTheme","theme","forEach","setKeyboardHandler","keybinding","callback","scope","size","$cloneSession","session","s","getDocument","getMode","undoManager","getUndoManager","setUndoManager","setTabSize","getTabSize","setUseSoftTabs","getUseSoftTabs","setOverwrite","getOverwrite","setBreakpoints","getBreakpoints","setUseWrapMode","getUseWrapMode","setUseWorker","getUseWorker","setWrapLimitRange","$wrapLimitRange","min","max","$foldData","$cloneFoldData","setSession","isUsed","some","getOrientation","$orientation","setOrientation","orientation","width","clientWidth","height","clientHeight","BESIDE","editorWidth","i","top","left","editorHeight","call","BELOW","prototype","m","diff_match_patch","Diff_Timeout","Diff_EditCost","Match_Threshold","Match_Distance","Patch_DeleteThreshold","Patch_Margin","Match_MaxBits","DIFF_DELETE","Diff","op","text","diff_main","text1","text2","opt_checklines","opt_deadline","Number","MAX_VALUE","Date","getTime","deadline","Error","checklines","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","diff_compute_","unshift","diff_cleanupMerge","longtext","shorttext","indexOf","hm","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","concat","diff_lineMode_","diff_bisect_","a","diff_linesToChars_","chars1","chars2","linearray","lineArray","diff_charsToLines_","diff_cleanupSemantic","pointer","count_delete","count_insert","text_delete","text_insert","splice","subDiff","j","pop","text1_length","text2_length","max_d","Math","ceil","v_offset","v_length","v1","Array","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","y","text1a","text2a","text1b","text2b","diffsb","lineHash","diff_linesToCharsMunge_","chars","lineStart","lineEnd","lineArrayLength","line","hasOwnProperty","undefined","String","fromCharCode","maxLines","charCodeAt","join","pointermin","pointermax","pointermid","pointerstart","floor","pointerend","diff_commonOverlap_","text_length","best","pattern","found","dmp","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","best_common","prefixLength","suffixLength","hm1","hm2","changes","equalities","equalitiesLength","lastEquality","length_insertions1","length_deletions1","length_insertions2","length_deletions2","diff_cleanupSemanticLossless","deletion","insertion","overlap_length1","overlap_length2","diff_cleanupSemanticScore_","one","two","char1","char2","nonAlphaNumeric1","match","nonAlphaNumericRegex_","nonAlphaNumeric2","whitespace1","whitespaceRegex_","whitespace2","lineBreak1","linebreakRegex_","lineBreak2","blankLine1","blanklineEndRegex_","blankLine2","blanklineStartRegex_","equality1","edit","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","score","diff_cleanupEfficiency","pre_ins","pre_del","post_ins","post_del","diff_xIndex","loc","last_chars1","last_chars2","diff_prettyHtml","html","pattern_amp","pattern_lt","pattern_gt","pattern_para","replace","diff_text1","diff_text2","diff_levenshtein","levenshtein","insertions","deletions","data","diff_toDelta","encodeURI","diff_fromDelta","diffsLength","tokens","split","param","decodeURI","ex","n","parseInt","isNaN","match_main","match_bitap_","match_alphabet_","match_bitapScore_","e","accuracy","proximity","abs","score_threshold","best_loc","lastIndexOf","bin_min","bin_mid","matchmask","last_rd","bin_max","start","finish","rd","charMatch","patch_addContext_","patch","start2","length1","padding","prefix","suffix","start1","length2","patch_make","opt_b","opt_c","patches","patch_obj","patchDiffLength","char_count1","char_count2","prepatch_text","postpatch_text","diff_type","diff_text","patch_deepCopy","patchesCopy","patchCopy","patch_apply","nullPadding","patch_addPadding","patch_splitMax","results","start_loc","expected_loc","end_loc","index2","index1","mod","paddingLength","extraLength","patch_size","bigpatch","precontext","empty","shift","postcontext","patch_toText","patch_fromText","textline","textPointer","patchHeader","sign","toString","HASH_UNDEFINED","INFINITY","funcTag","genTag","symbolTag","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","reIsHostCtor","freeGlobal","global","Object","freeSelf","self","root","Function","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","uid","exec","keys","IE_PROTO","funcToString","objectToString","reIsNative","RegExp","Symbol","Map","getNative","nativeCreate","symbolProto","symbolToString","Hash","entries","index","clear","entry","set","ListCache","MapCache","assocIndexOf","array","key","value","other","baseGet","object","path","isArray","type","isSymbol","test","isKey","stringToPath","toKey","baseIsNative","isObject","func","tag","isFunction","result","isHostObject","toSource","getMapData","map","__data__","isKeyable","getValue","has","get","memoize","string","baseToString","number","quote","resolver","TypeError","memoized","args","arguments","apply","cache","Cache","isObjectLike","defaultValue","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","MAX_SAFE_INTEGER","argsTag","arrayTag","asyncTag","boolTag","dateTag","errorTag","mapTag","numberTag","nullTag","objectTag","promiseTag","proxyTag","regexpTag","setTag","stringTag","undefinedTag","weakMapTag","arrayBufferTag","dataViewTag","reIsUint","typedArrayTags","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","nodeIsTypedArray","isTypedArray","arraySome","predicate","mapToArray","setToArray","transform","nativeObjectToString","Buffer","Uint8Array","propertyIsEnumerable","symToStringTag","toStringTag","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","arg","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolValueOf","valueOf","SetCache","values","add","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","iteratee","baseTimes","isIndex","eq","baseGetTag","isOwn","unmasked","getRawTag","baseIsArguments","baseIsEqual","bitmask","customizer","stack","equalFunc","objIsArr","othIsArr","objTag","getTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","byteLength","byteOffset","buffer","name","message","convert","isPartial","stacked","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","getAllKeys","objLength","othProps","othLength","skipCtor","objValue","othValue","compared","objCtor","constructor","othCtor","equalObjects","baseIsEqualDeep","isMasked","baseKeys","Ctor","proto","isPrototype","arrLength","seen","arrValue","othIndex","keysFunc","symbolsFunc","offset","arrayPush","baseGetAllKeys","getSymbols","pairs","LARGE_ARRAY_SIZE","resIndex","arrayFilter","symbol","ArrayBuffer","resolve","ctorString","isLength","baseUnary","ace_builds_1","PropTypes","React","isEqual","editorOptions_1","getAceInstance","ReactAce","_super","props","_this","editorEvents","method","debounce","__extends","isInShadow","node","parent","parentNode","componentDidMount","_a","onBeforeLoad","onValidate","mode","fontSize","lineHeight","showGutter","wrapEnabled","showPrintMargin","_b","scrollMargin","keyboardHandler","onLoad","commands","annotations","markers","placeholder","refEditor","editorProps","debounceChangePeriod","onChange","renderer","setScrollMargin","attachToShadowRoot","getSession","setMode","updateFontSize","setValue","navigateToFileEnd","navigateFileEnd","setShowGutter","setShowPrintMargin","onFocus","onBlur","onCopy","onPaste","onInput","updatePlaceholder","selection","onSelectionChange","onCursorChange","getAnnotations","onScroll","setAnnotations","handleMarkers","availableOptions","$options","editorOptions","option","setOption","console","warn","handleOptions","command","bindKey","addCommand","componentDidUpdate","prevProps","oldProps","nextProps","appliedClassesArray_1","trim","oldClass","valueChanged","silent","pos","toJSON","cursorStart","fromJSON","setOptions","handleScrollMargins","margins","componentWillUnmount","destroy","event","getSelection","currentMarkers","getMarkers","removeMarker","id","clazz","startRow","startCol","endRow","endCol","inFront","range","Range","addMarker","showPlaceholder","placeholderNode","scroller","textContent","position","zIndex","updateRef","item","render","divStyle","__assign","ref","propTypes","oneOfType","bool","minLines","readOnly","highlightActiveLine","tabSize","enableSnippets","enableBasicAutocompletion","enableLiveAutocompletion","defaultProps","Component","split_1","DiffMatchPatch","DiffComponent","state","diff","setState","lhString","rhString","diffedLines","generateDiffedLines","setCodeMarkers","C","right","cursor","chunk","chunkType","lines","firstChar","lastChar","linesToHighlight","startLine","endLine","codeEditorSettings","newMarkerSet","markerObj","default","window","acequire","fn","delay","timer","context","clearTimeout","setTimeout","ace_1","diff_1","ext_split_1","SplitComponent","env","splitEditor","defaultValueForEditor","valueForEditor","UndoManager","newAnnotations","newMarkers","sp","nextValue","oldAnnotations","oldMarkers","value_1","value_2","value_3","arrayOf"],"sourceRoot":""}